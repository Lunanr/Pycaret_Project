2023-05-16 14:16:24,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 14:16:24,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 14:16:24,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 14:16:24,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 14:16:25,511:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-16 14:16:26,024:INFO:PyCaret RegressionExperiment
2023-05-16 14:16:26,024:INFO:Logging name: reg-default-name
2023-05-16 14:16:26,024:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-16 14:16:26,024:INFO:version 3.0.1
2023-05-16 14:16:26,024:INFO:Initializing setup()
2023-05-16 14:16:26,025:INFO:self.USI: 922b
2023-05-16 14:16:26,025:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'seed', '_available_plots', 'data', 'USI', 'html_param', 'gpu_param', '_ml_usecase', 'transform_target_param', 'X_train', 'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'target_param', 'log_plots_param', 'X', 'y_test', 'y', 'pipeline', 'logging_param', 'y_train', 'exp_name_log', 'X_test', 'exp_id', 'fold_generator'}
2023-05-16 14:16:26,025:INFO:Checking environment
2023-05-16 14:16:26,025:INFO:python_version: 3.9.13
2023-05-16 14:16:26,025:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 14:16:26,025:INFO:machine: AMD64
2023-05-16 14:16:26,025:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 14:16:26,025:INFO:Memory: svmem(total=7968444416, available=1928646656, percent=75.8, used=6039797760, free=1928646656)
2023-05-16 14:16:26,025:INFO:Physical Core: 6
2023-05-16 14:16:26,025:INFO:Logical Core: 12
2023-05-16 14:16:26,025:INFO:Checking libraries
2023-05-16 14:16:26,025:INFO:System:
2023-05-16 14:16:26,025:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 14:16:26,025:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 14:16:26,025:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 14:16:26,025:INFO:PyCaret required dependencies:
2023-05-16 14:16:26,025:INFO:                 pip: 22.2.2
2023-05-16 14:16:26,025:INFO:          setuptools: 63.4.1
2023-05-16 14:16:26,025:INFO:             pycaret: 3.0.1
2023-05-16 14:16:26,025:INFO:             IPython: 7.31.1
2023-05-16 14:16:26,025:INFO:          ipywidgets: 7.6.5
2023-05-16 14:16:26,025:INFO:                tqdm: 4.64.1
2023-05-16 14:16:26,025:INFO:               numpy: 1.21.6
2023-05-16 14:16:26,025:INFO:              pandas: 1.4.4
2023-05-16 14:16:26,025:INFO:              jinja2: 2.11.3
2023-05-16 14:16:26,026:INFO:               scipy: 1.9.1
2023-05-16 14:16:26,026:INFO:              joblib: 1.2.0
2023-05-16 14:16:26,026:INFO:             sklearn: 1.0.2
2023-05-16 14:16:26,026:INFO:                pyod: 1.0.9
2023-05-16 14:16:26,026:INFO:            imblearn: 0.10.1
2023-05-16 14:16:26,026:INFO:   category_encoders: 2.6.1
2023-05-16 14:16:26,026:INFO:            lightgbm: 3.3.5
2023-05-16 14:16:26,026:INFO:               numba: 0.55.1
2023-05-16 14:16:26,026:INFO:            requests: 2.28.1
2023-05-16 14:16:26,026:INFO:          matplotlib: 3.5.2
2023-05-16 14:16:26,026:INFO:          scikitplot: 0.3.7
2023-05-16 14:16:26,026:INFO:         yellowbrick: 1.5
2023-05-16 14:16:26,026:INFO:              plotly: 5.9.0
2023-05-16 14:16:26,026:INFO:             kaleido: 0.2.1
2023-05-16 14:16:26,026:INFO:         statsmodels: 0.13.2
2023-05-16 14:16:26,026:INFO:              sktime: 0.17.0
2023-05-16 14:16:26,026:INFO:               tbats: 1.1.3
2023-05-16 14:16:26,026:INFO:            pmdarima: 2.0.3
2023-05-16 14:16:26,026:INFO:              psutil: 5.9.0
2023-05-16 14:16:26,026:INFO:PyCaret optional dependencies:
2023-05-16 14:16:26,038:INFO:                shap: Not installed
2023-05-16 14:16:26,038:INFO:           interpret: Not installed
2023-05-16 14:16:26,038:INFO:                umap: Not installed
2023-05-16 14:16:26,038:INFO:    pandas_profiling: Not installed
2023-05-16 14:16:26,039:INFO:  explainerdashboard: Not installed
2023-05-16 14:16:26,039:INFO:             autoviz: Not installed
2023-05-16 14:16:26,039:INFO:           fairlearn: Not installed
2023-05-16 14:16:26,039:INFO:             xgboost: Not installed
2023-05-16 14:16:26,039:INFO:            catboost: Not installed
2023-05-16 14:16:26,039:INFO:              kmodes: Not installed
2023-05-16 14:16:26,039:INFO:             mlxtend: Not installed
2023-05-16 14:16:26,039:INFO:       statsforecast: Not installed
2023-05-16 14:16:26,039:INFO:        tune_sklearn: Not installed
2023-05-16 14:16:26,039:INFO:                 ray: Not installed
2023-05-16 14:16:26,039:INFO:            hyperopt: Not installed
2023-05-16 14:16:26,039:INFO:              optuna: Not installed
2023-05-16 14:16:26,039:INFO:               skopt: Not installed
2023-05-16 14:16:26,039:INFO:              mlflow: Not installed
2023-05-16 14:16:26,039:INFO:              gradio: Not installed
2023-05-16 14:16:26,039:INFO:             fastapi: Not installed
2023-05-16 14:16:26,039:INFO:             uvicorn: Not installed
2023-05-16 14:16:26,039:INFO:              m2cgen: Not installed
2023-05-16 14:16:26,039:INFO:           evidently: Not installed
2023-05-16 14:16:26,039:INFO:               fugue: Not installed
2023-05-16 14:16:26,039:INFO:           streamlit: 1.20.0
2023-05-16 14:16:26,039:INFO:             prophet: Not installed
2023-05-16 14:16:26,039:INFO:None
2023-05-16 14:16:26,039:INFO:Set up data.
2023-05-16 14:16:26,044:INFO:Set up train/test split.
2023-05-16 14:16:26,047:INFO:Set up index.
2023-05-16 14:16:26,047:INFO:Set up folding strategy.
2023-05-16 14:16:26,047:INFO:Assigning column types.
2023-05-16 14:16:26,051:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 14:16:26,051:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,056:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,060:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,120:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,165:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,189:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,194:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,199:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,256:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,302:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-16 14:16:26,308:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,313:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,371:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,417:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,422:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,427:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,486:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,533:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,534:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-16 14:16:26,543:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,659:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,762:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-16 14:16:26,828:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,942:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:16:26,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:26,989:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 14:16:27,056:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:27,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,171:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:16:27,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,217:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-16 14:16:27,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,450:INFO:Preparing preprocessing pipeline...
2023-05-16 14:16:27,450:INFO:Set up simple imputation.
2023-05-16 14:16:27,453:INFO:Set up encoding of ordinal features.
2023-05-16 14:16:27,455:INFO:Set up encoding of categorical features.
2023-05-16 14:16:27,522:INFO:Finished creating preprocessing pipeline.
2023-05-16 14:16:27,563:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-05-16 14:16:27,563:INFO:Creating final display dataframe.
2023-05-16 14:16:27,740:INFO:Setup _display_container:                     Description             Value
0                    Session id              3122
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              922b
2023-05-16 14:16:27,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:16:27,984:INFO:setup() successfully completed in 2.22s...............
2023-05-16 14:17:54,534:INFO:PyCaret RegressionExperiment
2023-05-16 14:17:54,534:INFO:Logging name: reg-default-name
2023-05-16 14:17:54,534:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-16 14:17:54,534:INFO:version 3.0.1
2023-05-16 14:17:54,535:INFO:Initializing setup()
2023-05-16 14:17:54,535:INFO:self.USI: 5365
2023-05-16 14:17:54,535:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'seed', '_available_plots', 'data', 'USI', 'html_param', 'gpu_param', '_ml_usecase', 'transform_target_param', 'X_train', 'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'target_param', 'log_plots_param', 'X', 'y_test', 'y', 'pipeline', 'logging_param', 'y_train', 'exp_name_log', 'X_test', 'exp_id', 'fold_generator'}
2023-05-16 14:17:54,535:INFO:Checking environment
2023-05-16 14:17:54,535:INFO:python_version: 3.9.13
2023-05-16 14:17:54,535:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 14:17:54,535:INFO:machine: AMD64
2023-05-16 14:17:54,535:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 14:17:54,535:INFO:Memory: svmem(total=7968444416, available=1770299392, percent=77.8, used=6198145024, free=1770299392)
2023-05-16 14:17:54,535:INFO:Physical Core: 6
2023-05-16 14:17:54,535:INFO:Logical Core: 12
2023-05-16 14:17:54,535:INFO:Checking libraries
2023-05-16 14:17:54,535:INFO:System:
2023-05-16 14:17:54,535:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 14:17:54,535:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 14:17:54,535:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 14:17:54,535:INFO:PyCaret required dependencies:
2023-05-16 14:17:54,535:INFO:                 pip: 22.2.2
2023-05-16 14:17:54,535:INFO:          setuptools: 63.4.1
2023-05-16 14:17:54,535:INFO:             pycaret: 3.0.1
2023-05-16 14:17:54,535:INFO:             IPython: 7.31.1
2023-05-16 14:17:54,535:INFO:          ipywidgets: 7.6.5
2023-05-16 14:17:54,536:INFO:                tqdm: 4.64.1
2023-05-16 14:17:54,536:INFO:               numpy: 1.21.6
2023-05-16 14:17:54,536:INFO:              pandas: 1.4.4
2023-05-16 14:17:54,536:INFO:              jinja2: 2.11.3
2023-05-16 14:17:54,536:INFO:               scipy: 1.9.1
2023-05-16 14:17:54,536:INFO:              joblib: 1.2.0
2023-05-16 14:17:54,536:INFO:             sklearn: 1.0.2
2023-05-16 14:17:54,536:INFO:                pyod: 1.0.9
2023-05-16 14:17:54,536:INFO:            imblearn: 0.10.1
2023-05-16 14:17:54,536:INFO:   category_encoders: 2.6.1
2023-05-16 14:17:54,536:INFO:            lightgbm: 3.3.5
2023-05-16 14:17:54,536:INFO:               numba: 0.55.1
2023-05-16 14:17:54,536:INFO:            requests: 2.28.1
2023-05-16 14:17:54,536:INFO:          matplotlib: 3.5.2
2023-05-16 14:17:54,536:INFO:          scikitplot: 0.3.7
2023-05-16 14:17:54,536:INFO:         yellowbrick: 1.5
2023-05-16 14:17:54,536:INFO:              plotly: 5.9.0
2023-05-16 14:17:54,536:INFO:             kaleido: 0.2.1
2023-05-16 14:17:54,536:INFO:         statsmodels: 0.13.2
2023-05-16 14:17:54,536:INFO:              sktime: 0.17.0
2023-05-16 14:17:54,536:INFO:               tbats: 1.1.3
2023-05-16 14:17:54,536:INFO:            pmdarima: 2.0.3
2023-05-16 14:17:54,536:INFO:              psutil: 5.9.0
2023-05-16 14:17:54,536:INFO:PyCaret optional dependencies:
2023-05-16 14:17:54,536:INFO:                shap: Not installed
2023-05-16 14:17:54,536:INFO:           interpret: Not installed
2023-05-16 14:17:54,536:INFO:                umap: Not installed
2023-05-16 14:17:54,536:INFO:    pandas_profiling: Not installed
2023-05-16 14:17:54,536:INFO:  explainerdashboard: Not installed
2023-05-16 14:17:54,537:INFO:             autoviz: Not installed
2023-05-16 14:17:54,537:INFO:           fairlearn: Not installed
2023-05-16 14:17:54,537:INFO:             xgboost: Not installed
2023-05-16 14:17:54,537:INFO:            catboost: Not installed
2023-05-16 14:17:54,537:INFO:              kmodes: Not installed
2023-05-16 14:17:54,537:INFO:             mlxtend: Not installed
2023-05-16 14:17:54,537:INFO:       statsforecast: Not installed
2023-05-16 14:17:54,537:INFO:        tune_sklearn: Not installed
2023-05-16 14:17:54,537:INFO:                 ray: Not installed
2023-05-16 14:17:54,537:INFO:            hyperopt: Not installed
2023-05-16 14:17:54,537:INFO:              optuna: Not installed
2023-05-16 14:17:54,537:INFO:               skopt: Not installed
2023-05-16 14:17:54,537:INFO:              mlflow: Not installed
2023-05-16 14:17:54,537:INFO:              gradio: Not installed
2023-05-16 14:17:54,537:INFO:             fastapi: Not installed
2023-05-16 14:17:54,537:INFO:             uvicorn: Not installed
2023-05-16 14:17:54,537:INFO:              m2cgen: Not installed
2023-05-16 14:17:54,537:INFO:           evidently: Not installed
2023-05-16 14:17:54,537:INFO:               fugue: Not installed
2023-05-16 14:17:54,537:INFO:           streamlit: 1.20.0
2023-05-16 14:17:54,537:INFO:             prophet: Not installed
2023-05-16 14:17:54,537:INFO:None
2023-05-16 14:17:54,537:INFO:Set up data.
2023-05-16 14:17:54,541:INFO:Set up train/test split.
2023-05-16 14:17:54,544:INFO:Set up index.
2023-05-16 14:17:54,545:INFO:Set up folding strategy.
2023-05-16 14:17:54,545:INFO:Assigning column types.
2023-05-16 14:17:54,547:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 14:17:54,547:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,552:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,557:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,659:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:54,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:54,661:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,665:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,670:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:54,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:54,774:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-16 14:17:54,779:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,783:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,841:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:54,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:54,893:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,897:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:17:54,955:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,003:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-16 14:17:55,012:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,125:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,183:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,229:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,231:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-16 14:17:55,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,419:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,466:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 14:17:55,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,649:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:17:55,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,696:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-16 14:17:55,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:55,941:INFO:Preparing preprocessing pipeline...
2023-05-16 14:17:55,942:INFO:Set up simple imputation.
2023-05-16 14:17:55,944:INFO:Set up encoding of ordinal features.
2023-05-16 14:17:55,947:INFO:Set up encoding of categorical features.
2023-05-16 14:17:56,023:INFO:Finished creating preprocessing pipeline.
2023-05-16 14:17:56,070:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-05-16 14:17:56,070:INFO:Creating final display dataframe.
2023-05-16 14:17:56,372:INFO:Setup _display_container:                     Description             Value
0                    Session id              7801
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              5365
2023-05-16 14:17:56,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:56,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:56,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:56,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:17:56,628:INFO:setup() successfully completed in 2.27s...............
2023-05-16 14:18:17,782:INFO:PyCaret RegressionExperiment
2023-05-16 14:18:17,782:INFO:Logging name: reg-default-name
2023-05-16 14:18:17,782:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-16 14:18:17,782:INFO:version 3.0.1
2023-05-16 14:18:17,782:INFO:Initializing setup()
2023-05-16 14:18:17,782:INFO:self.USI: da28
2023-05-16 14:18:17,782:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'seed', '_available_plots', 'data', 'USI', 'html_param', 'gpu_param', '_ml_usecase', 'transform_target_param', 'X_train', 'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'target_param', 'log_plots_param', 'X', 'y_test', 'y', 'pipeline', 'logging_param', 'y_train', 'exp_name_log', 'X_test', 'exp_id', 'fold_generator'}
2023-05-16 14:18:17,782:INFO:Checking environment
2023-05-16 14:18:17,782:INFO:python_version: 3.9.13
2023-05-16 14:18:17,782:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 14:18:17,783:INFO:machine: AMD64
2023-05-16 14:18:17,783:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 14:18:17,783:INFO:Memory: svmem(total=7968444416, available=1831559168, percent=77.0, used=6136885248, free=1831559168)
2023-05-16 14:18:17,783:INFO:Physical Core: 6
2023-05-16 14:18:17,783:INFO:Logical Core: 12
2023-05-16 14:18:17,783:INFO:Checking libraries
2023-05-16 14:18:17,783:INFO:System:
2023-05-16 14:18:17,783:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 14:18:17,783:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 14:18:17,783:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 14:18:17,783:INFO:PyCaret required dependencies:
2023-05-16 14:18:17,783:INFO:                 pip: 22.2.2
2023-05-16 14:18:17,783:INFO:          setuptools: 63.4.1
2023-05-16 14:18:17,783:INFO:             pycaret: 3.0.1
2023-05-16 14:18:17,783:INFO:             IPython: 7.31.1
2023-05-16 14:18:17,783:INFO:          ipywidgets: 7.6.5
2023-05-16 14:18:17,783:INFO:                tqdm: 4.64.1
2023-05-16 14:18:17,783:INFO:               numpy: 1.21.6
2023-05-16 14:18:17,783:INFO:              pandas: 1.4.4
2023-05-16 14:18:17,783:INFO:              jinja2: 2.11.3
2023-05-16 14:18:17,783:INFO:               scipy: 1.9.1
2023-05-16 14:18:17,783:INFO:              joblib: 1.2.0
2023-05-16 14:18:17,783:INFO:             sklearn: 1.0.2
2023-05-16 14:18:17,783:INFO:                pyod: 1.0.9
2023-05-16 14:18:17,783:INFO:            imblearn: 0.10.1
2023-05-16 14:18:17,784:INFO:   category_encoders: 2.6.1
2023-05-16 14:18:17,784:INFO:            lightgbm: 3.3.5
2023-05-16 14:18:17,784:INFO:               numba: 0.55.1
2023-05-16 14:18:17,784:INFO:            requests: 2.28.1
2023-05-16 14:18:17,784:INFO:          matplotlib: 3.5.2
2023-05-16 14:18:17,784:INFO:          scikitplot: 0.3.7
2023-05-16 14:18:17,784:INFO:         yellowbrick: 1.5
2023-05-16 14:18:17,784:INFO:              plotly: 5.9.0
2023-05-16 14:18:17,784:INFO:             kaleido: 0.2.1
2023-05-16 14:18:17,784:INFO:         statsmodels: 0.13.2
2023-05-16 14:18:17,784:INFO:              sktime: 0.17.0
2023-05-16 14:18:17,784:INFO:               tbats: 1.1.3
2023-05-16 14:18:17,784:INFO:            pmdarima: 2.0.3
2023-05-16 14:18:17,784:INFO:              psutil: 5.9.0
2023-05-16 14:18:17,784:INFO:PyCaret optional dependencies:
2023-05-16 14:18:17,784:INFO:                shap: Not installed
2023-05-16 14:18:17,784:INFO:           interpret: Not installed
2023-05-16 14:18:17,784:INFO:                umap: Not installed
2023-05-16 14:18:17,784:INFO:    pandas_profiling: Not installed
2023-05-16 14:18:17,784:INFO:  explainerdashboard: Not installed
2023-05-16 14:18:17,784:INFO:             autoviz: Not installed
2023-05-16 14:18:17,784:INFO:           fairlearn: Not installed
2023-05-16 14:18:17,784:INFO:             xgboost: Not installed
2023-05-16 14:18:17,784:INFO:            catboost: Not installed
2023-05-16 14:18:17,784:INFO:              kmodes: Not installed
2023-05-16 14:18:17,784:INFO:             mlxtend: Not installed
2023-05-16 14:18:17,784:INFO:       statsforecast: Not installed
2023-05-16 14:18:17,784:INFO:        tune_sklearn: Not installed
2023-05-16 14:18:17,784:INFO:                 ray: Not installed
2023-05-16 14:18:17,785:INFO:            hyperopt: Not installed
2023-05-16 14:18:17,785:INFO:              optuna: Not installed
2023-05-16 14:18:17,785:INFO:               skopt: Not installed
2023-05-16 14:18:17,785:INFO:              mlflow: Not installed
2023-05-16 14:18:17,785:INFO:              gradio: Not installed
2023-05-16 14:18:17,785:INFO:             fastapi: Not installed
2023-05-16 14:18:17,785:INFO:             uvicorn: Not installed
2023-05-16 14:18:17,785:INFO:              m2cgen: Not installed
2023-05-16 14:18:17,785:INFO:           evidently: Not installed
2023-05-16 14:18:17,785:INFO:               fugue: Not installed
2023-05-16 14:18:17,785:INFO:           streamlit: 1.20.0
2023-05-16 14:18:17,785:INFO:             prophet: Not installed
2023-05-16 14:18:17,785:INFO:None
2023-05-16 14:18:17,785:INFO:Set up data.
2023-05-16 14:18:17,789:INFO:Set up train/test split.
2023-05-16 14:18:17,792:INFO:Set up index.
2023-05-16 14:18:17,793:INFO:Set up folding strategy.
2023-05-16 14:18:17,793:INFO:Assigning column types.
2023-05-16 14:18:17,795:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 14:18:17,795:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,800:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,805:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:17,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:17,910:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,914:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,919:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:17,977:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,023:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,024:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-16 14:18:18,028:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,033:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,091:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,137:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,142:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,147:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,251:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-16 14:18:18,261:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,320:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,365:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,376:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,483:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-16 14:18:18,551:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,597:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,725:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 14:18:18,796:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,914:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:18,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:18,962:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-16 14:18:19,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,211:INFO:Preparing preprocessing pipeline...
2023-05-16 14:18:19,211:INFO:Set up simple imputation.
2023-05-16 14:18:19,214:INFO:Set up encoding of ordinal features.
2023-05-16 14:18:19,216:INFO:Set up encoding of categorical features.
2023-05-16 14:18:19,292:INFO:Finished creating preprocessing pipeline.
2023-05-16 14:18:19,335:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-05-16 14:18:19,336:INFO:Creating final display dataframe.
2023-05-16 14:18:19,542:INFO:Setup _display_container:                     Description             Value
0                    Session id              8048
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              da28
2023-05-16 14:18:19,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:19,788:INFO:setup() successfully completed in 2.16s...............
2023-05-16 14:18:51,514:INFO:PyCaret RegressionExperiment
2023-05-16 14:18:51,514:INFO:Logging name: reg-default-name
2023-05-16 14:18:51,514:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-16 14:18:51,514:INFO:version 3.0.1
2023-05-16 14:18:51,514:INFO:Initializing setup()
2023-05-16 14:18:51,514:INFO:self.USI: f4c3
2023-05-16 14:18:51,514:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'seed', '_available_plots', 'data', 'USI', 'html_param', 'gpu_param', '_ml_usecase', 'transform_target_param', 'X_train', 'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'target_param', 'log_plots_param', 'X', 'y_test', 'y', 'pipeline', 'logging_param', 'y_train', 'exp_name_log', 'X_test', 'exp_id', 'fold_generator'}
2023-05-16 14:18:51,514:INFO:Checking environment
2023-05-16 14:18:51,514:INFO:python_version: 3.9.13
2023-05-16 14:18:51,514:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 14:18:51,514:INFO:machine: AMD64
2023-05-16 14:18:51,514:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 14:18:51,514:INFO:Memory: svmem(total=7968444416, available=1763807232, percent=77.9, used=6204637184, free=1763807232)
2023-05-16 14:18:51,514:INFO:Physical Core: 6
2023-05-16 14:18:51,515:INFO:Logical Core: 12
2023-05-16 14:18:51,515:INFO:Checking libraries
2023-05-16 14:18:51,515:INFO:System:
2023-05-16 14:18:51,515:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 14:18:51,515:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 14:18:51,515:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 14:18:51,515:INFO:PyCaret required dependencies:
2023-05-16 14:18:51,515:INFO:                 pip: 22.2.2
2023-05-16 14:18:51,515:INFO:          setuptools: 63.4.1
2023-05-16 14:18:51,515:INFO:             pycaret: 3.0.1
2023-05-16 14:18:51,515:INFO:             IPython: 7.31.1
2023-05-16 14:18:51,515:INFO:          ipywidgets: 7.6.5
2023-05-16 14:18:51,515:INFO:                tqdm: 4.64.1
2023-05-16 14:18:51,515:INFO:               numpy: 1.21.6
2023-05-16 14:18:51,515:INFO:              pandas: 1.4.4
2023-05-16 14:18:51,515:INFO:              jinja2: 2.11.3
2023-05-16 14:18:51,515:INFO:               scipy: 1.9.1
2023-05-16 14:18:51,515:INFO:              joblib: 1.2.0
2023-05-16 14:18:51,515:INFO:             sklearn: 1.0.2
2023-05-16 14:18:51,515:INFO:                pyod: 1.0.9
2023-05-16 14:18:51,515:INFO:            imblearn: 0.10.1
2023-05-16 14:18:51,515:INFO:   category_encoders: 2.6.1
2023-05-16 14:18:51,515:INFO:            lightgbm: 3.3.5
2023-05-16 14:18:51,515:INFO:               numba: 0.55.1
2023-05-16 14:18:51,515:INFO:            requests: 2.28.1
2023-05-16 14:18:51,515:INFO:          matplotlib: 3.5.2
2023-05-16 14:18:51,515:INFO:          scikitplot: 0.3.7
2023-05-16 14:18:51,516:INFO:         yellowbrick: 1.5
2023-05-16 14:18:51,516:INFO:              plotly: 5.9.0
2023-05-16 14:18:51,516:INFO:             kaleido: 0.2.1
2023-05-16 14:18:51,516:INFO:         statsmodels: 0.13.2
2023-05-16 14:18:51,516:INFO:              sktime: 0.17.0
2023-05-16 14:18:51,516:INFO:               tbats: 1.1.3
2023-05-16 14:18:51,516:INFO:            pmdarima: 2.0.3
2023-05-16 14:18:51,516:INFO:              psutil: 5.9.0
2023-05-16 14:18:51,516:INFO:PyCaret optional dependencies:
2023-05-16 14:18:51,516:INFO:                shap: Not installed
2023-05-16 14:18:51,516:INFO:           interpret: Not installed
2023-05-16 14:18:51,516:INFO:                umap: Not installed
2023-05-16 14:18:51,516:INFO:    pandas_profiling: Not installed
2023-05-16 14:18:51,516:INFO:  explainerdashboard: Not installed
2023-05-16 14:18:51,516:INFO:             autoviz: Not installed
2023-05-16 14:18:51,516:INFO:           fairlearn: Not installed
2023-05-16 14:18:51,516:INFO:             xgboost: Not installed
2023-05-16 14:18:51,516:INFO:            catboost: Not installed
2023-05-16 14:18:51,516:INFO:              kmodes: Not installed
2023-05-16 14:18:51,516:INFO:             mlxtend: Not installed
2023-05-16 14:18:51,516:INFO:       statsforecast: Not installed
2023-05-16 14:18:51,516:INFO:        tune_sklearn: Not installed
2023-05-16 14:18:51,516:INFO:                 ray: Not installed
2023-05-16 14:18:51,516:INFO:            hyperopt: Not installed
2023-05-16 14:18:51,516:INFO:              optuna: Not installed
2023-05-16 14:18:51,517:INFO:               skopt: Not installed
2023-05-16 14:18:51,517:INFO:              mlflow: Not installed
2023-05-16 14:18:51,517:INFO:              gradio: Not installed
2023-05-16 14:18:51,517:INFO:             fastapi: Not installed
2023-05-16 14:18:51,517:INFO:             uvicorn: Not installed
2023-05-16 14:18:51,517:INFO:              m2cgen: Not installed
2023-05-16 14:18:51,517:INFO:           evidently: Not installed
2023-05-16 14:18:51,517:INFO:               fugue: Not installed
2023-05-16 14:18:51,517:INFO:           streamlit: 1.20.0
2023-05-16 14:18:51,517:INFO:             prophet: Not installed
2023-05-16 14:18:51,517:INFO:None
2023-05-16 14:18:51,517:INFO:Set up data.
2023-05-16 14:18:51,521:INFO:Set up train/test split.
2023-05-16 14:18:51,525:INFO:Set up index.
2023-05-16 14:18:51,525:INFO:Set up folding strategy.
2023-05-16 14:18:51,525:INFO:Assigning column types.
2023-05-16 14:18:51,528:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 14:18:51,528:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,533:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,538:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,642:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,646:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,652:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,755:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-16 14:18:51,760:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,764:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,824:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,869:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,875:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,879:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,938:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,983:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:51,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:51,984:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-16 14:18:51,993:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,051:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,107:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,164:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,209:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-16 14:18:52,277:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,323:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,437:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,438:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 14:18:52,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,618:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:18:52,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,664:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-16 14:18:52,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:52,898:INFO:Preparing preprocessing pipeline...
2023-05-16 14:18:52,898:INFO:Set up simple imputation.
2023-05-16 14:18:52,901:INFO:Set up encoding of ordinal features.
2023-05-16 14:18:52,903:INFO:Set up encoding of categorical features.
2023-05-16 14:18:52,977:INFO:Finished creating preprocessing pipeline.
2023-05-16 14:18:53,016:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-05-16 14:18:53,016:INFO:Creating final display dataframe.
2023-05-16 14:18:53,224:INFO:Setup _display_container:                     Description             Value
0                    Session id               760
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              f4c3
2023-05-16 14:18:53,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:53,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:53,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:53,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:18:53,464:INFO:setup() successfully completed in 2.12s...............
2023-05-16 14:19:13,651:INFO:PyCaret RegressionExperiment
2023-05-16 14:19:13,651:INFO:Logging name: reg-default-name
2023-05-16 14:19:13,651:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-16 14:19:13,651:INFO:version 3.0.1
2023-05-16 14:19:13,651:INFO:Initializing setup()
2023-05-16 14:19:13,651:INFO:self.USI: fdbc
2023-05-16 14:19:13,651:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'seed', '_available_plots', 'data', 'USI', 'html_param', 'gpu_param', '_ml_usecase', 'transform_target_param', 'X_train', 'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'target_param', 'log_plots_param', 'X', 'y_test', 'y', 'pipeline', 'logging_param', 'y_train', 'exp_name_log', 'X_test', 'exp_id', 'fold_generator'}
2023-05-16 14:19:13,651:INFO:Checking environment
2023-05-16 14:19:13,651:INFO:python_version: 3.9.13
2023-05-16 14:19:13,651:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 14:19:13,652:INFO:machine: AMD64
2023-05-16 14:19:13,652:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 14:19:13,652:INFO:Memory: svmem(total=7968444416, available=1788416000, percent=77.6, used=6180028416, free=1788416000)
2023-05-16 14:19:13,652:INFO:Physical Core: 6
2023-05-16 14:19:13,652:INFO:Logical Core: 12
2023-05-16 14:19:13,652:INFO:Checking libraries
2023-05-16 14:19:13,652:INFO:System:
2023-05-16 14:19:13,652:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 14:19:13,652:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 14:19:13,652:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 14:19:13,652:INFO:PyCaret required dependencies:
2023-05-16 14:19:13,652:INFO:                 pip: 22.2.2
2023-05-16 14:19:13,652:INFO:          setuptools: 63.4.1
2023-05-16 14:19:13,652:INFO:             pycaret: 3.0.1
2023-05-16 14:19:13,652:INFO:             IPython: 7.31.1
2023-05-16 14:19:13,652:INFO:          ipywidgets: 7.6.5
2023-05-16 14:19:13,652:INFO:                tqdm: 4.64.1
2023-05-16 14:19:13,652:INFO:               numpy: 1.21.6
2023-05-16 14:19:13,652:INFO:              pandas: 1.4.4
2023-05-16 14:19:13,652:INFO:              jinja2: 2.11.3
2023-05-16 14:19:13,652:INFO:               scipy: 1.9.1
2023-05-16 14:19:13,652:INFO:              joblib: 1.2.0
2023-05-16 14:19:13,652:INFO:             sklearn: 1.0.2
2023-05-16 14:19:13,652:INFO:                pyod: 1.0.9
2023-05-16 14:19:13,653:INFO:            imblearn: 0.10.1
2023-05-16 14:19:13,653:INFO:   category_encoders: 2.6.1
2023-05-16 14:19:13,653:INFO:            lightgbm: 3.3.5
2023-05-16 14:19:13,653:INFO:               numba: 0.55.1
2023-05-16 14:19:13,653:INFO:            requests: 2.28.1
2023-05-16 14:19:13,653:INFO:          matplotlib: 3.5.2
2023-05-16 14:19:13,653:INFO:          scikitplot: 0.3.7
2023-05-16 14:19:13,653:INFO:         yellowbrick: 1.5
2023-05-16 14:19:13,653:INFO:              plotly: 5.9.0
2023-05-16 14:19:13,653:INFO:             kaleido: 0.2.1
2023-05-16 14:19:13,653:INFO:         statsmodels: 0.13.2
2023-05-16 14:19:13,653:INFO:              sktime: 0.17.0
2023-05-16 14:19:13,653:INFO:               tbats: 1.1.3
2023-05-16 14:19:13,653:INFO:            pmdarima: 2.0.3
2023-05-16 14:19:13,653:INFO:              psutil: 5.9.0
2023-05-16 14:19:13,653:INFO:PyCaret optional dependencies:
2023-05-16 14:19:13,653:INFO:                shap: Not installed
2023-05-16 14:19:13,653:INFO:           interpret: Not installed
2023-05-16 14:19:13,653:INFO:                umap: Not installed
2023-05-16 14:19:13,653:INFO:    pandas_profiling: Not installed
2023-05-16 14:19:13,653:INFO:  explainerdashboard: Not installed
2023-05-16 14:19:13,653:INFO:             autoviz: Not installed
2023-05-16 14:19:13,653:INFO:           fairlearn: Not installed
2023-05-16 14:19:13,653:INFO:             xgboost: Not installed
2023-05-16 14:19:13,653:INFO:            catboost: Not installed
2023-05-16 14:19:13,653:INFO:              kmodes: Not installed
2023-05-16 14:19:13,653:INFO:             mlxtend: Not installed
2023-05-16 14:19:13,653:INFO:       statsforecast: Not installed
2023-05-16 14:19:13,654:INFO:        tune_sklearn: Not installed
2023-05-16 14:19:13,654:INFO:                 ray: Not installed
2023-05-16 14:19:13,654:INFO:            hyperopt: Not installed
2023-05-16 14:19:13,654:INFO:              optuna: Not installed
2023-05-16 14:19:13,654:INFO:               skopt: Not installed
2023-05-16 14:19:13,654:INFO:              mlflow: Not installed
2023-05-16 14:19:13,654:INFO:              gradio: Not installed
2023-05-16 14:19:13,654:INFO:             fastapi: Not installed
2023-05-16 14:19:13,654:INFO:             uvicorn: Not installed
2023-05-16 14:19:13,654:INFO:              m2cgen: Not installed
2023-05-16 14:19:13,654:INFO:           evidently: Not installed
2023-05-16 14:19:13,654:INFO:               fugue: Not installed
2023-05-16 14:19:13,654:INFO:           streamlit: 1.20.0
2023-05-16 14:19:13,654:INFO:             prophet: Not installed
2023-05-16 14:19:13,654:INFO:None
2023-05-16 14:19:13,654:INFO:Set up data.
2023-05-16 14:19:13,659:INFO:Set up train/test split.
2023-05-16 14:19:13,663:INFO:Set up index.
2023-05-16 14:19:13,663:INFO:Set up folding strategy.
2023-05-16 14:19:13,663:INFO:Assigning column types.
2023-05-16 14:19:13,666:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 14:19:13,666:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,671:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,676:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,733:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:13,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:13,778:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,783:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,788:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,843:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:13,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:13,888:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-16 14:19:13,893:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,897:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,954:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,998:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:13,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:13,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,003:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,008:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,109:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,110:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-16 14:19:14,119:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,220:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,231:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,289:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,335:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-16 14:19:14,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,512:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,558:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 14:19:14,626:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,741:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:19:14,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,788:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-16 14:19:14,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:14,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:15,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:15,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:15,029:INFO:Preparing preprocessing pipeline...
2023-05-16 14:19:15,029:INFO:Set up simple imputation.
2023-05-16 14:19:15,032:INFO:Set up encoding of ordinal features.
2023-05-16 14:19:15,034:INFO:Set up encoding of categorical features.
2023-05-16 14:19:15,107:INFO:Finished creating preprocessing pipeline.
2023-05-16 14:19:15,150:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-05-16 14:19:15,150:INFO:Creating final display dataframe.
2023-05-16 14:19:15,410:INFO:Setup _display_container:                     Description             Value
0                    Session id               300
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              fdbc
2023-05-16 14:19:15,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:15,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:15,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:15,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:19:15,660:INFO:setup() successfully completed in 2.16s...............
2023-05-16 14:19:42,076:INFO:Initializing compare_models()
2023-05-16 14:19:42,077:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-05-16 14:19:42,077:INFO:Checking exceptions
2023-05-16 14:19:42,079:INFO:Preparing display monitor
2023-05-16 14:19:42,120:INFO:Initializing Linear Regression
2023-05-16 14:19:42,121:INFO:Total runtime is 1.9808610280354817e-05 minutes
2023-05-16 14:19:42,127:INFO:SubProcess create_model() called ==================================
2023-05-16 14:19:42,128:INFO:Initializing create_model()
2023-05-16 14:19:42,128:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:19:42,128:INFO:Checking exceptions
2023-05-16 14:19:42,129:INFO:Importing libraries
2023-05-16 14:19:42,129:INFO:Copying training dataset
2023-05-16 14:19:42,134:INFO:Defining folds
2023-05-16 14:19:42,134:INFO:Declaring metric variables
2023-05-16 14:19:42,139:INFO:Importing untrained model
2023-05-16 14:19:42,143:INFO:Linear Regression Imported successfully
2023-05-16 14:19:42,152:INFO:Starting cross validation
2023-05-16 14:19:42,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:19:54,939:INFO:Calculating mean and std
2023-05-16 14:19:54,940:INFO:Creating metrics dataframe
2023-05-16 14:19:55,281:INFO:Uploading results into container
2023-05-16 14:19:55,282:INFO:Uploading model into container now
2023-05-16 14:19:55,283:INFO:_master_model_container: 1
2023-05-16 14:19:55,283:INFO:_display_container: 2
2023-05-16 14:19:55,283:INFO:LinearRegression(n_jobs=-1)
2023-05-16 14:19:55,284:INFO:create_model() successfully completed......................................
2023-05-16 14:19:55,411:INFO:SubProcess create_model() end ==================================
2023-05-16 14:19:55,411:INFO:Creating metrics dataframe
2023-05-16 14:19:55,419:INFO:Initializing Lasso Regression
2023-05-16 14:19:55,419:INFO:Total runtime is 0.22165249983469645 minutes
2023-05-16 14:19:55,424:INFO:SubProcess create_model() called ==================================
2023-05-16 14:19:55,424:INFO:Initializing create_model()
2023-05-16 14:19:55,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:19:55,424:INFO:Checking exceptions
2023-05-16 14:19:55,424:INFO:Importing libraries
2023-05-16 14:19:55,425:INFO:Copying training dataset
2023-05-16 14:19:55,431:INFO:Defining folds
2023-05-16 14:19:55,432:INFO:Declaring metric variables
2023-05-16 14:19:55,437:INFO:Importing untrained model
2023-05-16 14:19:55,443:INFO:Lasso Regression Imported successfully
2023-05-16 14:19:55,454:INFO:Starting cross validation
2023-05-16 14:19:55,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:01,113:INFO:Calculating mean and std
2023-05-16 14:20:01,115:INFO:Creating metrics dataframe
2023-05-16 14:20:01,452:INFO:Uploading results into container
2023-05-16 14:20:01,453:INFO:Uploading model into container now
2023-05-16 14:20:01,454:INFO:_master_model_container: 2
2023-05-16 14:20:01,454:INFO:_display_container: 2
2023-05-16 14:20:01,454:INFO:Lasso(random_state=300)
2023-05-16 14:20:01,455:INFO:create_model() successfully completed......................................
2023-05-16 14:20:01,558:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:01,558:INFO:Creating metrics dataframe
2023-05-16 14:20:01,567:INFO:Initializing Ridge Regression
2023-05-16 14:20:01,567:INFO:Total runtime is 0.3241109728813171 minutes
2023-05-16 14:20:01,570:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:01,570:INFO:Initializing create_model()
2023-05-16 14:20:01,570:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:01,570:INFO:Checking exceptions
2023-05-16 14:20:01,570:INFO:Importing libraries
2023-05-16 14:20:01,571:INFO:Copying training dataset
2023-05-16 14:20:01,575:INFO:Defining folds
2023-05-16 14:20:01,575:INFO:Declaring metric variables
2023-05-16 14:20:01,579:INFO:Importing untrained model
2023-05-16 14:20:01,584:INFO:Ridge Regression Imported successfully
2023-05-16 14:20:01,591:INFO:Starting cross validation
2023-05-16 14:20:01,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:03,331:INFO:Calculating mean and std
2023-05-16 14:20:03,333:INFO:Creating metrics dataframe
2023-05-16 14:20:03,665:INFO:Uploading results into container
2023-05-16 14:20:03,666:INFO:Uploading model into container now
2023-05-16 14:20:03,666:INFO:_master_model_container: 3
2023-05-16 14:20:03,667:INFO:_display_container: 2
2023-05-16 14:20:03,667:INFO:Ridge(random_state=300)
2023-05-16 14:20:03,667:INFO:create_model() successfully completed......................................
2023-05-16 14:20:03,764:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:03,764:INFO:Creating metrics dataframe
2023-05-16 14:20:03,772:INFO:Initializing Elastic Net
2023-05-16 14:20:03,772:INFO:Total runtime is 0.3608594934145609 minutes
2023-05-16 14:20:03,775:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:03,775:INFO:Initializing create_model()
2023-05-16 14:20:03,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:03,776:INFO:Checking exceptions
2023-05-16 14:20:03,776:INFO:Importing libraries
2023-05-16 14:20:03,776:INFO:Copying training dataset
2023-05-16 14:20:03,780:INFO:Defining folds
2023-05-16 14:20:03,780:INFO:Declaring metric variables
2023-05-16 14:20:03,785:INFO:Importing untrained model
2023-05-16 14:20:03,789:INFO:Elastic Net Imported successfully
2023-05-16 14:20:03,795:INFO:Starting cross validation
2023-05-16 14:20:03,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:05,626:INFO:Calculating mean and std
2023-05-16 14:20:05,628:INFO:Creating metrics dataframe
2023-05-16 14:20:05,964:INFO:Uploading results into container
2023-05-16 14:20:05,964:INFO:Uploading model into container now
2023-05-16 14:20:05,965:INFO:_master_model_container: 4
2023-05-16 14:20:05,965:INFO:_display_container: 2
2023-05-16 14:20:05,965:INFO:ElasticNet(random_state=300)
2023-05-16 14:20:05,966:INFO:create_model() successfully completed......................................
2023-05-16 14:20:06,067:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:06,067:INFO:Creating metrics dataframe
2023-05-16 14:20:06,074:INFO:Initializing Least Angle Regression
2023-05-16 14:20:06,074:INFO:Total runtime is 0.39923337697982786 minutes
2023-05-16 14:20:06,077:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:06,077:INFO:Initializing create_model()
2023-05-16 14:20:06,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:06,079:INFO:Checking exceptions
2023-05-16 14:20:06,079:INFO:Importing libraries
2023-05-16 14:20:06,079:INFO:Copying training dataset
2023-05-16 14:20:06,082:INFO:Defining folds
2023-05-16 14:20:06,082:INFO:Declaring metric variables
2023-05-16 14:20:06,087:INFO:Importing untrained model
2023-05-16 14:20:06,092:INFO:Least Angle Regression Imported successfully
2023-05-16 14:20:06,098:INFO:Starting cross validation
2023-05-16 14:20:06,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:06,260:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,261:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,275:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,288:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,303:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,319:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,332:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,336:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,386:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:06,396:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:07,963:INFO:Calculating mean and std
2023-05-16 14:20:07,965:INFO:Creating metrics dataframe
2023-05-16 14:20:08,287:INFO:Uploading results into container
2023-05-16 14:20:08,288:INFO:Uploading model into container now
2023-05-16 14:20:08,289:INFO:_master_model_container: 5
2023-05-16 14:20:08,289:INFO:_display_container: 2
2023-05-16 14:20:08,289:INFO:Lars(random_state=300)
2023-05-16 14:20:08,289:INFO:create_model() successfully completed......................................
2023-05-16 14:20:08,488:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:08,488:INFO:Creating metrics dataframe
2023-05-16 14:20:08,500:INFO:Initializing Lasso Least Angle Regression
2023-05-16 14:20:08,500:INFO:Total runtime is 0.4396551171938578 minutes
2023-05-16 14:20:08,505:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:08,505:INFO:Initializing create_model()
2023-05-16 14:20:08,506:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:08,506:INFO:Checking exceptions
2023-05-16 14:20:08,507:INFO:Importing libraries
2023-05-16 14:20:08,507:INFO:Copying training dataset
2023-05-16 14:20:08,513:INFO:Defining folds
2023-05-16 14:20:08,514:INFO:Declaring metric variables
2023-05-16 14:20:08,518:INFO:Importing untrained model
2023-05-16 14:20:08,523:INFO:Lasso Least Angle Regression Imported successfully
2023-05-16 14:20:08,533:INFO:Starting cross validation
2023-05-16 14:20:08,535:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:08,779:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,782:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,793:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,822:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,853:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,878:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,904:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,913:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,928:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:08,971:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:20:10,668:INFO:Calculating mean and std
2023-05-16 14:20:10,669:INFO:Creating metrics dataframe
2023-05-16 14:20:11,009:INFO:Uploading results into container
2023-05-16 14:20:11,011:INFO:Uploading model into container now
2023-05-16 14:20:11,013:INFO:_master_model_container: 6
2023-05-16 14:20:11,013:INFO:_display_container: 2
2023-05-16 14:20:11,014:INFO:LassoLars(random_state=300)
2023-05-16 14:20:11,014:INFO:create_model() successfully completed......................................
2023-05-16 14:20:11,162:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:11,163:INFO:Creating metrics dataframe
2023-05-16 14:20:11,173:INFO:Initializing Orthogonal Matching Pursuit
2023-05-16 14:20:11,173:INFO:Total runtime is 0.48420699834823605 minutes
2023-05-16 14:20:11,177:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:11,178:INFO:Initializing create_model()
2023-05-16 14:20:11,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:11,178:INFO:Checking exceptions
2023-05-16 14:20:11,179:INFO:Importing libraries
2023-05-16 14:20:11,179:INFO:Copying training dataset
2023-05-16 14:20:11,183:INFO:Defining folds
2023-05-16 14:20:11,184:INFO:Declaring metric variables
2023-05-16 14:20:11,190:INFO:Importing untrained model
2023-05-16 14:20:11,196:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-16 14:20:11,205:INFO:Starting cross validation
2023-05-16 14:20:11,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:11,404:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,448:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,455:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,488:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,560:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,563:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,567:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,618:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,668:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:11,706:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:20:13,595:INFO:Calculating mean and std
2023-05-16 14:20:13,596:INFO:Creating metrics dataframe
2023-05-16 14:20:13,931:INFO:Uploading results into container
2023-05-16 14:20:13,932:INFO:Uploading model into container now
2023-05-16 14:20:13,933:INFO:_master_model_container: 7
2023-05-16 14:20:13,933:INFO:_display_container: 2
2023-05-16 14:20:13,933:INFO:OrthogonalMatchingPursuit()
2023-05-16 14:20:13,933:INFO:create_model() successfully completed......................................
2023-05-16 14:20:14,061:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:14,061:INFO:Creating metrics dataframe
2023-05-16 14:20:14,075:INFO:Initializing Bayesian Ridge
2023-05-16 14:20:14,075:INFO:Total runtime is 0.5325796882311503 minutes
2023-05-16 14:20:14,080:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:14,080:INFO:Initializing create_model()
2023-05-16 14:20:14,081:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:14,081:INFO:Checking exceptions
2023-05-16 14:20:14,081:INFO:Importing libraries
2023-05-16 14:20:14,081:INFO:Copying training dataset
2023-05-16 14:20:14,086:INFO:Defining folds
2023-05-16 14:20:14,087:INFO:Declaring metric variables
2023-05-16 14:20:14,094:INFO:Importing untrained model
2023-05-16 14:20:14,100:INFO:Bayesian Ridge Imported successfully
2023-05-16 14:20:14,110:INFO:Starting cross validation
2023-05-16 14:20:14,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:15,881:INFO:Calculating mean and std
2023-05-16 14:20:15,882:INFO:Creating metrics dataframe
2023-05-16 14:20:16,256:INFO:Uploading results into container
2023-05-16 14:20:16,257:INFO:Uploading model into container now
2023-05-16 14:20:16,257:INFO:_master_model_container: 8
2023-05-16 14:20:16,257:INFO:_display_container: 2
2023-05-16 14:20:16,258:INFO:BayesianRidge()
2023-05-16 14:20:16,258:INFO:create_model() successfully completed......................................
2023-05-16 14:20:16,356:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:16,356:INFO:Creating metrics dataframe
2023-05-16 14:20:16,366:INFO:Initializing Passive Aggressive Regressor
2023-05-16 14:20:16,366:INFO:Total runtime is 0.570762324333191 minutes
2023-05-16 14:20:16,370:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:16,371:INFO:Initializing create_model()
2023-05-16 14:20:16,371:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:16,371:INFO:Checking exceptions
2023-05-16 14:20:16,371:INFO:Importing libraries
2023-05-16 14:20:16,371:INFO:Copying training dataset
2023-05-16 14:20:16,377:INFO:Defining folds
2023-05-16 14:20:16,377:INFO:Declaring metric variables
2023-05-16 14:20:16,382:INFO:Importing untrained model
2023-05-16 14:20:16,387:INFO:Passive Aggressive Regressor Imported successfully
2023-05-16 14:20:16,394:INFO:Starting cross validation
2023-05-16 14:20:16,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:18,167:INFO:Calculating mean and std
2023-05-16 14:20:18,169:INFO:Creating metrics dataframe
2023-05-16 14:20:18,514:INFO:Uploading results into container
2023-05-16 14:20:18,516:INFO:Uploading model into container now
2023-05-16 14:20:18,516:INFO:_master_model_container: 9
2023-05-16 14:20:18,516:INFO:_display_container: 2
2023-05-16 14:20:18,516:INFO:PassiveAggressiveRegressor(random_state=300)
2023-05-16 14:20:18,518:INFO:create_model() successfully completed......................................
2023-05-16 14:20:18,661:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:18,661:INFO:Creating metrics dataframe
2023-05-16 14:20:18,674:INFO:Initializing Huber Regressor
2023-05-16 14:20:18,674:INFO:Total runtime is 0.6092249194780986 minutes
2023-05-16 14:20:18,678:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:18,679:INFO:Initializing create_model()
2023-05-16 14:20:18,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:18,679:INFO:Checking exceptions
2023-05-16 14:20:18,679:INFO:Importing libraries
2023-05-16 14:20:18,679:INFO:Copying training dataset
2023-05-16 14:20:18,689:INFO:Defining folds
2023-05-16 14:20:18,689:INFO:Declaring metric variables
2023-05-16 14:20:18,693:INFO:Importing untrained model
2023-05-16 14:20:18,700:INFO:Huber Regressor Imported successfully
2023-05-16 14:20:18,711:INFO:Starting cross validation
2023-05-16 14:20:18,713:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:19,013:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,055:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,064:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,069:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,133:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,139:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,180:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,238:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:19,263:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:20:21,009:INFO:Calculating mean and std
2023-05-16 14:20:21,011:INFO:Creating metrics dataframe
2023-05-16 14:20:21,365:INFO:Uploading results into container
2023-05-16 14:20:21,367:INFO:Uploading model into container now
2023-05-16 14:20:21,368:INFO:_master_model_container: 10
2023-05-16 14:20:21,368:INFO:_display_container: 2
2023-05-16 14:20:21,368:INFO:HuberRegressor()
2023-05-16 14:20:21,368:INFO:create_model() successfully completed......................................
2023-05-16 14:20:21,558:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:21,558:INFO:Creating metrics dataframe
2023-05-16 14:20:21,574:INFO:Initializing K Neighbors Regressor
2023-05-16 14:20:21,574:INFO:Total runtime is 0.6575550953547161 minutes
2023-05-16 14:20:21,579:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:21,579:INFO:Initializing create_model()
2023-05-16 14:20:21,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:21,580:INFO:Checking exceptions
2023-05-16 14:20:21,580:INFO:Importing libraries
2023-05-16 14:20:21,580:INFO:Copying training dataset
2023-05-16 14:20:21,588:INFO:Defining folds
2023-05-16 14:20:21,589:INFO:Declaring metric variables
2023-05-16 14:20:21,594:INFO:Importing untrained model
2023-05-16 14:20:21,602:INFO:K Neighbors Regressor Imported successfully
2023-05-16 14:20:21,614:INFO:Starting cross validation
2023-05-16 14:20:21,616:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:24,053:INFO:Calculating mean and std
2023-05-16 14:20:24,054:INFO:Creating metrics dataframe
2023-05-16 14:20:24,365:INFO:Uploading results into container
2023-05-16 14:20:24,366:INFO:Uploading model into container now
2023-05-16 14:20:24,366:INFO:_master_model_container: 11
2023-05-16 14:20:24,366:INFO:_display_container: 2
2023-05-16 14:20:24,366:INFO:KNeighborsRegressor(n_jobs=-1)
2023-05-16 14:20:24,366:INFO:create_model() successfully completed......................................
2023-05-16 14:20:24,468:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:24,468:INFO:Creating metrics dataframe
2023-05-16 14:20:24,478:INFO:Initializing Decision Tree Regressor
2023-05-16 14:20:24,479:INFO:Total runtime is 0.7059727748235068 minutes
2023-05-16 14:20:24,483:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:24,483:INFO:Initializing create_model()
2023-05-16 14:20:24,483:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:24,484:INFO:Checking exceptions
2023-05-16 14:20:24,484:INFO:Importing libraries
2023-05-16 14:20:24,484:INFO:Copying training dataset
2023-05-16 14:20:24,487:INFO:Defining folds
2023-05-16 14:20:24,487:INFO:Declaring metric variables
2023-05-16 14:20:24,491:INFO:Importing untrained model
2023-05-16 14:20:24,496:INFO:Decision Tree Regressor Imported successfully
2023-05-16 14:20:24,504:INFO:Starting cross validation
2023-05-16 14:20:24,506:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:26,276:INFO:Calculating mean and std
2023-05-16 14:20:26,278:INFO:Creating metrics dataframe
2023-05-16 14:20:26,643:INFO:Uploading results into container
2023-05-16 14:20:26,644:INFO:Uploading model into container now
2023-05-16 14:20:26,644:INFO:_master_model_container: 12
2023-05-16 14:20:26,644:INFO:_display_container: 2
2023-05-16 14:20:26,645:INFO:DecisionTreeRegressor(random_state=300)
2023-05-16 14:20:26,645:INFO:create_model() successfully completed......................................
2023-05-16 14:20:26,743:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:26,743:INFO:Creating metrics dataframe
2023-05-16 14:20:26,753:INFO:Initializing Random Forest Regressor
2023-05-16 14:20:26,753:INFO:Total runtime is 0.7438836534818015 minutes
2023-05-16 14:20:26,757:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:26,757:INFO:Initializing create_model()
2023-05-16 14:20:26,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:26,758:INFO:Checking exceptions
2023-05-16 14:20:26,758:INFO:Importing libraries
2023-05-16 14:20:26,758:INFO:Copying training dataset
2023-05-16 14:20:26,763:INFO:Defining folds
2023-05-16 14:20:26,763:INFO:Declaring metric variables
2023-05-16 14:20:26,768:INFO:Importing untrained model
2023-05-16 14:20:26,773:INFO:Random Forest Regressor Imported successfully
2023-05-16 14:20:26,781:INFO:Starting cross validation
2023-05-16 14:20:26,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:29,288:INFO:Calculating mean and std
2023-05-16 14:20:29,291:INFO:Creating metrics dataframe
2023-05-16 14:20:29,642:INFO:Uploading results into container
2023-05-16 14:20:29,643:INFO:Uploading model into container now
2023-05-16 14:20:29,643:INFO:_master_model_container: 13
2023-05-16 14:20:29,644:INFO:_display_container: 2
2023-05-16 14:20:29,644:INFO:RandomForestRegressor(n_jobs=-1, random_state=300)
2023-05-16 14:20:29,645:INFO:create_model() successfully completed......................................
2023-05-16 14:20:29,794:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:29,794:INFO:Creating metrics dataframe
2023-05-16 14:20:29,808:INFO:Initializing Extra Trees Regressor
2023-05-16 14:20:29,809:INFO:Total runtime is 0.7948166648546856 minutes
2023-05-16 14:20:29,814:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:29,814:INFO:Initializing create_model()
2023-05-16 14:20:29,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:29,814:INFO:Checking exceptions
2023-05-16 14:20:29,815:INFO:Importing libraries
2023-05-16 14:20:29,815:INFO:Copying training dataset
2023-05-16 14:20:29,820:INFO:Defining folds
2023-05-16 14:20:29,821:INFO:Declaring metric variables
2023-05-16 14:20:29,826:INFO:Importing untrained model
2023-05-16 14:20:29,832:INFO:Extra Trees Regressor Imported successfully
2023-05-16 14:20:29,841:INFO:Starting cross validation
2023-05-16 14:20:29,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:33,028:INFO:Calculating mean and std
2023-05-16 14:20:33,029:INFO:Creating metrics dataframe
2023-05-16 14:20:33,395:INFO:Uploading results into container
2023-05-16 14:20:33,397:INFO:Uploading model into container now
2023-05-16 14:20:33,397:INFO:_master_model_container: 14
2023-05-16 14:20:33,397:INFO:_display_container: 2
2023-05-16 14:20:33,398:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=300)
2023-05-16 14:20:33,398:INFO:create_model() successfully completed......................................
2023-05-16 14:20:33,550:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:33,551:INFO:Creating metrics dataframe
2023-05-16 14:20:33,563:INFO:Initializing AdaBoost Regressor
2023-05-16 14:20:33,563:INFO:Total runtime is 0.857378669579824 minutes
2023-05-16 14:20:33,567:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:33,567:INFO:Initializing create_model()
2023-05-16 14:20:33,568:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:33,568:INFO:Checking exceptions
2023-05-16 14:20:33,568:INFO:Importing libraries
2023-05-16 14:20:33,568:INFO:Copying training dataset
2023-05-16 14:20:33,575:INFO:Defining folds
2023-05-16 14:20:33,575:INFO:Declaring metric variables
2023-05-16 14:20:33,580:INFO:Importing untrained model
2023-05-16 14:20:33,584:INFO:AdaBoost Regressor Imported successfully
2023-05-16 14:20:33,592:INFO:Starting cross validation
2023-05-16 14:20:33,594:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:35,532:INFO:Calculating mean and std
2023-05-16 14:20:35,534:INFO:Creating metrics dataframe
2023-05-16 14:20:35,910:INFO:Uploading results into container
2023-05-16 14:20:35,910:INFO:Uploading model into container now
2023-05-16 14:20:35,911:INFO:_master_model_container: 15
2023-05-16 14:20:35,911:INFO:_display_container: 2
2023-05-16 14:20:35,912:INFO:AdaBoostRegressor(random_state=300)
2023-05-16 14:20:35,912:INFO:create_model() successfully completed......................................
2023-05-16 14:20:36,010:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:36,010:INFO:Creating metrics dataframe
2023-05-16 14:20:36,021:INFO:Initializing Gradient Boosting Regressor
2023-05-16 14:20:36,021:INFO:Total runtime is 0.8983453989028932 minutes
2023-05-16 14:20:36,024:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:36,025:INFO:Initializing create_model()
2023-05-16 14:20:36,025:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:36,026:INFO:Checking exceptions
2023-05-16 14:20:36,026:INFO:Importing libraries
2023-05-16 14:20:36,026:INFO:Copying training dataset
2023-05-16 14:20:36,030:INFO:Defining folds
2023-05-16 14:20:36,030:INFO:Declaring metric variables
2023-05-16 14:20:36,034:INFO:Importing untrained model
2023-05-16 14:20:36,038:INFO:Gradient Boosting Regressor Imported successfully
2023-05-16 14:20:36,045:INFO:Starting cross validation
2023-05-16 14:20:36,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:38,269:INFO:Calculating mean and std
2023-05-16 14:20:38,271:INFO:Creating metrics dataframe
2023-05-16 14:20:38,579:INFO:Uploading results into container
2023-05-16 14:20:38,579:INFO:Uploading model into container now
2023-05-16 14:20:38,580:INFO:_master_model_container: 16
2023-05-16 14:20:38,580:INFO:_display_container: 2
2023-05-16 14:20:38,580:INFO:GradientBoostingRegressor(random_state=300)
2023-05-16 14:20:38,580:INFO:create_model() successfully completed......................................
2023-05-16 14:20:38,711:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:38,712:INFO:Creating metrics dataframe
2023-05-16 14:20:38,724:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 14:20:38,726:INFO:Total runtime is 0.9434279084205629 minutes
2023-05-16 14:20:38,730:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:38,731:INFO:Initializing create_model()
2023-05-16 14:20:38,731:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:38,731:INFO:Checking exceptions
2023-05-16 14:20:38,731:INFO:Importing libraries
2023-05-16 14:20:38,731:INFO:Copying training dataset
2023-05-16 14:20:38,737:INFO:Defining folds
2023-05-16 14:20:38,737:INFO:Declaring metric variables
2023-05-16 14:20:38,742:INFO:Importing untrained model
2023-05-16 14:20:38,746:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 14:20:38,756:INFO:Starting cross validation
2023-05-16 14:20:38,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:44,106:INFO:Calculating mean and std
2023-05-16 14:20:44,108:INFO:Creating metrics dataframe
2023-05-16 14:20:44,481:INFO:Uploading results into container
2023-05-16 14:20:44,481:INFO:Uploading model into container now
2023-05-16 14:20:44,482:INFO:_master_model_container: 17
2023-05-16 14:20:44,482:INFO:_display_container: 2
2023-05-16 14:20:44,483:INFO:LGBMRegressor(random_state=300)
2023-05-16 14:20:44,483:INFO:create_model() successfully completed......................................
2023-05-16 14:20:44,582:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:44,583:INFO:Creating metrics dataframe
2023-05-16 14:20:44,592:INFO:Initializing Dummy Regressor
2023-05-16 14:20:44,592:INFO:Total runtime is 1.041201972961426 minutes
2023-05-16 14:20:44,597:INFO:SubProcess create_model() called ==================================
2023-05-16 14:20:44,597:INFO:Initializing create_model()
2023-05-16 14:20:44,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE4DA31400>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:44,597:INFO:Checking exceptions
2023-05-16 14:20:44,598:INFO:Importing libraries
2023-05-16 14:20:44,598:INFO:Copying training dataset
2023-05-16 14:20:44,601:INFO:Defining folds
2023-05-16 14:20:44,602:INFO:Declaring metric variables
2023-05-16 14:20:44,606:INFO:Importing untrained model
2023-05-16 14:20:44,609:INFO:Dummy Regressor Imported successfully
2023-05-16 14:20:44,617:INFO:Starting cross validation
2023-05-16 14:20:44,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:20:46,490:INFO:Calculating mean and std
2023-05-16 14:20:46,491:INFO:Creating metrics dataframe
2023-05-16 14:20:46,880:INFO:Uploading results into container
2023-05-16 14:20:46,880:INFO:Uploading model into container now
2023-05-16 14:20:46,881:INFO:_master_model_container: 18
2023-05-16 14:20:46,881:INFO:_display_container: 2
2023-05-16 14:20:46,881:INFO:DummyRegressor()
2023-05-16 14:20:46,881:INFO:create_model() successfully completed......................................
2023-05-16 14:20:46,979:INFO:SubProcess create_model() end ==================================
2023-05-16 14:20:46,979:INFO:Creating metrics dataframe
2023-05-16 14:20:47,004:INFO:Initializing create_model()
2023-05-16 14:20:47,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4D46AE50>, estimator=GradientBoostingRegressor(random_state=300), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:20:47,004:INFO:Checking exceptions
2023-05-16 14:20:47,006:INFO:Importing libraries
2023-05-16 14:20:47,006:INFO:Copying training dataset
2023-05-16 14:20:47,009:INFO:Defining folds
2023-05-16 14:20:47,009:INFO:Declaring metric variables
2023-05-16 14:20:47,009:INFO:Importing untrained model
2023-05-16 14:20:47,009:INFO:Declaring custom model
2023-05-16 14:20:47,010:INFO:Gradient Boosting Regressor Imported successfully
2023-05-16 14:20:47,011:INFO:Cross validation set to False
2023-05-16 14:20:47,011:INFO:Fitting Model
2023-05-16 14:20:47,350:INFO:GradientBoostingRegressor(random_state=300)
2023-05-16 14:20:47,350:INFO:create_model() successfully completed......................................
2023-05-16 14:20:47,478:INFO:_master_model_container: 18
2023-05-16 14:20:47,478:INFO:_display_container: 2
2023-05-16 14:20:47,479:INFO:GradientBoostingRegressor(random_state=300)
2023-05-16 14:20:47,479:INFO:compare_models() successfully completed......................................
2023-05-16 14:23:03,196:INFO:PyCaret RegressionExperiment
2023-05-16 14:23:03,196:INFO:Logging name: reg-default-name
2023-05-16 14:23:03,196:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-16 14:23:03,196:INFO:version 3.0.1
2023-05-16 14:23:03,196:INFO:Initializing setup()
2023-05-16 14:23:03,196:INFO:self.USI: 080c
2023-05-16 14:23:03,196:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'seed', '_available_plots', 'data', 'USI', 'html_param', 'gpu_param', '_ml_usecase', 'transform_target_param', 'X_train', 'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'target_param', 'log_plots_param', 'X', 'y_test', 'y', 'pipeline', 'logging_param', 'y_train', 'exp_name_log', 'X_test', 'exp_id', 'fold_generator'}
2023-05-16 14:23:03,196:INFO:Checking environment
2023-05-16 14:23:03,196:INFO:python_version: 3.9.13
2023-05-16 14:23:03,196:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 14:23:03,196:INFO:machine: AMD64
2023-05-16 14:23:03,196:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 14:23:03,196:INFO:Memory: svmem(total=7968444416, available=480505856, percent=94.0, used=7487938560, free=480505856)
2023-05-16 14:23:03,196:INFO:Physical Core: 6
2023-05-16 14:23:03,196:INFO:Logical Core: 12
2023-05-16 14:23:03,196:INFO:Checking libraries
2023-05-16 14:23:03,196:INFO:System:
2023-05-16 14:23:03,196:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 14:23:03,196:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 14:23:03,196:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 14:23:03,196:INFO:PyCaret required dependencies:
2023-05-16 14:23:03,197:INFO:                 pip: 22.2.2
2023-05-16 14:23:03,197:INFO:          setuptools: 63.4.1
2023-05-16 14:23:03,197:INFO:             pycaret: 3.0.1
2023-05-16 14:23:03,197:INFO:             IPython: 7.31.1
2023-05-16 14:23:03,197:INFO:          ipywidgets: 7.6.5
2023-05-16 14:23:03,197:INFO:                tqdm: 4.64.1
2023-05-16 14:23:03,197:INFO:               numpy: 1.21.6
2023-05-16 14:23:03,197:INFO:              pandas: 1.4.4
2023-05-16 14:23:03,197:INFO:              jinja2: 2.11.3
2023-05-16 14:23:03,197:INFO:               scipy: 1.9.1
2023-05-16 14:23:03,197:INFO:              joblib: 1.2.0
2023-05-16 14:23:03,197:INFO:             sklearn: 1.0.2
2023-05-16 14:23:03,197:INFO:                pyod: 1.0.9
2023-05-16 14:23:03,197:INFO:            imblearn: 0.10.1
2023-05-16 14:23:03,197:INFO:   category_encoders: 2.6.1
2023-05-16 14:23:03,197:INFO:            lightgbm: 3.3.5
2023-05-16 14:23:03,197:INFO:               numba: 0.55.1
2023-05-16 14:23:03,197:INFO:            requests: 2.28.1
2023-05-16 14:23:03,197:INFO:          matplotlib: 3.5.2
2023-05-16 14:23:03,197:INFO:          scikitplot: 0.3.7
2023-05-16 14:23:03,197:INFO:         yellowbrick: 1.5
2023-05-16 14:23:03,197:INFO:              plotly: 5.9.0
2023-05-16 14:23:03,197:INFO:             kaleido: 0.2.1
2023-05-16 14:23:03,197:INFO:         statsmodels: 0.13.2
2023-05-16 14:23:03,197:INFO:              sktime: 0.17.0
2023-05-16 14:23:03,197:INFO:               tbats: 1.1.3
2023-05-16 14:23:03,197:INFO:            pmdarima: 2.0.3
2023-05-16 14:23:03,197:INFO:              psutil: 5.9.0
2023-05-16 14:23:03,197:INFO:PyCaret optional dependencies:
2023-05-16 14:23:03,198:INFO:                shap: Not installed
2023-05-16 14:23:03,198:INFO:           interpret: Not installed
2023-05-16 14:23:03,198:INFO:                umap: Not installed
2023-05-16 14:23:03,198:INFO:    pandas_profiling: Not installed
2023-05-16 14:23:03,198:INFO:  explainerdashboard: Not installed
2023-05-16 14:23:03,198:INFO:             autoviz: Not installed
2023-05-16 14:23:03,198:INFO:           fairlearn: Not installed
2023-05-16 14:23:03,198:INFO:             xgboost: Not installed
2023-05-16 14:23:03,198:INFO:            catboost: Not installed
2023-05-16 14:23:03,198:INFO:              kmodes: Not installed
2023-05-16 14:23:03,198:INFO:             mlxtend: Not installed
2023-05-16 14:23:03,198:INFO:       statsforecast: Not installed
2023-05-16 14:23:03,198:INFO:        tune_sklearn: Not installed
2023-05-16 14:23:03,198:INFO:                 ray: Not installed
2023-05-16 14:23:03,198:INFO:            hyperopt: Not installed
2023-05-16 14:23:03,198:INFO:              optuna: Not installed
2023-05-16 14:23:03,198:INFO:               skopt: Not installed
2023-05-16 14:23:03,198:INFO:              mlflow: Not installed
2023-05-16 14:23:03,198:INFO:              gradio: Not installed
2023-05-16 14:23:03,198:INFO:             fastapi: Not installed
2023-05-16 14:23:03,198:INFO:             uvicorn: Not installed
2023-05-16 14:23:03,198:INFO:              m2cgen: Not installed
2023-05-16 14:23:03,198:INFO:           evidently: Not installed
2023-05-16 14:23:03,198:INFO:               fugue: Not installed
2023-05-16 14:23:03,198:INFO:           streamlit: 1.20.0
2023-05-16 14:23:03,198:INFO:             prophet: Not installed
2023-05-16 14:23:03,198:INFO:None
2023-05-16 14:23:03,198:INFO:Set up data.
2023-05-16 14:23:03,202:INFO:Set up train/test split.
2023-05-16 14:23:03,206:INFO:Set up index.
2023-05-16 14:23:03,206:INFO:Set up folding strategy.
2023-05-16 14:23:03,206:INFO:Assigning column types.
2023-05-16 14:23:03,209:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 14:23:03,209:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,214:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,218:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,274:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,320:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,325:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,330:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,430:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,431:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-16 14:23:03,436:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,440:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,497:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,547:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,551:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,653:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-16 14:23:03,662:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,718:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,829:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,875:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-16 14:23:03,940:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:03,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:03,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,051:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:04,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:23:04,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,097:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 14:23:04,163:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:04,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,273:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:23:04,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,318:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-16 14:23:04,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,540:INFO:Preparing preprocessing pipeline...
2023-05-16 14:23:04,540:INFO:Set up simple imputation.
2023-05-16 14:23:04,542:INFO:Set up encoding of ordinal features.
2023-05-16 14:23:04,544:INFO:Set up encoding of categorical features.
2023-05-16 14:23:04,611:INFO:Finished creating preprocessing pipeline.
2023-05-16 14:23:04,645:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-05-16 14:23:04,646:INFO:Creating final display dataframe.
2023-05-16 14:23:04,824:INFO:Setup _display_container:                     Description             Value
0                    Session id              3916
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              080c
2023-05-16 14:23:04,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:04,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:05,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:05,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:23:05,055:INFO:setup() successfully completed in 2.03s...............
2023-05-16 14:23:05,215:INFO:Initializing compare_models()
2023-05-16 14:23:05,215:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-05-16 14:23:05,215:INFO:Checking exceptions
2023-05-16 14:23:05,217:INFO:Preparing display monitor
2023-05-16 14:23:05,247:INFO:Initializing Linear Regression
2023-05-16 14:23:05,247:INFO:Total runtime is 0.0 minutes
2023-05-16 14:23:05,250:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:05,251:INFO:Initializing create_model()
2023-05-16 14:23:05,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:05,251:INFO:Checking exceptions
2023-05-16 14:23:05,252:INFO:Importing libraries
2023-05-16 14:23:05,252:INFO:Copying training dataset
2023-05-16 14:23:05,258:INFO:Defining folds
2023-05-16 14:23:05,258:INFO:Declaring metric variables
2023-05-16 14:23:05,261:INFO:Importing untrained model
2023-05-16 14:23:05,265:INFO:Linear Regression Imported successfully
2023-05-16 14:23:05,273:INFO:Starting cross validation
2023-05-16 14:23:05,275:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:07,215:INFO:Calculating mean and std
2023-05-16 14:23:07,216:INFO:Creating metrics dataframe
2023-05-16 14:23:07,524:INFO:Uploading results into container
2023-05-16 14:23:07,524:INFO:Uploading model into container now
2023-05-16 14:23:07,525:INFO:_master_model_container: 1
2023-05-16 14:23:07,525:INFO:_display_container: 2
2023-05-16 14:23:07,526:INFO:LinearRegression(n_jobs=-1)
2023-05-16 14:23:07,526:INFO:create_model() successfully completed......................................
2023-05-16 14:23:07,630:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:07,631:INFO:Creating metrics dataframe
2023-05-16 14:23:07,638:INFO:Initializing Lasso Regression
2023-05-16 14:23:07,638:INFO:Total runtime is 0.039855468273162845 minutes
2023-05-16 14:23:07,643:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:07,644:INFO:Initializing create_model()
2023-05-16 14:23:07,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:07,644:INFO:Checking exceptions
2023-05-16 14:23:07,644:INFO:Importing libraries
2023-05-16 14:23:07,644:INFO:Copying training dataset
2023-05-16 14:23:07,649:INFO:Defining folds
2023-05-16 14:23:07,650:INFO:Declaring metric variables
2023-05-16 14:23:07,655:INFO:Importing untrained model
2023-05-16 14:23:07,661:INFO:Lasso Regression Imported successfully
2023-05-16 14:23:07,670:INFO:Starting cross validation
2023-05-16 14:23:07,671:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:09,583:INFO:Calculating mean and std
2023-05-16 14:23:09,584:INFO:Creating metrics dataframe
2023-05-16 14:23:09,949:INFO:Uploading results into container
2023-05-16 14:23:09,950:INFO:Uploading model into container now
2023-05-16 14:23:09,951:INFO:_master_model_container: 2
2023-05-16 14:23:09,951:INFO:_display_container: 2
2023-05-16 14:23:09,951:INFO:Lasso(random_state=3916)
2023-05-16 14:23:09,951:INFO:create_model() successfully completed......................................
2023-05-16 14:23:10,053:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:10,054:INFO:Creating metrics dataframe
2023-05-16 14:23:10,062:INFO:Initializing Ridge Regression
2023-05-16 14:23:10,063:INFO:Total runtime is 0.08026797771453859 minutes
2023-05-16 14:23:10,067:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:10,068:INFO:Initializing create_model()
2023-05-16 14:23:10,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:10,068:INFO:Checking exceptions
2023-05-16 14:23:10,068:INFO:Importing libraries
2023-05-16 14:23:10,068:INFO:Copying training dataset
2023-05-16 14:23:10,073:INFO:Defining folds
2023-05-16 14:23:10,073:INFO:Declaring metric variables
2023-05-16 14:23:10,077:INFO:Importing untrained model
2023-05-16 14:23:10,081:INFO:Ridge Regression Imported successfully
2023-05-16 14:23:10,088:INFO:Starting cross validation
2023-05-16 14:23:10,089:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:12,078:INFO:Calculating mean and std
2023-05-16 14:23:12,080:INFO:Creating metrics dataframe
2023-05-16 14:23:12,448:INFO:Uploading results into container
2023-05-16 14:23:12,449:INFO:Uploading model into container now
2023-05-16 14:23:12,449:INFO:_master_model_container: 3
2023-05-16 14:23:12,450:INFO:_display_container: 2
2023-05-16 14:23:12,450:INFO:Ridge(random_state=3916)
2023-05-16 14:23:12,451:INFO:create_model() successfully completed......................................
2023-05-16 14:23:12,593:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:12,593:INFO:Creating metrics dataframe
2023-05-16 14:23:12,602:INFO:Initializing Elastic Net
2023-05-16 14:23:12,602:INFO:Total runtime is 0.12258002360661827 minutes
2023-05-16 14:23:12,607:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:12,608:INFO:Initializing create_model()
2023-05-16 14:23:12,608:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:12,608:INFO:Checking exceptions
2023-05-16 14:23:12,608:INFO:Importing libraries
2023-05-16 14:23:12,608:INFO:Copying training dataset
2023-05-16 14:23:12,616:INFO:Defining folds
2023-05-16 14:23:12,616:INFO:Declaring metric variables
2023-05-16 14:23:12,622:INFO:Importing untrained model
2023-05-16 14:23:12,628:INFO:Elastic Net Imported successfully
2023-05-16 14:23:12,638:INFO:Starting cross validation
2023-05-16 14:23:12,640:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:15,033:INFO:Calculating mean and std
2023-05-16 14:23:15,035:INFO:Creating metrics dataframe
2023-05-16 14:23:15,406:INFO:Uploading results into container
2023-05-16 14:23:15,407:INFO:Uploading model into container now
2023-05-16 14:23:15,407:INFO:_master_model_container: 4
2023-05-16 14:23:15,407:INFO:_display_container: 2
2023-05-16 14:23:15,407:INFO:ElasticNet(random_state=3916)
2023-05-16 14:23:15,408:INFO:create_model() successfully completed......................................
2023-05-16 14:23:15,557:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:15,558:INFO:Creating metrics dataframe
2023-05-16 14:23:15,570:INFO:Initializing Least Angle Regression
2023-05-16 14:23:15,570:INFO:Total runtime is 0.17205098072687786 minutes
2023-05-16 14:23:15,576:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:15,576:INFO:Initializing create_model()
2023-05-16 14:23:15,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:15,577:INFO:Checking exceptions
2023-05-16 14:23:15,577:INFO:Importing libraries
2023-05-16 14:23:15,577:INFO:Copying training dataset
2023-05-16 14:23:15,585:INFO:Defining folds
2023-05-16 14:23:15,585:INFO:Declaring metric variables
2023-05-16 14:23:15,590:INFO:Importing untrained model
2023-05-16 14:23:15,596:INFO:Least Angle Regression Imported successfully
2023-05-16 14:23:15,604:INFO:Starting cross validation
2023-05-16 14:23:15,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:15,836:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:15,850:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:15,864:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.171e+00, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-16 14:23:15,870:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:15,888:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:15,944:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:15,944:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:15,965:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:15,967:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:16,025:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:16,046:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:17,997:INFO:Calculating mean and std
2023-05-16 14:23:17,998:INFO:Creating metrics dataframe
2023-05-16 14:23:18,384:INFO:Uploading results into container
2023-05-16 14:23:18,385:INFO:Uploading model into container now
2023-05-16 14:23:18,385:INFO:_master_model_container: 5
2023-05-16 14:23:18,385:INFO:_display_container: 2
2023-05-16 14:23:18,386:INFO:Lars(random_state=3916)
2023-05-16 14:23:18,386:INFO:create_model() successfully completed......................................
2023-05-16 14:23:18,486:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:18,486:INFO:Creating metrics dataframe
2023-05-16 14:23:18,494:INFO:Initializing Lasso Least Angle Regression
2023-05-16 14:23:18,494:INFO:Total runtime is 0.22078883250554404 minutes
2023-05-16 14:23:18,497:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:18,497:INFO:Initializing create_model()
2023-05-16 14:23:18,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:18,498:INFO:Checking exceptions
2023-05-16 14:23:18,498:INFO:Importing libraries
2023-05-16 14:23:18,498:INFO:Copying training dataset
2023-05-16 14:23:18,502:INFO:Defining folds
2023-05-16 14:23:18,503:INFO:Declaring metric variables
2023-05-16 14:23:18,507:INFO:Importing untrained model
2023-05-16 14:23:18,519:INFO:Lasso Least Angle Regression Imported successfully
2023-05-16 14:23:18,531:INFO:Starting cross validation
2023-05-16 14:23:18,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:18,703:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,717:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,730:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,734:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,744:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,752:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,781:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,787:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,799:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:18,822:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-16 14:23:20,534:INFO:Calculating mean and std
2023-05-16 14:23:20,535:INFO:Creating metrics dataframe
2023-05-16 14:23:20,926:INFO:Uploading results into container
2023-05-16 14:23:20,927:INFO:Uploading model into container now
2023-05-16 14:23:20,928:INFO:_master_model_container: 6
2023-05-16 14:23:20,928:INFO:_display_container: 2
2023-05-16 14:23:20,928:INFO:LassoLars(random_state=3916)
2023-05-16 14:23:20,929:INFO:create_model() successfully completed......................................
2023-05-16 14:23:21,028:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:21,028:INFO:Creating metrics dataframe
2023-05-16 14:23:21,037:INFO:Initializing Orthogonal Matching Pursuit
2023-05-16 14:23:21,037:INFO:Total runtime is 0.2631595730781555 minutes
2023-05-16 14:23:21,040:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:21,041:INFO:Initializing create_model()
2023-05-16 14:23:21,041:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:21,042:INFO:Checking exceptions
2023-05-16 14:23:21,042:INFO:Importing libraries
2023-05-16 14:23:21,042:INFO:Copying training dataset
2023-05-16 14:23:21,048:INFO:Defining folds
2023-05-16 14:23:21,048:INFO:Declaring metric variables
2023-05-16 14:23:21,054:INFO:Importing untrained model
2023-05-16 14:23:21,059:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-16 14:23:21,066:INFO:Starting cross validation
2023-05-16 14:23:21,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:21,293:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,296:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,334:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,337:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,357:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,374:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,380:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,381:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,395:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:21,423:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-16 14:23:23,235:INFO:Calculating mean and std
2023-05-16 14:23:23,237:INFO:Creating metrics dataframe
2023-05-16 14:23:23,613:INFO:Uploading results into container
2023-05-16 14:23:23,614:INFO:Uploading model into container now
2023-05-16 14:23:23,615:INFO:_master_model_container: 7
2023-05-16 14:23:23,615:INFO:_display_container: 2
2023-05-16 14:23:23,615:INFO:OrthogonalMatchingPursuit()
2023-05-16 14:23:23,616:INFO:create_model() successfully completed......................................
2023-05-16 14:23:23,768:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:23,768:INFO:Creating metrics dataframe
2023-05-16 14:23:23,781:INFO:Initializing Bayesian Ridge
2023-05-16 14:23:23,781:INFO:Total runtime is 0.308904242515564 minutes
2023-05-16 14:23:23,786:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:23,786:INFO:Initializing create_model()
2023-05-16 14:23:23,787:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:23,787:INFO:Checking exceptions
2023-05-16 14:23:23,787:INFO:Importing libraries
2023-05-16 14:23:23,787:INFO:Copying training dataset
2023-05-16 14:23:23,800:INFO:Defining folds
2023-05-16 14:23:23,800:INFO:Declaring metric variables
2023-05-16 14:23:23,808:INFO:Importing untrained model
2023-05-16 14:23:23,815:INFO:Bayesian Ridge Imported successfully
2023-05-16 14:23:23,830:INFO:Starting cross validation
2023-05-16 14:23:23,832:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:26,196:INFO:Calculating mean and std
2023-05-16 14:23:26,197:INFO:Creating metrics dataframe
2023-05-16 14:23:26,594:INFO:Uploading results into container
2023-05-16 14:23:26,595:INFO:Uploading model into container now
2023-05-16 14:23:26,595:INFO:_master_model_container: 8
2023-05-16 14:23:26,595:INFO:_display_container: 2
2023-05-16 14:23:26,596:INFO:BayesianRidge()
2023-05-16 14:23:26,596:INFO:create_model() successfully completed......................................
2023-05-16 14:23:26,761:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:26,761:INFO:Creating metrics dataframe
2023-05-16 14:23:26,773:INFO:Initializing Passive Aggressive Regressor
2023-05-16 14:23:26,773:INFO:Total runtime is 0.35876732269922895 minutes
2023-05-16 14:23:26,778:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:26,778:INFO:Initializing create_model()
2023-05-16 14:23:26,778:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:26,780:INFO:Checking exceptions
2023-05-16 14:23:26,780:INFO:Importing libraries
2023-05-16 14:23:26,780:INFO:Copying training dataset
2023-05-16 14:23:26,784:INFO:Defining folds
2023-05-16 14:23:26,785:INFO:Declaring metric variables
2023-05-16 14:23:26,789:INFO:Importing untrained model
2023-05-16 14:23:26,796:INFO:Passive Aggressive Regressor Imported successfully
2023-05-16 14:23:26,808:INFO:Starting cross validation
2023-05-16 14:23:26,809:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:28,978:INFO:Calculating mean and std
2023-05-16 14:23:28,981:INFO:Creating metrics dataframe
2023-05-16 14:23:29,378:INFO:Uploading results into container
2023-05-16 14:23:29,379:INFO:Uploading model into container now
2023-05-16 14:23:29,380:INFO:_master_model_container: 9
2023-05-16 14:23:29,380:INFO:_display_container: 2
2023-05-16 14:23:29,382:INFO:PassiveAggressiveRegressor(random_state=3916)
2023-05-16 14:23:29,382:INFO:create_model() successfully completed......................................
2023-05-16 14:23:29,481:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:29,481:INFO:Creating metrics dataframe
2023-05-16 14:23:29,490:INFO:Initializing Huber Regressor
2023-05-16 14:23:29,490:INFO:Total runtime is 0.40405207872390747 minutes
2023-05-16 14:23:29,494:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:29,494:INFO:Initializing create_model()
2023-05-16 14:23:29,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:29,495:INFO:Checking exceptions
2023-05-16 14:23:29,495:INFO:Importing libraries
2023-05-16 14:23:29,495:INFO:Copying training dataset
2023-05-16 14:23:29,502:INFO:Defining folds
2023-05-16 14:23:29,503:INFO:Declaring metric variables
2023-05-16 14:23:29,507:INFO:Importing untrained model
2023-05-16 14:23:29,512:INFO:Huber Regressor Imported successfully
2023-05-16 14:23:29,518:INFO:Starting cross validation
2023-05-16 14:23:29,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:29,735:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,746:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,752:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,777:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,784:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,790:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,834:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,843:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:29,856:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-05-16 14:23:31,582:INFO:Calculating mean and std
2023-05-16 14:23:31,584:INFO:Creating metrics dataframe
2023-05-16 14:23:31,984:INFO:Uploading results into container
2023-05-16 14:23:31,984:INFO:Uploading model into container now
2023-05-16 14:23:31,985:INFO:_master_model_container: 10
2023-05-16 14:23:31,985:INFO:_display_container: 2
2023-05-16 14:23:31,985:INFO:HuberRegressor()
2023-05-16 14:23:31,986:INFO:create_model() successfully completed......................................
2023-05-16 14:23:32,096:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:32,096:INFO:Creating metrics dataframe
2023-05-16 14:23:32,107:INFO:Initializing K Neighbors Regressor
2023-05-16 14:23:32,108:INFO:Total runtime is 0.4476788918177287 minutes
2023-05-16 14:23:32,112:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:32,112:INFO:Initializing create_model()
2023-05-16 14:23:32,112:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:32,112:INFO:Checking exceptions
2023-05-16 14:23:32,112:INFO:Importing libraries
2023-05-16 14:23:32,112:INFO:Copying training dataset
2023-05-16 14:23:32,116:INFO:Defining folds
2023-05-16 14:23:32,116:INFO:Declaring metric variables
2023-05-16 14:23:32,120:INFO:Importing untrained model
2023-05-16 14:23:32,123:INFO:K Neighbors Regressor Imported successfully
2023-05-16 14:23:32,135:INFO:Starting cross validation
2023-05-16 14:23:32,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:34,962:INFO:Calculating mean and std
2023-05-16 14:23:34,963:INFO:Creating metrics dataframe
2023-05-16 14:23:35,392:INFO:Uploading results into container
2023-05-16 14:23:35,393:INFO:Uploading model into container now
2023-05-16 14:23:35,393:INFO:_master_model_container: 11
2023-05-16 14:23:35,393:INFO:_display_container: 2
2023-05-16 14:23:35,394:INFO:KNeighborsRegressor(n_jobs=-1)
2023-05-16 14:23:35,394:INFO:create_model() successfully completed......................................
2023-05-16 14:23:35,553:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:35,553:INFO:Creating metrics dataframe
2023-05-16 14:23:35,564:INFO:Initializing Decision Tree Regressor
2023-05-16 14:23:35,565:INFO:Total runtime is 0.5053064982096355 minutes
2023-05-16 14:23:35,570:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:35,570:INFO:Initializing create_model()
2023-05-16 14:23:35,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:35,571:INFO:Checking exceptions
2023-05-16 14:23:35,571:INFO:Importing libraries
2023-05-16 14:23:35,571:INFO:Copying training dataset
2023-05-16 14:23:35,575:INFO:Defining folds
2023-05-16 14:23:35,576:INFO:Declaring metric variables
2023-05-16 14:23:35,580:INFO:Importing untrained model
2023-05-16 14:23:35,586:INFO:Decision Tree Regressor Imported successfully
2023-05-16 14:23:35,604:INFO:Starting cross validation
2023-05-16 14:23:35,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:36,803:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-16 14:23:36,806:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-16 14:23:38,390:INFO:Calculating mean and std
2023-05-16 14:23:38,392:INFO:Creating metrics dataframe
2023-05-16 14:23:38,760:INFO:Uploading results into container
2023-05-16 14:23:38,760:INFO:Uploading model into container now
2023-05-16 14:23:38,760:INFO:_master_model_container: 12
2023-05-16 14:23:38,762:INFO:_display_container: 2
2023-05-16 14:23:38,762:INFO:DecisionTreeRegressor(random_state=3916)
2023-05-16 14:23:38,762:INFO:create_model() successfully completed......................................
2023-05-16 14:23:38,887:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:38,887:INFO:Creating metrics dataframe
2023-05-16 14:23:38,897:INFO:Initializing Random Forest Regressor
2023-05-16 14:23:38,897:INFO:Total runtime is 0.5608263770739238 minutes
2023-05-16 14:23:38,900:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:38,900:INFO:Initializing create_model()
2023-05-16 14:23:38,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:38,900:INFO:Checking exceptions
2023-05-16 14:23:38,900:INFO:Importing libraries
2023-05-16 14:23:38,901:INFO:Copying training dataset
2023-05-16 14:23:38,905:INFO:Defining folds
2023-05-16 14:23:38,905:INFO:Declaring metric variables
2023-05-16 14:23:38,909:INFO:Importing untrained model
2023-05-16 14:23:38,913:INFO:Random Forest Regressor Imported successfully
2023-05-16 14:23:38,922:INFO:Starting cross validation
2023-05-16 14:23:38,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:41,657:INFO:Calculating mean and std
2023-05-16 14:23:41,658:INFO:Creating metrics dataframe
2023-05-16 14:23:42,049:INFO:Uploading results into container
2023-05-16 14:23:42,050:INFO:Uploading model into container now
2023-05-16 14:23:42,050:INFO:_master_model_container: 13
2023-05-16 14:23:42,050:INFO:_display_container: 2
2023-05-16 14:23:42,051:INFO:RandomForestRegressor(n_jobs=-1, random_state=3916)
2023-05-16 14:23:42,052:INFO:create_model() successfully completed......................................
2023-05-16 14:23:42,153:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:42,153:INFO:Creating metrics dataframe
2023-05-16 14:23:42,163:INFO:Initializing Extra Trees Regressor
2023-05-16 14:23:42,164:INFO:Total runtime is 0.6152853647867839 minutes
2023-05-16 14:23:42,168:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:42,168:INFO:Initializing create_model()
2023-05-16 14:23:42,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:42,168:INFO:Checking exceptions
2023-05-16 14:23:42,168:INFO:Importing libraries
2023-05-16 14:23:42,168:INFO:Copying training dataset
2023-05-16 14:23:42,172:INFO:Defining folds
2023-05-16 14:23:42,172:INFO:Declaring metric variables
2023-05-16 14:23:42,179:INFO:Importing untrained model
2023-05-16 14:23:42,187:INFO:Extra Trees Regressor Imported successfully
2023-05-16 14:23:42,202:INFO:Starting cross validation
2023-05-16 14:23:42,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:44,927:INFO:Calculating mean and std
2023-05-16 14:23:44,929:INFO:Creating metrics dataframe
2023-05-16 14:23:45,343:INFO:Uploading results into container
2023-05-16 14:23:45,344:INFO:Uploading model into container now
2023-05-16 14:23:45,345:INFO:_master_model_container: 14
2023-05-16 14:23:45,345:INFO:_display_container: 2
2023-05-16 14:23:45,346:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3916)
2023-05-16 14:23:45,346:INFO:create_model() successfully completed......................................
2023-05-16 14:23:45,441:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:45,441:INFO:Creating metrics dataframe
2023-05-16 14:23:45,454:INFO:Initializing AdaBoost Regressor
2023-05-16 14:23:45,455:INFO:Total runtime is 0.670140556494395 minutes
2023-05-16 14:23:45,459:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:45,459:INFO:Initializing create_model()
2023-05-16 14:23:45,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:45,459:INFO:Checking exceptions
2023-05-16 14:23:45,459:INFO:Importing libraries
2023-05-16 14:23:45,460:INFO:Copying training dataset
2023-05-16 14:23:45,465:INFO:Defining folds
2023-05-16 14:23:45,465:INFO:Declaring metric variables
2023-05-16 14:23:45,470:INFO:Importing untrained model
2023-05-16 14:23:45,473:INFO:AdaBoost Regressor Imported successfully
2023-05-16 14:23:45,480:INFO:Starting cross validation
2023-05-16 14:23:45,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:47,541:INFO:Calculating mean and std
2023-05-16 14:23:47,542:INFO:Creating metrics dataframe
2023-05-16 14:23:47,962:INFO:Uploading results into container
2023-05-16 14:23:47,963:INFO:Uploading model into container now
2023-05-16 14:23:47,964:INFO:_master_model_container: 15
2023-05-16 14:23:47,964:INFO:_display_container: 2
2023-05-16 14:23:47,965:INFO:AdaBoostRegressor(random_state=3916)
2023-05-16 14:23:47,965:INFO:create_model() successfully completed......................................
2023-05-16 14:23:48,067:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:48,068:INFO:Creating metrics dataframe
2023-05-16 14:23:48,080:INFO:Initializing Gradient Boosting Regressor
2023-05-16 14:23:48,081:INFO:Total runtime is 0.7139030694961548 minutes
2023-05-16 14:23:48,085:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:48,086:INFO:Initializing create_model()
2023-05-16 14:23:48,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:48,086:INFO:Checking exceptions
2023-05-16 14:23:48,086:INFO:Importing libraries
2023-05-16 14:23:48,086:INFO:Copying training dataset
2023-05-16 14:23:48,093:INFO:Defining folds
2023-05-16 14:23:48,093:INFO:Declaring metric variables
2023-05-16 14:23:48,097:INFO:Importing untrained model
2023-05-16 14:23:48,100:INFO:Gradient Boosting Regressor Imported successfully
2023-05-16 14:23:48,111:INFO:Starting cross validation
2023-05-16 14:23:48,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:50,447:INFO:Calculating mean and std
2023-05-16 14:23:50,449:INFO:Creating metrics dataframe
2023-05-16 14:23:50,862:INFO:Uploading results into container
2023-05-16 14:23:50,864:INFO:Uploading model into container now
2023-05-16 14:23:50,864:INFO:_master_model_container: 16
2023-05-16 14:23:50,864:INFO:_display_container: 2
2023-05-16 14:23:50,865:INFO:GradientBoostingRegressor(random_state=3916)
2023-05-16 14:23:50,865:INFO:create_model() successfully completed......................................
2023-05-16 14:23:50,980:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:50,980:INFO:Creating metrics dataframe
2023-05-16 14:23:50,993:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 14:23:50,994:INFO:Total runtime is 0.7624525348345439 minutes
2023-05-16 14:23:50,997:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:50,998:INFO:Initializing create_model()
2023-05-16 14:23:50,998:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:50,998:INFO:Checking exceptions
2023-05-16 14:23:50,998:INFO:Importing libraries
2023-05-16 14:23:50,999:INFO:Copying training dataset
2023-05-16 14:23:51,004:INFO:Defining folds
2023-05-16 14:23:51,004:INFO:Declaring metric variables
2023-05-16 14:23:51,008:INFO:Importing untrained model
2023-05-16 14:23:51,011:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 14:23:51,021:INFO:Starting cross validation
2023-05-16 14:23:51,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:53,502:INFO:Calculating mean and std
2023-05-16 14:23:53,504:INFO:Creating metrics dataframe
2023-05-16 14:23:53,895:INFO:Uploading results into container
2023-05-16 14:23:53,896:INFO:Uploading model into container now
2023-05-16 14:23:53,896:INFO:_master_model_container: 17
2023-05-16 14:23:53,896:INFO:_display_container: 2
2023-05-16 14:23:53,897:INFO:LGBMRegressor(random_state=3916)
2023-05-16 14:23:53,897:INFO:create_model() successfully completed......................................
2023-05-16 14:23:53,997:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:53,997:INFO:Creating metrics dataframe
2023-05-16 14:23:54,010:INFO:Initializing Dummy Regressor
2023-05-16 14:23:54,011:INFO:Total runtime is 0.8127311031023662 minutes
2023-05-16 14:23:54,014:INFO:SubProcess create_model() called ==================================
2023-05-16 14:23:54,016:INFO:Initializing create_model()
2023-05-16 14:23:54,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE48753580>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:54,016:INFO:Checking exceptions
2023-05-16 14:23:54,016:INFO:Importing libraries
2023-05-16 14:23:54,017:INFO:Copying training dataset
2023-05-16 14:23:54,021:INFO:Defining folds
2023-05-16 14:23:54,022:INFO:Declaring metric variables
2023-05-16 14:23:54,028:INFO:Importing untrained model
2023-05-16 14:23:54,032:INFO:Dummy Regressor Imported successfully
2023-05-16 14:23:54,040:INFO:Starting cross validation
2023-05-16 14:23:54,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:23:56,068:INFO:Calculating mean and std
2023-05-16 14:23:56,070:INFO:Creating metrics dataframe
2023-05-16 14:23:56,512:INFO:Uploading results into container
2023-05-16 14:23:56,513:INFO:Uploading model into container now
2023-05-16 14:23:56,514:INFO:_master_model_container: 18
2023-05-16 14:23:56,514:INFO:_display_container: 2
2023-05-16 14:23:56,515:INFO:DummyRegressor()
2023-05-16 14:23:56,515:INFO:create_model() successfully completed......................................
2023-05-16 14:23:56,613:INFO:SubProcess create_model() end ==================================
2023-05-16 14:23:56,613:INFO:Creating metrics dataframe
2023-05-16 14:23:56,635:INFO:Initializing create_model()
2023-05-16 14:23:56,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4CD6FF40>, estimator=GradientBoostingRegressor(random_state=3916), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:23:56,635:INFO:Checking exceptions
2023-05-16 14:23:56,637:INFO:Importing libraries
2023-05-16 14:23:56,637:INFO:Copying training dataset
2023-05-16 14:23:56,640:INFO:Defining folds
2023-05-16 14:23:56,640:INFO:Declaring metric variables
2023-05-16 14:23:56,640:INFO:Importing untrained model
2023-05-16 14:23:56,640:INFO:Declaring custom model
2023-05-16 14:23:56,641:INFO:Gradient Boosting Regressor Imported successfully
2023-05-16 14:23:56,642:INFO:Cross validation set to False
2023-05-16 14:23:56,642:INFO:Fitting Model
2023-05-16 14:23:56,973:INFO:GradientBoostingRegressor(random_state=3916)
2023-05-16 14:23:56,973:INFO:create_model() successfully completed......................................
2023-05-16 14:23:57,099:INFO:_master_model_container: 18
2023-05-16 14:23:57,100:INFO:_display_container: 2
2023-05-16 14:23:57,100:INFO:GradientBoostingRegressor(random_state=3916)
2023-05-16 14:23:57,101:INFO:compare_models() successfully completed......................................
2023-05-16 14:26:01,770:INFO:PyCaret RegressionExperiment
2023-05-16 14:26:01,770:INFO:Logging name: reg-default-name
2023-05-16 14:26:01,770:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-16 14:26:01,770:INFO:version 3.0.1
2023-05-16 14:26:01,770:INFO:Initializing setup()
2023-05-16 14:26:01,770:INFO:self.USI: 7756
2023-05-16 14:26:01,770:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'seed', '_available_plots', 'data', 'USI', 'html_param', 'gpu_param', '_ml_usecase', 'transform_target_param', 'X_train', 'n_jobs_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'memory', 'target_param', 'log_plots_param', 'X', 'y_test', 'y', 'pipeline', 'logging_param', 'y_train', 'exp_name_log', 'X_test', 'exp_id', 'fold_generator'}
2023-05-16 14:26:01,770:INFO:Checking environment
2023-05-16 14:26:01,770:INFO:python_version: 3.9.13
2023-05-16 14:26:01,770:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 14:26:01,770:INFO:machine: AMD64
2023-05-16 14:26:01,770:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 14:26:01,770:INFO:Memory: svmem(total=7968444416, available=480292864, percent=94.0, used=7488151552, free=480292864)
2023-05-16 14:26:01,770:INFO:Physical Core: 6
2023-05-16 14:26:01,770:INFO:Logical Core: 12
2023-05-16 14:26:01,770:INFO:Checking libraries
2023-05-16 14:26:01,770:INFO:System:
2023-05-16 14:26:01,771:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 14:26:01,771:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 14:26:01,771:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 14:26:01,771:INFO:PyCaret required dependencies:
2023-05-16 14:26:01,771:INFO:                 pip: 22.2.2
2023-05-16 14:26:01,771:INFO:          setuptools: 63.4.1
2023-05-16 14:26:01,771:INFO:             pycaret: 3.0.1
2023-05-16 14:26:01,771:INFO:             IPython: 7.31.1
2023-05-16 14:26:01,771:INFO:          ipywidgets: 7.6.5
2023-05-16 14:26:01,771:INFO:                tqdm: 4.64.1
2023-05-16 14:26:01,771:INFO:               numpy: 1.21.6
2023-05-16 14:26:01,771:INFO:              pandas: 1.4.4
2023-05-16 14:26:01,771:INFO:              jinja2: 2.11.3
2023-05-16 14:26:01,771:INFO:               scipy: 1.9.1
2023-05-16 14:26:01,771:INFO:              joblib: 1.2.0
2023-05-16 14:26:01,771:INFO:             sklearn: 1.0.2
2023-05-16 14:26:01,771:INFO:                pyod: 1.0.9
2023-05-16 14:26:01,771:INFO:            imblearn: 0.10.1
2023-05-16 14:26:01,771:INFO:   category_encoders: 2.6.1
2023-05-16 14:26:01,771:INFO:            lightgbm: 3.3.5
2023-05-16 14:26:01,771:INFO:               numba: 0.55.1
2023-05-16 14:26:01,771:INFO:            requests: 2.28.1
2023-05-16 14:26:01,771:INFO:          matplotlib: 3.5.2
2023-05-16 14:26:01,771:INFO:          scikitplot: 0.3.7
2023-05-16 14:26:01,771:INFO:         yellowbrick: 1.5
2023-05-16 14:26:01,771:INFO:              plotly: 5.9.0
2023-05-16 14:26:01,771:INFO:             kaleido: 0.2.1
2023-05-16 14:26:01,772:INFO:         statsmodels: 0.13.2
2023-05-16 14:26:01,772:INFO:              sktime: 0.17.0
2023-05-16 14:26:01,772:INFO:               tbats: 1.1.3
2023-05-16 14:26:01,772:INFO:            pmdarima: 2.0.3
2023-05-16 14:26:01,772:INFO:              psutil: 5.9.0
2023-05-16 14:26:01,772:INFO:PyCaret optional dependencies:
2023-05-16 14:26:01,772:INFO:                shap: Not installed
2023-05-16 14:26:01,772:INFO:           interpret: Not installed
2023-05-16 14:26:01,772:INFO:                umap: Not installed
2023-05-16 14:26:01,772:INFO:    pandas_profiling: Not installed
2023-05-16 14:26:01,772:INFO:  explainerdashboard: Not installed
2023-05-16 14:26:01,772:INFO:             autoviz: Not installed
2023-05-16 14:26:01,772:INFO:           fairlearn: Not installed
2023-05-16 14:26:01,772:INFO:             xgboost: Not installed
2023-05-16 14:26:01,772:INFO:            catboost: Not installed
2023-05-16 14:26:01,772:INFO:              kmodes: Not installed
2023-05-16 14:26:01,772:INFO:             mlxtend: Not installed
2023-05-16 14:26:01,772:INFO:       statsforecast: Not installed
2023-05-16 14:26:01,772:INFO:        tune_sklearn: Not installed
2023-05-16 14:26:01,772:INFO:                 ray: Not installed
2023-05-16 14:26:01,772:INFO:            hyperopt: Not installed
2023-05-16 14:26:01,772:INFO:              optuna: Not installed
2023-05-16 14:26:01,772:INFO:               skopt: Not installed
2023-05-16 14:26:01,772:INFO:              mlflow: Not installed
2023-05-16 14:26:01,772:INFO:              gradio: Not installed
2023-05-16 14:26:01,772:INFO:             fastapi: Not installed
2023-05-16 14:26:01,772:INFO:             uvicorn: Not installed
2023-05-16 14:26:01,772:INFO:              m2cgen: Not installed
2023-05-16 14:26:01,772:INFO:           evidently: Not installed
2023-05-16 14:26:01,772:INFO:               fugue: Not installed
2023-05-16 14:26:01,773:INFO:           streamlit: 1.20.0
2023-05-16 14:26:01,773:INFO:             prophet: Not installed
2023-05-16 14:26:01,773:INFO:None
2023-05-16 14:26:01,773:INFO:Set up data.
2023-05-16 14:26:01,777:INFO:Set up train/test split.
2023-05-16 14:26:01,780:INFO:Set up index.
2023-05-16 14:26:01,780:INFO:Set up folding strategy.
2023-05-16 14:26:01,780:INFO:Assigning column types.
2023-05-16 14:26:01,783:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 14:26:01,783:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,788:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,792:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,893:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:01,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:01,895:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,899:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:26:01,961:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,005:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-16 14:26:02,010:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,015:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,122:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,126:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,197:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,244:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,245:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-16 14:26:02,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,311:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,366:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,423:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,468:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-16 14:26:02,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,644:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,689:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 14:26:02,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-16 14:26:02,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:02,913:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-16 14:26:03,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,134:INFO:Preparing preprocessing pipeline...
2023-05-16 14:26:03,134:INFO:Set up simple imputation.
2023-05-16 14:26:03,136:INFO:Set up encoding of ordinal features.
2023-05-16 14:26:03,138:INFO:Set up encoding of categorical features.
2023-05-16 14:26:03,206:INFO:Finished creating preprocessing pipeline.
2023-05-16 14:26:03,243:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-05-16 14:26:03,243:INFO:Creating final display dataframe.
2023-05-16 14:26:03,432:INFO:Setup _display_container:                     Description             Value
0                    Session id              5777
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              7756
2023-05-16 14:26:03,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 14:26:03,663:INFO:setup() successfully completed in 2.08s...............
2023-05-16 14:26:03,840:INFO:Initializing create_model()
2023-05-16 14:26:03,840:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4C73AFD0>, estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 14:26:03,840:INFO:Checking exceptions
2023-05-16 14:26:03,863:INFO:Importing libraries
2023-05-16 14:26:03,864:INFO:Copying training dataset
2023-05-16 14:26:03,868:INFO:Defining folds
2023-05-16 14:26:03,868:INFO:Declaring metric variables
2023-05-16 14:26:03,871:INFO:Importing untrained model
2023-05-16 14:26:03,875:INFO:Gradient Boosting Regressor Imported successfully
2023-05-16 14:26:03,881:INFO:Starting cross validation
2023-05-16 14:26:03,884:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 14:26:06,000:INFO:Calculating mean and std
2023-05-16 14:26:06,002:INFO:Creating metrics dataframe
2023-05-16 14:26:06,008:INFO:Finalizing model
2023-05-16 14:26:06,615:INFO:Uploading results into container
2023-05-16 14:26:06,616:INFO:Uploading model into container now
2023-05-16 14:26:06,625:INFO:_master_model_container: 1
2023-05-16 14:26:06,625:INFO:_display_container: 2
2023-05-16 14:26:06,626:INFO:GradientBoostingRegressor(random_state=5777)
2023-05-16 14:26:06,626:INFO:create_model() successfully completed......................................
2023-05-16 14:27:13,059:INFO:Initializing save_model()
2023-05-16 14:27:13,060:INFO:save_model(model=GradientBoostingRegressor(random_state=5777), model_name=model_save_grb, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-05-16 14:27:13,060:INFO:Adding model into prep_pipe
2023-05-16 14:27:13,072:INFO:model_save_grb.pkl saved in current working directory
2023-05-16 14:27:13,127:INFO:Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model',
                 GradientBoostingRegressor(random_state=5777))])
2023-05-16 14:27:13,127:INFO:save_model() successfully completed......................................
2023-05-16 14:29:06,305:INFO:Initializing load_model()
2023-05-16 14:29:06,306:INFO:load_model(model_name=model_save_grb.pkl, platform=None, authentication=None, verbose=True)
2023-05-16 14:29:28,388:INFO:Initializing load_model()
2023-05-16 14:29:28,388:INFO:load_model(model_name=model_save_grb.pkl, platform=None, authentication=None, verbose=True)
2023-05-16 14:29:42,932:INFO:Initializing load_model()
2023-05-16 14:29:42,932:INFO:load_model(model_name=Learn Data/4. Machine Learning PyCaret/2. Health Insurance Cost Prediction/model_save_grb.pkl, platform=None, authentication=None, verbose=True)
2023-05-16 14:29:46,020:INFO:Initializing load_model()
2023-05-16 14:29:46,021:INFO:load_model(model_name=Learn Data/4. Machine Learning PyCaret/2. Health Insurance Cost Prediction/model_save_grb.pkl, platform=None, authentication=None, verbose=True)
2023-05-16 14:30:00,496:INFO:Initializing load_model()
2023-05-16 14:30:00,497:INFO:load_model(model_name=Learn Data/4. Machine Learning PyCaret/2. Health Insurance Cost Prediction/model_save_grb, platform=None, authentication=None, verbose=True)
2023-05-16 14:30:11,436:INFO:Initializing load_model()
2023-05-16 14:30:11,437:INFO:load_model(model_name=model_save_grb, platform=None, authentication=None, verbose=True)
2023-05-16 14:33:06,074:INFO:Initializing predict_model()
2023-05-16 14:33:06,074:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4C73AFD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model',
                 GradientBoostingRegressor(random_state=5777))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AE4D3B3310>)
2023-05-16 14:33:06,074:INFO:Checking exceptions
2023-05-16 14:33:06,074:INFO:Preloading libraries
2023-05-16 14:33:06,163:INFO:Set up data.
2023-05-16 14:33:06,165:INFO:Set up index.
2023-05-16 14:33:37,505:INFO:Initializing predict_model()
2023-05-16 14:33:37,505:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AE4C73AFD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model',
                 GradientBoostingRegressor(random_state=5777))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AE4EE47CA0>)
2023-05-16 14:33:37,506:INFO:Checking exceptions
2023-05-16 14:33:37,506:INFO:Preloading libraries
2023-05-16 14:33:37,509:INFO:Set up data.
2023-05-16 14:33:37,511:INFO:Set up index.
