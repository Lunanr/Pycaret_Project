2023-05-16 13:24:48,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:24:48,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:24:48,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:24:48,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:24:49,523:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-16 13:26:00,535:INFO:PyCaret ClassificationExperiment
2023-05-16 13:26:00,535:INFO:Logging name: clf-default-name
2023-05-16 13:26:00,535:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:26:00,535:INFO:version 3.0.1
2023-05-16 13:26:00,536:INFO:Initializing setup()
2023-05-16 13:26:00,536:INFO:self.USI: 6695
2023-05-16 13:26:00,536:INFO:self._variable_keys: {'fold_shuffle_param', 'X_test', 'logging_param', '_available_plots', 'idx', 'fold_generator', 'log_plots_param', 'memory', 'exp_name_log', 'fold_groups_param', 'X_train', 'is_multiclass', 'y_test', 'y', 'gpu_n_jobs_param', 'html_param', 'exp_id', 'X', 'fix_imbalance', 'seed', 'y_train', 'gpu_param', '_ml_usecase', 'data', 'USI', 'n_jobs_param', 'target_param', 'pipeline'}
2023-05-16 13:26:00,536:INFO:Checking environment
2023-05-16 13:26:00,536:INFO:python_version: 3.9.13
2023-05-16 13:26:00,536:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:26:00,536:INFO:machine: AMD64
2023-05-16 13:26:00,536:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:26:00,536:INFO:Memory: svmem(total=7968444416, available=1592414208, percent=80.0, used=6376030208, free=1592414208)
2023-05-16 13:26:00,536:INFO:Physical Core: 6
2023-05-16 13:26:00,536:INFO:Logical Core: 12
2023-05-16 13:26:00,536:INFO:Checking libraries
2023-05-16 13:26:00,536:INFO:System:
2023-05-16 13:26:00,536:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:26:00,536:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:26:00,537:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:26:00,537:INFO:PyCaret required dependencies:
2023-05-16 13:26:00,537:INFO:                 pip: 22.2.2
2023-05-16 13:26:00,537:INFO:          setuptools: 63.4.1
2023-05-16 13:26:00,537:INFO:             pycaret: 3.0.1
2023-05-16 13:26:00,537:INFO:             IPython: 7.31.1
2023-05-16 13:26:00,537:INFO:          ipywidgets: 7.6.5
2023-05-16 13:26:00,537:INFO:                tqdm: 4.64.1
2023-05-16 13:26:00,537:INFO:               numpy: 1.21.6
2023-05-16 13:26:00,537:INFO:              pandas: 1.4.4
2023-05-16 13:26:00,537:INFO:              jinja2: 2.11.3
2023-05-16 13:26:00,537:INFO:               scipy: 1.9.1
2023-05-16 13:26:00,537:INFO:              joblib: 1.2.0
2023-05-16 13:26:00,537:INFO:             sklearn: 1.0.2
2023-05-16 13:26:00,537:INFO:                pyod: 1.0.9
2023-05-16 13:26:00,537:INFO:            imblearn: 0.10.1
2023-05-16 13:26:00,537:INFO:   category_encoders: 2.6.1
2023-05-16 13:26:00,537:INFO:            lightgbm: 3.3.5
2023-05-16 13:26:00,537:INFO:               numba: 0.55.1
2023-05-16 13:26:00,537:INFO:            requests: 2.28.1
2023-05-16 13:26:00,537:INFO:          matplotlib: 3.5.2
2023-05-16 13:26:00,537:INFO:          scikitplot: 0.3.7
2023-05-16 13:26:00,537:INFO:         yellowbrick: 1.5
2023-05-16 13:26:00,537:INFO:              plotly: 5.9.0
2023-05-16 13:26:00,537:INFO:             kaleido: 0.2.1
2023-05-16 13:26:00,537:INFO:         statsmodels: 0.13.2
2023-05-16 13:26:00,537:INFO:              sktime: 0.17.0
2023-05-16 13:26:00,537:INFO:               tbats: 1.1.3
2023-05-16 13:26:00,537:INFO:            pmdarima: 2.0.3
2023-05-16 13:26:00,538:INFO:              psutil: 5.9.0
2023-05-16 13:26:00,538:INFO:PyCaret optional dependencies:
2023-05-16 13:26:00,555:INFO:                shap: Not installed
2023-05-16 13:26:00,555:INFO:           interpret: Not installed
2023-05-16 13:26:00,555:INFO:                umap: Not installed
2023-05-16 13:26:00,555:INFO:    pandas_profiling: Not installed
2023-05-16 13:26:00,556:INFO:  explainerdashboard: Not installed
2023-05-16 13:26:00,556:INFO:             autoviz: Not installed
2023-05-16 13:26:00,556:INFO:           fairlearn: Not installed
2023-05-16 13:26:00,556:INFO:             xgboost: Not installed
2023-05-16 13:26:00,556:INFO:            catboost: Not installed
2023-05-16 13:26:00,556:INFO:              kmodes: Not installed
2023-05-16 13:26:00,556:INFO:             mlxtend: Not installed
2023-05-16 13:26:00,556:INFO:       statsforecast: Not installed
2023-05-16 13:26:00,556:INFO:        tune_sklearn: Not installed
2023-05-16 13:26:00,556:INFO:                 ray: Not installed
2023-05-16 13:26:00,556:INFO:            hyperopt: Not installed
2023-05-16 13:26:00,556:INFO:              optuna: Not installed
2023-05-16 13:26:00,556:INFO:               skopt: Not installed
2023-05-16 13:26:00,556:INFO:              mlflow: Not installed
2023-05-16 13:26:00,556:INFO:              gradio: Not installed
2023-05-16 13:26:00,556:INFO:             fastapi: Not installed
2023-05-16 13:26:00,556:INFO:             uvicorn: Not installed
2023-05-16 13:26:00,556:INFO:              m2cgen: Not installed
2023-05-16 13:26:00,557:INFO:           evidently: Not installed
2023-05-16 13:26:00,557:INFO:               fugue: Not installed
2023-05-16 13:26:00,557:INFO:           streamlit: 1.20.0
2023-05-16 13:26:00,557:INFO:             prophet: Not installed
2023-05-16 13:26:00,557:INFO:None
2023-05-16 13:26:00,557:INFO:Set up data.
2023-05-16 13:26:00,571:INFO:Set up train/test split.
2023-05-16 13:26:00,586:INFO:Set up index.
2023-05-16 13:26:00,586:INFO:Set up folding strategy.
2023-05-16 13:26:00,586:INFO:Assigning column types.
2023-05-16 13:26:00,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:26:00,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:00,649:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:00,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:00,763:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:00,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,795:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:26:00,843:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:00,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,920:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:00,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:00,950:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:26:01,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,118:INFO:Preparing preprocessing pipeline...
2023-05-16 13:26:01,120:INFO:Set up simple imputation.
2023-05-16 13:26:01,122:INFO:Set up column name cleaning.
2023-05-16 13:26:01,159:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:26:01,167:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:26:01,167:INFO:Creating final display dataframe.
2023-05-16 13:26:01,263:INFO:Setup _display_container:                     Description             Value
0                    Session id              2224
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              6695
2023-05-16 13:26:01,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:01,431:INFO:setup() successfully completed in 0.9s...............
2023-05-16 13:26:44,367:INFO:PyCaret ClassificationExperiment
2023-05-16 13:26:44,368:INFO:Logging name: clf-default-name
2023-05-16 13:26:44,368:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:26:44,368:INFO:version 3.0.1
2023-05-16 13:26:44,368:INFO:Initializing setup()
2023-05-16 13:26:44,368:INFO:self.USI: 73f3
2023-05-16 13:26:44,368:INFO:self._variable_keys: {'fold_shuffle_param', 'X_test', 'logging_param', '_available_plots', 'idx', 'fold_generator', 'log_plots_param', 'memory', 'exp_name_log', 'fold_groups_param', 'X_train', 'is_multiclass', 'y_test', 'y', 'gpu_n_jobs_param', 'html_param', 'exp_id', 'X', 'fix_imbalance', 'seed', 'y_train', 'gpu_param', '_ml_usecase', 'data', 'USI', 'n_jobs_param', 'target_param', 'pipeline'}
2023-05-16 13:26:44,368:INFO:Checking environment
2023-05-16 13:26:44,368:INFO:python_version: 3.9.13
2023-05-16 13:26:44,368:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:26:44,368:INFO:machine: AMD64
2023-05-16 13:26:44,368:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:26:44,368:INFO:Memory: svmem(total=7968444416, available=1576599552, percent=80.2, used=6391844864, free=1576599552)
2023-05-16 13:26:44,368:INFO:Physical Core: 6
2023-05-16 13:26:44,368:INFO:Logical Core: 12
2023-05-16 13:26:44,368:INFO:Checking libraries
2023-05-16 13:26:44,368:INFO:System:
2023-05-16 13:26:44,369:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:26:44,369:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:26:44,369:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:26:44,369:INFO:PyCaret required dependencies:
2023-05-16 13:26:44,369:INFO:                 pip: 22.2.2
2023-05-16 13:26:44,369:INFO:          setuptools: 63.4.1
2023-05-16 13:26:44,369:INFO:             pycaret: 3.0.1
2023-05-16 13:26:44,369:INFO:             IPython: 7.31.1
2023-05-16 13:26:44,369:INFO:          ipywidgets: 7.6.5
2023-05-16 13:26:44,369:INFO:                tqdm: 4.64.1
2023-05-16 13:26:44,369:INFO:               numpy: 1.21.6
2023-05-16 13:26:44,369:INFO:              pandas: 1.4.4
2023-05-16 13:26:44,369:INFO:              jinja2: 2.11.3
2023-05-16 13:26:44,369:INFO:               scipy: 1.9.1
2023-05-16 13:26:44,369:INFO:              joblib: 1.2.0
2023-05-16 13:26:44,369:INFO:             sklearn: 1.0.2
2023-05-16 13:26:44,369:INFO:                pyod: 1.0.9
2023-05-16 13:26:44,369:INFO:            imblearn: 0.10.1
2023-05-16 13:26:44,369:INFO:   category_encoders: 2.6.1
2023-05-16 13:26:44,369:INFO:            lightgbm: 3.3.5
2023-05-16 13:26:44,369:INFO:               numba: 0.55.1
2023-05-16 13:26:44,369:INFO:            requests: 2.28.1
2023-05-16 13:26:44,369:INFO:          matplotlib: 3.5.2
2023-05-16 13:26:44,369:INFO:          scikitplot: 0.3.7
2023-05-16 13:26:44,369:INFO:         yellowbrick: 1.5
2023-05-16 13:26:44,369:INFO:              plotly: 5.9.0
2023-05-16 13:26:44,370:INFO:             kaleido: 0.2.1
2023-05-16 13:26:44,370:INFO:         statsmodels: 0.13.2
2023-05-16 13:26:44,370:INFO:              sktime: 0.17.0
2023-05-16 13:26:44,370:INFO:               tbats: 1.1.3
2023-05-16 13:26:44,370:INFO:            pmdarima: 2.0.3
2023-05-16 13:26:44,370:INFO:              psutil: 5.9.0
2023-05-16 13:26:44,370:INFO:PyCaret optional dependencies:
2023-05-16 13:26:44,370:INFO:                shap: Not installed
2023-05-16 13:26:44,370:INFO:           interpret: Not installed
2023-05-16 13:26:44,370:INFO:                umap: Not installed
2023-05-16 13:26:44,370:INFO:    pandas_profiling: Not installed
2023-05-16 13:26:44,370:INFO:  explainerdashboard: Not installed
2023-05-16 13:26:44,370:INFO:             autoviz: Not installed
2023-05-16 13:26:44,370:INFO:           fairlearn: Not installed
2023-05-16 13:26:44,370:INFO:             xgboost: Not installed
2023-05-16 13:26:44,370:INFO:            catboost: Not installed
2023-05-16 13:26:44,370:INFO:              kmodes: Not installed
2023-05-16 13:26:44,370:INFO:             mlxtend: Not installed
2023-05-16 13:26:44,370:INFO:       statsforecast: Not installed
2023-05-16 13:26:44,370:INFO:        tune_sklearn: Not installed
2023-05-16 13:26:44,370:INFO:                 ray: Not installed
2023-05-16 13:26:44,370:INFO:            hyperopt: Not installed
2023-05-16 13:26:44,370:INFO:              optuna: Not installed
2023-05-16 13:26:44,370:INFO:               skopt: Not installed
2023-05-16 13:26:44,370:INFO:              mlflow: Not installed
2023-05-16 13:26:44,370:INFO:              gradio: Not installed
2023-05-16 13:26:44,370:INFO:             fastapi: Not installed
2023-05-16 13:26:44,370:INFO:             uvicorn: Not installed
2023-05-16 13:26:44,370:INFO:              m2cgen: Not installed
2023-05-16 13:26:44,370:INFO:           evidently: Not installed
2023-05-16 13:26:44,371:INFO:               fugue: Not installed
2023-05-16 13:26:44,371:INFO:           streamlit: 1.20.0
2023-05-16 13:26:44,371:INFO:             prophet: Not installed
2023-05-16 13:26:44,371:INFO:None
2023-05-16 13:26:44,371:INFO:Set up data.
2023-05-16 13:26:44,375:INFO:Set up train/test split.
2023-05-16 13:26:44,378:INFO:Set up index.
2023-05-16 13:26:44,378:INFO:Set up folding strategy.
2023-05-16 13:26:44,378:INFO:Assigning column types.
2023-05-16 13:26:44,382:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:26:44,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:44,432:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:44,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:44,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:44,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,542:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:26:44,588:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:44,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,663:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:44,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,693:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:26:44,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:44,857:INFO:Preparing preprocessing pipeline...
2023-05-16 13:26:44,858:INFO:Set up simple imputation.
2023-05-16 13:26:44,859:INFO:Set up column name cleaning.
2023-05-16 13:26:44,877:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:26:44,882:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:26:44,882:INFO:Creating final display dataframe.
2023-05-16 13:26:44,954:INFO:Setup _display_container:                     Description             Value
0                    Session id              6914
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              73f3
2023-05-16 13:26:45,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:45,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:45,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:45,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:45,125:INFO:setup() successfully completed in 0.76s...............
2023-05-16 13:26:50,807:INFO:PyCaret ClassificationExperiment
2023-05-16 13:26:50,807:INFO:Logging name: clf-default-name
2023-05-16 13:26:50,807:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:26:50,807:INFO:version 3.0.1
2023-05-16 13:26:50,807:INFO:Initializing setup()
2023-05-16 13:26:50,807:INFO:self.USI: db42
2023-05-16 13:26:50,807:INFO:self._variable_keys: {'fold_shuffle_param', 'X_test', 'logging_param', '_available_plots', 'idx', 'fold_generator', 'log_plots_param', 'memory', 'exp_name_log', 'fold_groups_param', 'X_train', 'is_multiclass', 'y_test', 'y', 'gpu_n_jobs_param', 'html_param', 'exp_id', 'X', 'fix_imbalance', 'seed', 'y_train', 'gpu_param', '_ml_usecase', 'data', 'USI', 'n_jobs_param', 'target_param', 'pipeline'}
2023-05-16 13:26:50,807:INFO:Checking environment
2023-05-16 13:26:50,807:INFO:python_version: 3.9.13
2023-05-16 13:26:50,807:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:26:50,807:INFO:machine: AMD64
2023-05-16 13:26:50,807:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:26:50,807:INFO:Memory: svmem(total=7968444416, available=1574658048, percent=80.2, used=6393786368, free=1574658048)
2023-05-16 13:26:50,808:INFO:Physical Core: 6
2023-05-16 13:26:50,808:INFO:Logical Core: 12
2023-05-16 13:26:50,808:INFO:Checking libraries
2023-05-16 13:26:50,808:INFO:System:
2023-05-16 13:26:50,808:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:26:50,808:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:26:50,808:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:26:50,808:INFO:PyCaret required dependencies:
2023-05-16 13:26:50,808:INFO:                 pip: 22.2.2
2023-05-16 13:26:50,808:INFO:          setuptools: 63.4.1
2023-05-16 13:26:50,808:INFO:             pycaret: 3.0.1
2023-05-16 13:26:50,808:INFO:             IPython: 7.31.1
2023-05-16 13:26:50,808:INFO:          ipywidgets: 7.6.5
2023-05-16 13:26:50,808:INFO:                tqdm: 4.64.1
2023-05-16 13:26:50,808:INFO:               numpy: 1.21.6
2023-05-16 13:26:50,808:INFO:              pandas: 1.4.4
2023-05-16 13:26:50,808:INFO:              jinja2: 2.11.3
2023-05-16 13:26:50,808:INFO:               scipy: 1.9.1
2023-05-16 13:26:50,809:INFO:              joblib: 1.2.0
2023-05-16 13:26:50,809:INFO:             sklearn: 1.0.2
2023-05-16 13:26:50,809:INFO:                pyod: 1.0.9
2023-05-16 13:26:50,809:INFO:            imblearn: 0.10.1
2023-05-16 13:26:50,809:INFO:   category_encoders: 2.6.1
2023-05-16 13:26:50,809:INFO:            lightgbm: 3.3.5
2023-05-16 13:26:50,809:INFO:               numba: 0.55.1
2023-05-16 13:26:50,809:INFO:            requests: 2.28.1
2023-05-16 13:26:50,809:INFO:          matplotlib: 3.5.2
2023-05-16 13:26:50,809:INFO:          scikitplot: 0.3.7
2023-05-16 13:26:50,809:INFO:         yellowbrick: 1.5
2023-05-16 13:26:50,809:INFO:              plotly: 5.9.0
2023-05-16 13:26:50,809:INFO:             kaleido: 0.2.1
2023-05-16 13:26:50,809:INFO:         statsmodels: 0.13.2
2023-05-16 13:26:50,809:INFO:              sktime: 0.17.0
2023-05-16 13:26:50,809:INFO:               tbats: 1.1.3
2023-05-16 13:26:50,809:INFO:            pmdarima: 2.0.3
2023-05-16 13:26:50,809:INFO:              psutil: 5.9.0
2023-05-16 13:26:50,809:INFO:PyCaret optional dependencies:
2023-05-16 13:26:50,810:INFO:                shap: Not installed
2023-05-16 13:26:50,810:INFO:           interpret: Not installed
2023-05-16 13:26:50,810:INFO:                umap: Not installed
2023-05-16 13:26:50,810:INFO:    pandas_profiling: Not installed
2023-05-16 13:26:50,810:INFO:  explainerdashboard: Not installed
2023-05-16 13:26:50,810:INFO:             autoviz: Not installed
2023-05-16 13:26:50,810:INFO:           fairlearn: Not installed
2023-05-16 13:26:50,810:INFO:             xgboost: Not installed
2023-05-16 13:26:50,810:INFO:            catboost: Not installed
2023-05-16 13:26:50,810:INFO:              kmodes: Not installed
2023-05-16 13:26:50,810:INFO:             mlxtend: Not installed
2023-05-16 13:26:50,810:INFO:       statsforecast: Not installed
2023-05-16 13:26:50,810:INFO:        tune_sklearn: Not installed
2023-05-16 13:26:50,810:INFO:                 ray: Not installed
2023-05-16 13:26:50,810:INFO:            hyperopt: Not installed
2023-05-16 13:26:50,810:INFO:              optuna: Not installed
2023-05-16 13:26:50,810:INFO:               skopt: Not installed
2023-05-16 13:26:50,810:INFO:              mlflow: Not installed
2023-05-16 13:26:50,810:INFO:              gradio: Not installed
2023-05-16 13:26:50,810:INFO:             fastapi: Not installed
2023-05-16 13:26:50,810:INFO:             uvicorn: Not installed
2023-05-16 13:26:50,810:INFO:              m2cgen: Not installed
2023-05-16 13:26:50,810:INFO:           evidently: Not installed
2023-05-16 13:26:50,810:INFO:               fugue: Not installed
2023-05-16 13:26:50,810:INFO:           streamlit: 1.20.0
2023-05-16 13:26:50,810:INFO:             prophet: Not installed
2023-05-16 13:26:50,810:INFO:None
2023-05-16 13:26:50,810:INFO:Set up data.
2023-05-16 13:26:50,814:INFO:Set up train/test split.
2023-05-16 13:26:50,817:INFO:Set up index.
2023-05-16 13:26:50,818:INFO:Set up folding strategy.
2023-05-16 13:26:50,818:INFO:Assigning column types.
2023-05-16 13:26:50,822:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:26:50,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:50,872:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:50,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:50,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:50,962:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:50,963:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:51,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,003:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:26:51,066:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:51,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,165:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:51,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,194:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:26:51,271:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,348:INFO:Preparing preprocessing pipeline...
2023-05-16 13:26:51,349:INFO:Set up simple imputation.
2023-05-16 13:26:51,349:INFO:Set up column name cleaning.
2023-05-16 13:26:51,364:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:26:51,367:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:26:51,367:INFO:Creating final display dataframe.
2023-05-16 13:26:51,427:INFO:Setup _display_container:                     Description             Value
0                    Session id              2936
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              db42
2023-05-16 13:26:51,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:51,595:INFO:setup() successfully completed in 0.79s...............
2023-05-16 13:26:52,913:INFO:PyCaret ClassificationExperiment
2023-05-16 13:26:52,913:INFO:Logging name: clf-default-name
2023-05-16 13:26:52,913:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:26:52,913:INFO:version 3.0.1
2023-05-16 13:26:52,913:INFO:Initializing setup()
2023-05-16 13:26:52,913:INFO:self.USI: 65b0
2023-05-16 13:26:52,913:INFO:self._variable_keys: {'fold_shuffle_param', 'X_test', 'logging_param', '_available_plots', 'idx', 'fold_generator', 'log_plots_param', 'memory', 'exp_name_log', 'fold_groups_param', 'X_train', 'is_multiclass', 'y_test', 'y', 'gpu_n_jobs_param', 'html_param', 'exp_id', 'X', 'fix_imbalance', 'seed', 'y_train', 'gpu_param', '_ml_usecase', 'data', 'USI', 'n_jobs_param', 'target_param', 'pipeline'}
2023-05-16 13:26:52,913:INFO:Checking environment
2023-05-16 13:26:52,913:INFO:python_version: 3.9.13
2023-05-16 13:26:52,913:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:26:52,913:INFO:machine: AMD64
2023-05-16 13:26:52,913:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:26:52,914:INFO:Memory: svmem(total=7968444416, available=1578512384, percent=80.2, used=6389932032, free=1578512384)
2023-05-16 13:26:52,914:INFO:Physical Core: 6
2023-05-16 13:26:52,914:INFO:Logical Core: 12
2023-05-16 13:26:52,914:INFO:Checking libraries
2023-05-16 13:26:52,914:INFO:System:
2023-05-16 13:26:52,914:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:26:52,914:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:26:52,914:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:26:52,914:INFO:PyCaret required dependencies:
2023-05-16 13:26:52,914:INFO:                 pip: 22.2.2
2023-05-16 13:26:52,914:INFO:          setuptools: 63.4.1
2023-05-16 13:26:52,914:INFO:             pycaret: 3.0.1
2023-05-16 13:26:52,914:INFO:             IPython: 7.31.1
2023-05-16 13:26:52,914:INFO:          ipywidgets: 7.6.5
2023-05-16 13:26:52,914:INFO:                tqdm: 4.64.1
2023-05-16 13:26:52,914:INFO:               numpy: 1.21.6
2023-05-16 13:26:52,914:INFO:              pandas: 1.4.4
2023-05-16 13:26:52,914:INFO:              jinja2: 2.11.3
2023-05-16 13:26:52,914:INFO:               scipy: 1.9.1
2023-05-16 13:26:52,914:INFO:              joblib: 1.2.0
2023-05-16 13:26:52,914:INFO:             sklearn: 1.0.2
2023-05-16 13:26:52,914:INFO:                pyod: 1.0.9
2023-05-16 13:26:52,914:INFO:            imblearn: 0.10.1
2023-05-16 13:26:52,914:INFO:   category_encoders: 2.6.1
2023-05-16 13:26:52,915:INFO:            lightgbm: 3.3.5
2023-05-16 13:26:52,915:INFO:               numba: 0.55.1
2023-05-16 13:26:52,915:INFO:            requests: 2.28.1
2023-05-16 13:26:52,915:INFO:          matplotlib: 3.5.2
2023-05-16 13:26:52,915:INFO:          scikitplot: 0.3.7
2023-05-16 13:26:52,915:INFO:         yellowbrick: 1.5
2023-05-16 13:26:52,915:INFO:              plotly: 5.9.0
2023-05-16 13:26:52,915:INFO:             kaleido: 0.2.1
2023-05-16 13:26:52,915:INFO:         statsmodels: 0.13.2
2023-05-16 13:26:52,915:INFO:              sktime: 0.17.0
2023-05-16 13:26:52,915:INFO:               tbats: 1.1.3
2023-05-16 13:26:52,915:INFO:            pmdarima: 2.0.3
2023-05-16 13:26:52,915:INFO:              psutil: 5.9.0
2023-05-16 13:26:52,915:INFO:PyCaret optional dependencies:
2023-05-16 13:26:52,915:INFO:                shap: Not installed
2023-05-16 13:26:52,915:INFO:           interpret: Not installed
2023-05-16 13:26:52,915:INFO:                umap: Not installed
2023-05-16 13:26:52,915:INFO:    pandas_profiling: Not installed
2023-05-16 13:26:52,915:INFO:  explainerdashboard: Not installed
2023-05-16 13:26:52,915:INFO:             autoviz: Not installed
2023-05-16 13:26:52,915:INFO:           fairlearn: Not installed
2023-05-16 13:26:52,916:INFO:             xgboost: Not installed
2023-05-16 13:26:52,916:INFO:            catboost: Not installed
2023-05-16 13:26:52,916:INFO:              kmodes: Not installed
2023-05-16 13:26:52,916:INFO:             mlxtend: Not installed
2023-05-16 13:26:52,916:INFO:       statsforecast: Not installed
2023-05-16 13:26:52,916:INFO:        tune_sklearn: Not installed
2023-05-16 13:26:52,916:INFO:                 ray: Not installed
2023-05-16 13:26:52,916:INFO:            hyperopt: Not installed
2023-05-16 13:26:52,916:INFO:              optuna: Not installed
2023-05-16 13:26:52,916:INFO:               skopt: Not installed
2023-05-16 13:26:52,916:INFO:              mlflow: Not installed
2023-05-16 13:26:52,916:INFO:              gradio: Not installed
2023-05-16 13:26:52,916:INFO:             fastapi: Not installed
2023-05-16 13:26:52,916:INFO:             uvicorn: Not installed
2023-05-16 13:26:52,916:INFO:              m2cgen: Not installed
2023-05-16 13:26:52,916:INFO:           evidently: Not installed
2023-05-16 13:26:52,916:INFO:               fugue: Not installed
2023-05-16 13:26:52,916:INFO:           streamlit: 1.20.0
2023-05-16 13:26:52,916:INFO:             prophet: Not installed
2023-05-16 13:26:52,916:INFO:None
2023-05-16 13:26:52,916:INFO:Set up data.
2023-05-16 13:26:52,920:INFO:Set up train/test split.
2023-05-16 13:26:52,923:INFO:Set up index.
2023-05-16 13:26:52,924:INFO:Set up folding strategy.
2023-05-16 13:26:52,924:INFO:Assigning column types.
2023-05-16 13:26:52,928:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:26:52,976:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:52,977:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:53,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:53,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:53,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,090:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:26:53,154:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:53,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,231:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:53,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,260:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:26:53,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,421:INFO:Preparing preprocessing pipeline...
2023-05-16 13:26:53,422:INFO:Set up simple imputation.
2023-05-16 13:26:53,422:INFO:Set up column name cleaning.
2023-05-16 13:26:53,437:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:26:53,440:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:26:53,440:INFO:Creating final display dataframe.
2023-05-16 13:26:53,500:INFO:Setup _display_container:                     Description             Value
0                    Session id              4693
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              65b0
2023-05-16 13:26:53,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:53,662:INFO:setup() successfully completed in 0.75s...............
2023-05-16 13:26:54,710:INFO:PyCaret ClassificationExperiment
2023-05-16 13:26:54,710:INFO:Logging name: clf-default-name
2023-05-16 13:26:54,710:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:26:54,710:INFO:version 3.0.1
2023-05-16 13:26:54,710:INFO:Initializing setup()
2023-05-16 13:26:54,710:INFO:self.USI: 4d51
2023-05-16 13:26:54,710:INFO:self._variable_keys: {'fold_shuffle_param', 'X_test', 'logging_param', '_available_plots', 'idx', 'fold_generator', 'log_plots_param', 'memory', 'exp_name_log', 'fold_groups_param', 'X_train', 'is_multiclass', 'y_test', 'y', 'gpu_n_jobs_param', 'html_param', 'exp_id', 'X', 'fix_imbalance', 'seed', 'y_train', 'gpu_param', '_ml_usecase', 'data', 'USI', 'n_jobs_param', 'target_param', 'pipeline'}
2023-05-16 13:26:54,710:INFO:Checking environment
2023-05-16 13:26:54,710:INFO:python_version: 3.9.13
2023-05-16 13:26:54,710:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:26:54,710:INFO:machine: AMD64
2023-05-16 13:26:54,710:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:26:54,711:INFO:Memory: svmem(total=7968444416, available=1581740032, percent=80.1, used=6386704384, free=1581740032)
2023-05-16 13:26:54,711:INFO:Physical Core: 6
2023-05-16 13:26:54,711:INFO:Logical Core: 12
2023-05-16 13:26:54,711:INFO:Checking libraries
2023-05-16 13:26:54,711:INFO:System:
2023-05-16 13:26:54,711:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:26:54,711:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:26:54,711:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:26:54,711:INFO:PyCaret required dependencies:
2023-05-16 13:26:54,711:INFO:                 pip: 22.2.2
2023-05-16 13:26:54,711:INFO:          setuptools: 63.4.1
2023-05-16 13:26:54,711:INFO:             pycaret: 3.0.1
2023-05-16 13:26:54,711:INFO:             IPython: 7.31.1
2023-05-16 13:26:54,712:INFO:          ipywidgets: 7.6.5
2023-05-16 13:26:54,712:INFO:                tqdm: 4.64.1
2023-05-16 13:26:54,712:INFO:               numpy: 1.21.6
2023-05-16 13:26:54,712:INFO:              pandas: 1.4.4
2023-05-16 13:26:54,712:INFO:              jinja2: 2.11.3
2023-05-16 13:26:54,712:INFO:               scipy: 1.9.1
2023-05-16 13:26:54,712:INFO:              joblib: 1.2.0
2023-05-16 13:26:54,712:INFO:             sklearn: 1.0.2
2023-05-16 13:26:54,712:INFO:                pyod: 1.0.9
2023-05-16 13:26:54,712:INFO:            imblearn: 0.10.1
2023-05-16 13:26:54,712:INFO:   category_encoders: 2.6.1
2023-05-16 13:26:54,712:INFO:            lightgbm: 3.3.5
2023-05-16 13:26:54,712:INFO:               numba: 0.55.1
2023-05-16 13:26:54,712:INFO:            requests: 2.28.1
2023-05-16 13:26:54,712:INFO:          matplotlib: 3.5.2
2023-05-16 13:26:54,712:INFO:          scikitplot: 0.3.7
2023-05-16 13:26:54,712:INFO:         yellowbrick: 1.5
2023-05-16 13:26:54,712:INFO:              plotly: 5.9.0
2023-05-16 13:26:54,712:INFO:             kaleido: 0.2.1
2023-05-16 13:26:54,712:INFO:         statsmodels: 0.13.2
2023-05-16 13:26:54,713:INFO:              sktime: 0.17.0
2023-05-16 13:26:54,713:INFO:               tbats: 1.1.3
2023-05-16 13:26:54,713:INFO:            pmdarima: 2.0.3
2023-05-16 13:26:54,713:INFO:              psutil: 5.9.0
2023-05-16 13:26:54,713:INFO:PyCaret optional dependencies:
2023-05-16 13:26:54,713:INFO:                shap: Not installed
2023-05-16 13:26:54,713:INFO:           interpret: Not installed
2023-05-16 13:26:54,713:INFO:                umap: Not installed
2023-05-16 13:26:54,713:INFO:    pandas_profiling: Not installed
2023-05-16 13:26:54,713:INFO:  explainerdashboard: Not installed
2023-05-16 13:26:54,713:INFO:             autoviz: Not installed
2023-05-16 13:26:54,713:INFO:           fairlearn: Not installed
2023-05-16 13:26:54,713:INFO:             xgboost: Not installed
2023-05-16 13:26:54,713:INFO:            catboost: Not installed
2023-05-16 13:26:54,713:INFO:              kmodes: Not installed
2023-05-16 13:26:54,713:INFO:             mlxtend: Not installed
2023-05-16 13:26:54,714:INFO:       statsforecast: Not installed
2023-05-16 13:26:54,714:INFO:        tune_sklearn: Not installed
2023-05-16 13:26:54,714:INFO:                 ray: Not installed
2023-05-16 13:26:54,714:INFO:            hyperopt: Not installed
2023-05-16 13:26:54,714:INFO:              optuna: Not installed
2023-05-16 13:26:54,714:INFO:               skopt: Not installed
2023-05-16 13:26:54,714:INFO:              mlflow: Not installed
2023-05-16 13:26:54,714:INFO:              gradio: Not installed
2023-05-16 13:26:54,714:INFO:             fastapi: Not installed
2023-05-16 13:26:54,714:INFO:             uvicorn: Not installed
2023-05-16 13:26:54,714:INFO:              m2cgen: Not installed
2023-05-16 13:26:54,714:INFO:           evidently: Not installed
2023-05-16 13:26:54,714:INFO:               fugue: Not installed
2023-05-16 13:26:54,714:INFO:           streamlit: 1.20.0
2023-05-16 13:26:54,714:INFO:             prophet: Not installed
2023-05-16 13:26:54,714:INFO:None
2023-05-16 13:26:54,714:INFO:Set up data.
2023-05-16 13:26:54,720:INFO:Set up train/test split.
2023-05-16 13:26:54,725:INFO:Set up index.
2023-05-16 13:26:54,725:INFO:Set up folding strategy.
2023-05-16 13:26:54,725:INFO:Assigning column types.
2023-05-16 13:26:54,729:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:26:54,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:54,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:54,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:54,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:54,853:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:26:54,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:54,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:54,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:54,883:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:26:54,930:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:54,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:54,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,005:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:26:55,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,033:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:26:55,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,185:INFO:Preparing preprocessing pipeline...
2023-05-16 13:26:55,186:INFO:Set up simple imputation.
2023-05-16 13:26:55,186:INFO:Set up column name cleaning.
2023-05-16 13:26:55,201:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:26:55,205:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:26:55,205:INFO:Creating final display dataframe.
2023-05-16 13:26:55,265:INFO:Setup _display_container:                     Description             Value
0                    Session id              2518
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4d51
2023-05-16 13:26:55,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:26:55,426:INFO:setup() successfully completed in 0.72s...............
2023-05-16 13:27:23,061:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:27:23,061:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:27:23,061:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:27:23,061:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:27:23,853:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-16 13:27:23,991:INFO:PyCaret ClassificationExperiment
2023-05-16 13:27:23,991:INFO:Logging name: clf-default-name
2023-05-16 13:27:23,991:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:27:23,991:INFO:version 3.0.1
2023-05-16 13:27:23,991:INFO:Initializing setup()
2023-05-16 13:27:23,991:INFO:self.USI: 6a35
2023-05-16 13:27:23,991:INFO:self._variable_keys: {'fix_imbalance', 'fold_groups_param', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'is_multiclass', 'html_param', 'gpu_param', 'seed', 'exp_id', 'data', 'logging_param', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'target_param', 'memory', 'log_plots_param', 'USI', 'exp_name_log', 'y_test', 'X_train', 'y', 'y_train', 'fold_generator', 'pipeline', 'idx', 'X'}
2023-05-16 13:27:23,991:INFO:Checking environment
2023-05-16 13:27:23,991:INFO:python_version: 3.9.13
2023-05-16 13:27:23,991:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:27:23,991:INFO:machine: AMD64
2023-05-16 13:27:23,991:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:27:23,991:INFO:Memory: svmem(total=7968444416, available=1623887872, percent=79.6, used=6344556544, free=1623887872)
2023-05-16 13:27:23,991:INFO:Physical Core: 6
2023-05-16 13:27:23,991:INFO:Logical Core: 12
2023-05-16 13:27:23,991:INFO:Checking libraries
2023-05-16 13:27:23,991:INFO:System:
2023-05-16 13:27:23,991:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:27:23,991:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:27:23,991:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:27:23,991:INFO:PyCaret required dependencies:
2023-05-16 13:27:23,991:INFO:                 pip: 22.2.2
2023-05-16 13:27:23,991:INFO:          setuptools: 63.4.1
2023-05-16 13:27:23,991:INFO:             pycaret: 3.0.1
2023-05-16 13:27:23,991:INFO:             IPython: 7.31.1
2023-05-16 13:27:23,991:INFO:          ipywidgets: 7.6.5
2023-05-16 13:27:23,991:INFO:                tqdm: 4.64.1
2023-05-16 13:27:23,991:INFO:               numpy: 1.21.6
2023-05-16 13:27:23,991:INFO:              pandas: 1.4.4
2023-05-16 13:27:23,991:INFO:              jinja2: 2.11.3
2023-05-16 13:27:23,991:INFO:               scipy: 1.9.1
2023-05-16 13:27:23,991:INFO:              joblib: 1.2.0
2023-05-16 13:27:23,991:INFO:             sklearn: 1.0.2
2023-05-16 13:27:23,991:INFO:                pyod: 1.0.9
2023-05-16 13:27:23,991:INFO:            imblearn: 0.10.1
2023-05-16 13:27:23,991:INFO:   category_encoders: 2.6.1
2023-05-16 13:27:23,991:INFO:            lightgbm: 3.3.5
2023-05-16 13:27:23,991:INFO:               numba: 0.55.1
2023-05-16 13:27:23,991:INFO:            requests: 2.28.1
2023-05-16 13:27:23,991:INFO:          matplotlib: 3.5.2
2023-05-16 13:27:23,991:INFO:          scikitplot: 0.3.7
2023-05-16 13:27:23,991:INFO:         yellowbrick: 1.5
2023-05-16 13:27:23,991:INFO:              plotly: 5.9.0
2023-05-16 13:27:23,991:INFO:             kaleido: 0.2.1
2023-05-16 13:27:23,991:INFO:         statsmodels: 0.13.2
2023-05-16 13:27:23,991:INFO:              sktime: 0.17.0
2023-05-16 13:27:23,991:INFO:               tbats: 1.1.3
2023-05-16 13:27:23,991:INFO:            pmdarima: 2.0.3
2023-05-16 13:27:23,991:INFO:              psutil: 5.9.0
2023-05-16 13:27:23,991:INFO:PyCaret optional dependencies:
2023-05-16 13:27:24,007:INFO:                shap: Not installed
2023-05-16 13:27:24,007:INFO:           interpret: Not installed
2023-05-16 13:27:24,007:INFO:                umap: Not installed
2023-05-16 13:27:24,007:INFO:    pandas_profiling: Not installed
2023-05-16 13:27:24,007:INFO:  explainerdashboard: Not installed
2023-05-16 13:27:24,007:INFO:             autoviz: Not installed
2023-05-16 13:27:24,007:INFO:           fairlearn: Not installed
2023-05-16 13:27:24,007:INFO:             xgboost: Not installed
2023-05-16 13:27:24,007:INFO:            catboost: Not installed
2023-05-16 13:27:24,007:INFO:              kmodes: Not installed
2023-05-16 13:27:24,007:INFO:             mlxtend: Not installed
2023-05-16 13:27:24,007:INFO:       statsforecast: Not installed
2023-05-16 13:27:24,007:INFO:        tune_sklearn: Not installed
2023-05-16 13:27:24,007:INFO:                 ray: Not installed
2023-05-16 13:27:24,007:INFO:            hyperopt: Not installed
2023-05-16 13:27:24,007:INFO:              optuna: Not installed
2023-05-16 13:27:24,007:INFO:               skopt: Not installed
2023-05-16 13:27:24,007:INFO:              mlflow: Not installed
2023-05-16 13:27:24,007:INFO:              gradio: Not installed
2023-05-16 13:27:24,007:INFO:             fastapi: Not installed
2023-05-16 13:27:24,007:INFO:             uvicorn: Not installed
2023-05-16 13:27:24,007:INFO:              m2cgen: Not installed
2023-05-16 13:27:24,007:INFO:           evidently: Not installed
2023-05-16 13:27:24,007:INFO:               fugue: Not installed
2023-05-16 13:27:24,007:INFO:           streamlit: 1.20.0
2023-05-16 13:27:24,007:INFO:             prophet: Not installed
2023-05-16 13:27:24,007:INFO:None
2023-05-16 13:27:24,007:INFO:Set up data.
2023-05-16 13:27:24,023:INFO:Set up train/test split.
2023-05-16 13:27:24,023:INFO:Set up index.
2023-05-16 13:27:24,023:INFO:Set up folding strategy.
2023-05-16 13:27:24,023:INFO:Assigning column types.
2023-05-16 13:27:24,023:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:27:24,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:27:24,069:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:27:24,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,163:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:27:24,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:27:24,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,195:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:27:24,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:27:24,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:27:24,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,353:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:27:24,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,510:INFO:Preparing preprocessing pipeline...
2023-05-16 13:27:24,510:INFO:Set up simple imputation.
2023-05-16 13:27:24,510:INFO:Set up column name cleaning.
2023-05-16 13:27:24,541:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:27:24,557:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:27:24,557:INFO:Creating final display dataframe.
2023-05-16 13:27:24,619:INFO:Setup _display_container:                     Description             Value
0                    Session id              4948
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              6a35
2023-05-16 13:27:24,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:27:24,794:INFO:setup() successfully completed in 0.8s...............
2023-05-16 13:30:53,386:INFO:Initializing compare_models()
2023-05-16 13:30:53,387:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:30:53,387:INFO:Checking exceptions
2023-05-16 13:30:53,393:INFO:Preparing display monitor
2023-05-16 13:30:53,434:INFO:Initializing Logistic Regression
2023-05-16 13:30:53,434:INFO:Total runtime is 0.0 minutes
2023-05-16 13:30:53,439:INFO:SubProcess create_model() called ==================================
2023-05-16 13:30:53,439:INFO:Initializing create_model()
2023-05-16 13:30:53,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:30:53,439:INFO:Checking exceptions
2023-05-16 13:30:53,439:INFO:Importing libraries
2023-05-16 13:30:53,439:INFO:Copying training dataset
2023-05-16 13:30:53,445:INFO:Defining folds
2023-05-16 13:30:53,445:INFO:Declaring metric variables
2023-05-16 13:30:53,450:INFO:Importing untrained model
2023-05-16 13:30:53,454:INFO:Logistic Regression Imported successfully
2023-05-16 13:30:53,465:INFO:Starting cross validation
2023-05-16 13:30:53,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:07,550:INFO:Calculating mean and std
2023-05-16 13:31:07,554:INFO:Creating metrics dataframe
2023-05-16 13:31:07,567:INFO:Uploading results into container
2023-05-16 13:31:07,570:INFO:Uploading model into container now
2023-05-16 13:31:07,574:INFO:_master_model_container: 1
2023-05-16 13:31:07,574:INFO:_display_container: 2
2023-05-16 13:31:07,576:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4948, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:31:07,576:INFO:create_model() successfully completed......................................
2023-05-16 13:31:07,760:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:07,760:INFO:Creating metrics dataframe
2023-05-16 13:31:07,770:INFO:Initializing K Neighbors Classifier
2023-05-16 13:31:07,770:INFO:Total runtime is 0.23892035484313964 minutes
2023-05-16 13:31:07,774:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:07,774:INFO:Initializing create_model()
2023-05-16 13:31:07,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:07,775:INFO:Checking exceptions
2023-05-16 13:31:07,775:INFO:Importing libraries
2023-05-16 13:31:07,775:INFO:Copying training dataset
2023-05-16 13:31:07,779:INFO:Defining folds
2023-05-16 13:31:07,780:INFO:Declaring metric variables
2023-05-16 13:31:07,786:INFO:Importing untrained model
2023-05-16 13:31:07,791:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:31:07,802:INFO:Starting cross validation
2023-05-16 13:31:07,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:07,991:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:08,002:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:08,022:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:08,053:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:08,056:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:08,058:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:08,088:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:12,402:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:12,427:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:31:12,466:INFO:Calculating mean and std
2023-05-16 13:31:12,468:INFO:Creating metrics dataframe
2023-05-16 13:31:12,478:INFO:Uploading results into container
2023-05-16 13:31:12,479:INFO:Uploading model into container now
2023-05-16 13:31:12,481:INFO:_master_model_container: 2
2023-05-16 13:31:12,481:INFO:_display_container: 2
2023-05-16 13:31:12,482:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:31:12,482:INFO:create_model() successfully completed......................................
2023-05-16 13:31:12,662:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:12,662:INFO:Creating metrics dataframe
2023-05-16 13:31:12,672:INFO:Initializing Naive Bayes
2023-05-16 13:31:12,672:INFO:Total runtime is 0.3206252694129944 minutes
2023-05-16 13:31:12,677:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:12,677:INFO:Initializing create_model()
2023-05-16 13:31:12,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:12,678:INFO:Checking exceptions
2023-05-16 13:31:12,678:INFO:Importing libraries
2023-05-16 13:31:12,678:INFO:Copying training dataset
2023-05-16 13:31:12,683:INFO:Defining folds
2023-05-16 13:31:12,684:INFO:Declaring metric variables
2023-05-16 13:31:12,689:INFO:Importing untrained model
2023-05-16 13:31:12,696:INFO:Naive Bayes Imported successfully
2023-05-16 13:31:12,707:INFO:Starting cross validation
2023-05-16 13:31:12,708:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:12,889:INFO:Calculating mean and std
2023-05-16 13:31:12,890:INFO:Creating metrics dataframe
2023-05-16 13:31:12,897:INFO:Uploading results into container
2023-05-16 13:31:12,898:INFO:Uploading model into container now
2023-05-16 13:31:12,898:INFO:_master_model_container: 3
2023-05-16 13:31:12,898:INFO:_display_container: 2
2023-05-16 13:31:12,898:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:31:12,898:INFO:create_model() successfully completed......................................
2023-05-16 13:31:12,988:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:12,989:INFO:Creating metrics dataframe
2023-05-16 13:31:12,997:INFO:Initializing Decision Tree Classifier
2023-05-16 13:31:12,997:INFO:Total runtime is 0.3260471900304159 minutes
2023-05-16 13:31:13,000:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:13,001:INFO:Initializing create_model()
2023-05-16 13:31:13,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:13,002:INFO:Checking exceptions
2023-05-16 13:31:13,002:INFO:Importing libraries
2023-05-16 13:31:13,002:INFO:Copying training dataset
2023-05-16 13:31:13,006:INFO:Defining folds
2023-05-16 13:31:13,006:INFO:Declaring metric variables
2023-05-16 13:31:13,010:INFO:Importing untrained model
2023-05-16 13:31:13,014:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:31:13,022:INFO:Starting cross validation
2023-05-16 13:31:13,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:13,198:INFO:Calculating mean and std
2023-05-16 13:31:13,200:INFO:Creating metrics dataframe
2023-05-16 13:31:13,208:INFO:Uploading results into container
2023-05-16 13:31:13,208:INFO:Uploading model into container now
2023-05-16 13:31:13,209:INFO:_master_model_container: 4
2023-05-16 13:31:13,209:INFO:_display_container: 2
2023-05-16 13:31:13,209:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4948, splitter='best')
2023-05-16 13:31:13,209:INFO:create_model() successfully completed......................................
2023-05-16 13:31:13,300:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:13,300:INFO:Creating metrics dataframe
2023-05-16 13:31:13,308:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:31:13,309:INFO:Total runtime is 0.33124354283014934 minutes
2023-05-16 13:31:13,313:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:13,313:INFO:Initializing create_model()
2023-05-16 13:31:13,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:13,313:INFO:Checking exceptions
2023-05-16 13:31:13,313:INFO:Importing libraries
2023-05-16 13:31:13,313:INFO:Copying training dataset
2023-05-16 13:31:13,317:INFO:Defining folds
2023-05-16 13:31:13,318:INFO:Declaring metric variables
2023-05-16 13:31:13,321:INFO:Importing untrained model
2023-05-16 13:31:13,325:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:31:13,332:INFO:Starting cross validation
2023-05-16 13:31:13,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:13,422:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,423:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,438:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,450:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,452:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,464:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,471:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,475:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,481:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,492:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:31:13,498:INFO:Calculating mean and std
2023-05-16 13:31:13,499:INFO:Creating metrics dataframe
2023-05-16 13:31:13,507:INFO:Uploading results into container
2023-05-16 13:31:13,509:INFO:Uploading model into container now
2023-05-16 13:31:13,509:INFO:_master_model_container: 5
2023-05-16 13:31:13,509:INFO:_display_container: 2
2023-05-16 13:31:13,510:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4948, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:31:13,510:INFO:create_model() successfully completed......................................
2023-05-16 13:31:13,598:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:13,598:INFO:Creating metrics dataframe
2023-05-16 13:31:13,606:INFO:Initializing Ridge Classifier
2023-05-16 13:31:13,606:INFO:Total runtime is 0.33620012601216637 minutes
2023-05-16 13:31:13,609:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:13,609:INFO:Initializing create_model()
2023-05-16 13:31:13,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:13,609:INFO:Checking exceptions
2023-05-16 13:31:13,611:INFO:Importing libraries
2023-05-16 13:31:13,611:INFO:Copying training dataset
2023-05-16 13:31:13,615:INFO:Defining folds
2023-05-16 13:31:13,615:INFO:Declaring metric variables
2023-05-16 13:31:13,618:INFO:Importing untrained model
2023-05-16 13:31:13,623:INFO:Ridge Classifier Imported successfully
2023-05-16 13:31:13,630:INFO:Starting cross validation
2023-05-16 13:31:13,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:13,738:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,738:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,740:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,742:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,756:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,759:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,764:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,773:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,773:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:31:13,779:INFO:Calculating mean and std
2023-05-16 13:31:13,782:INFO:Creating metrics dataframe
2023-05-16 13:31:13,789:INFO:Uploading results into container
2023-05-16 13:31:13,789:INFO:Uploading model into container now
2023-05-16 13:31:13,790:INFO:_master_model_container: 6
2023-05-16 13:31:13,790:INFO:_display_container: 2
2023-05-16 13:31:13,790:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4948, solver='auto', tol=0.001)
2023-05-16 13:31:13,790:INFO:create_model() successfully completed......................................
2023-05-16 13:31:13,878:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:13,878:INFO:Creating metrics dataframe
2023-05-16 13:31:13,887:INFO:Initializing Random Forest Classifier
2023-05-16 13:31:13,887:INFO:Total runtime is 0.3408788641293844 minutes
2023-05-16 13:31:13,890:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:13,891:INFO:Initializing create_model()
2023-05-16 13:31:13,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:13,891:INFO:Checking exceptions
2023-05-16 13:31:13,891:INFO:Importing libraries
2023-05-16 13:31:13,892:INFO:Copying training dataset
2023-05-16 13:31:13,895:INFO:Defining folds
2023-05-16 13:31:13,895:INFO:Declaring metric variables
2023-05-16 13:31:13,899:INFO:Importing untrained model
2023-05-16 13:31:13,904:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:31:13,912:INFO:Starting cross validation
2023-05-16 13:31:13,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:14,886:INFO:Calculating mean and std
2023-05-16 13:31:14,888:INFO:Creating metrics dataframe
2023-05-16 13:31:14,902:INFO:Uploading results into container
2023-05-16 13:31:14,903:INFO:Uploading model into container now
2023-05-16 13:31:14,903:INFO:_master_model_container: 7
2023-05-16 13:31:14,903:INFO:_display_container: 2
2023-05-16 13:31:14,904:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4948, verbose=0, warm_start=False)
2023-05-16 13:31:14,904:INFO:create_model() successfully completed......................................
2023-05-16 13:31:15,001:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:15,001:INFO:Creating metrics dataframe
2023-05-16 13:31:15,010:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:31:15,010:INFO:Total runtime is 0.35959825118382777 minutes
2023-05-16 13:31:15,014:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:15,014:INFO:Initializing create_model()
2023-05-16 13:31:15,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:15,015:INFO:Checking exceptions
2023-05-16 13:31:15,015:INFO:Importing libraries
2023-05-16 13:31:15,015:INFO:Copying training dataset
2023-05-16 13:31:15,019:INFO:Defining folds
2023-05-16 13:31:15,019:INFO:Declaring metric variables
2023-05-16 13:31:15,024:INFO:Importing untrained model
2023-05-16 13:31:15,028:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:31:15,037:INFO:Starting cross validation
2023-05-16 13:31:15,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:15,242:INFO:Calculating mean and std
2023-05-16 13:31:15,243:INFO:Creating metrics dataframe
2023-05-16 13:31:15,258:INFO:Uploading results into container
2023-05-16 13:31:15,259:INFO:Uploading model into container now
2023-05-16 13:31:15,259:INFO:_master_model_container: 8
2023-05-16 13:31:15,259:INFO:_display_container: 2
2023-05-16 13:31:15,259:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:31:15,259:INFO:create_model() successfully completed......................................
2023-05-16 13:31:15,375:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:15,375:INFO:Creating metrics dataframe
2023-05-16 13:31:15,388:INFO:Initializing Ada Boost Classifier
2023-05-16 13:31:15,388:INFO:Total runtime is 0.36589898665746057 minutes
2023-05-16 13:31:15,392:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:15,392:INFO:Initializing create_model()
2023-05-16 13:31:15,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:15,393:INFO:Checking exceptions
2023-05-16 13:31:15,393:INFO:Importing libraries
2023-05-16 13:31:15,393:INFO:Copying training dataset
2023-05-16 13:31:15,399:INFO:Defining folds
2023-05-16 13:31:15,399:INFO:Declaring metric variables
2023-05-16 13:31:15,404:INFO:Importing untrained model
2023-05-16 13:31:15,409:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:31:15,419:INFO:Starting cross validation
2023-05-16 13:31:15,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:15,843:INFO:Calculating mean and std
2023-05-16 13:31:15,846:INFO:Creating metrics dataframe
2023-05-16 13:31:15,865:INFO:Uploading results into container
2023-05-16 13:31:15,866:INFO:Uploading model into container now
2023-05-16 13:31:15,866:INFO:_master_model_container: 9
2023-05-16 13:31:15,866:INFO:_display_container: 2
2023-05-16 13:31:15,866:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4948)
2023-05-16 13:31:15,866:INFO:create_model() successfully completed......................................
2023-05-16 13:31:15,953:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:15,954:INFO:Creating metrics dataframe
2023-05-16 13:31:15,964:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:31:15,964:INFO:Total runtime is 0.37548986673355106 minutes
2023-05-16 13:31:15,967:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:15,967:INFO:Initializing create_model()
2023-05-16 13:31:15,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:15,967:INFO:Checking exceptions
2023-05-16 13:31:15,968:INFO:Importing libraries
2023-05-16 13:31:15,968:INFO:Copying training dataset
2023-05-16 13:31:15,972:INFO:Defining folds
2023-05-16 13:31:15,972:INFO:Declaring metric variables
2023-05-16 13:31:15,976:INFO:Importing untrained model
2023-05-16 13:31:15,979:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:31:15,987:INFO:Starting cross validation
2023-05-16 13:31:15,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:16,602:INFO:Calculating mean and std
2023-05-16 13:31:16,604:INFO:Creating metrics dataframe
2023-05-16 13:31:16,629:INFO:Uploading results into container
2023-05-16 13:31:16,631:INFO:Uploading model into container now
2023-05-16 13:31:16,632:INFO:_master_model_container: 10
2023-05-16 13:31:16,632:INFO:_display_container: 2
2023-05-16 13:31:16,633:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4948, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:31:16,633:INFO:create_model() successfully completed......................................
2023-05-16 13:31:16,732:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:16,732:INFO:Creating metrics dataframe
2023-05-16 13:31:16,742:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:31:16,742:INFO:Total runtime is 0.38846305608749393 minutes
2023-05-16 13:31:16,745:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:16,745:INFO:Initializing create_model()
2023-05-16 13:31:16,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:16,746:INFO:Checking exceptions
2023-05-16 13:31:16,746:INFO:Importing libraries
2023-05-16 13:31:16,746:INFO:Copying training dataset
2023-05-16 13:31:16,752:INFO:Defining folds
2023-05-16 13:31:16,752:INFO:Declaring metric variables
2023-05-16 13:31:16,756:INFO:Importing untrained model
2023-05-16 13:31:16,760:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:31:16,767:INFO:Starting cross validation
2023-05-16 13:31:16,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:17,073:INFO:Calculating mean and std
2023-05-16 13:31:17,074:INFO:Creating metrics dataframe
2023-05-16 13:31:17,100:INFO:Uploading results into container
2023-05-16 13:31:17,101:INFO:Uploading model into container now
2023-05-16 13:31:17,101:INFO:_master_model_container: 11
2023-05-16 13:31:17,101:INFO:_display_container: 2
2023-05-16 13:31:17,101:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:31:17,101:INFO:create_model() successfully completed......................................
2023-05-16 13:31:17,204:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:17,204:INFO:Creating metrics dataframe
2023-05-16 13:31:17,216:INFO:Initializing Extra Trees Classifier
2023-05-16 13:31:17,216:INFO:Total runtime is 0.3963587522506714 minutes
2023-05-16 13:31:17,220:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:17,220:INFO:Initializing create_model()
2023-05-16 13:31:17,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:17,220:INFO:Checking exceptions
2023-05-16 13:31:17,220:INFO:Importing libraries
2023-05-16 13:31:17,220:INFO:Copying training dataset
2023-05-16 13:31:17,225:INFO:Defining folds
2023-05-16 13:31:17,225:INFO:Declaring metric variables
2023-05-16 13:31:17,229:INFO:Importing untrained model
2023-05-16 13:31:17,235:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:31:17,244:INFO:Starting cross validation
2023-05-16 13:31:17,245:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:18,336:INFO:Calculating mean and std
2023-05-16 13:31:18,338:INFO:Creating metrics dataframe
2023-05-16 13:31:18,372:INFO:Uploading results into container
2023-05-16 13:31:18,373:INFO:Uploading model into container now
2023-05-16 13:31:18,374:INFO:_master_model_container: 12
2023-05-16 13:31:18,374:INFO:_display_container: 2
2023-05-16 13:31:18,374:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4948, verbose=0, warm_start=False)
2023-05-16 13:31:18,374:INFO:create_model() successfully completed......................................
2023-05-16 13:31:18,480:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:18,480:INFO:Creating metrics dataframe
2023-05-16 13:31:18,494:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:31:18,494:INFO:Total runtime is 0.4176663955052694 minutes
2023-05-16 13:31:18,500:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:18,502:INFO:Initializing create_model()
2023-05-16 13:31:18,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:18,502:INFO:Checking exceptions
2023-05-16 13:31:18,503:INFO:Importing libraries
2023-05-16 13:31:18,503:INFO:Copying training dataset
2023-05-16 13:31:18,511:INFO:Defining folds
2023-05-16 13:31:18,511:INFO:Declaring metric variables
2023-05-16 13:31:18,515:INFO:Importing untrained model
2023-05-16 13:31:18,522:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:31:18,530:INFO:Starting cross validation
2023-05-16 13:31:18,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:20,782:INFO:Calculating mean and std
2023-05-16 13:31:20,783:INFO:Creating metrics dataframe
2023-05-16 13:31:20,818:INFO:Uploading results into container
2023-05-16 13:31:20,819:INFO:Uploading model into container now
2023-05-16 13:31:20,819:INFO:_master_model_container: 13
2023-05-16 13:31:20,819:INFO:_display_container: 2
2023-05-16 13:31:20,819:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4948, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:31:20,820:INFO:create_model() successfully completed......................................
2023-05-16 13:31:20,906:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:20,906:INFO:Creating metrics dataframe
2023-05-16 13:31:20,916:INFO:Initializing Dummy Classifier
2023-05-16 13:31:20,916:INFO:Total runtime is 0.4580308636029562 minutes
2023-05-16 13:31:20,919:INFO:SubProcess create_model() called ==================================
2023-05-16 13:31:20,920:INFO:Initializing create_model()
2023-05-16 13:31:20,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514E5F4D00>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:20,920:INFO:Checking exceptions
2023-05-16 13:31:20,920:INFO:Importing libraries
2023-05-16 13:31:20,920:INFO:Copying training dataset
2023-05-16 13:31:20,925:INFO:Defining folds
2023-05-16 13:31:20,926:INFO:Declaring metric variables
2023-05-16 13:31:20,930:INFO:Importing untrained model
2023-05-16 13:31:20,934:INFO:Dummy Classifier Imported successfully
2023-05-16 13:31:20,943:INFO:Starting cross validation
2023-05-16 13:31:20,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:31:21,071:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,076:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,094:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,104:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,109:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,122:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,123:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,135:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,143:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,152:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:31:21,246:INFO:Calculating mean and std
2023-05-16 13:31:21,248:INFO:Creating metrics dataframe
2023-05-16 13:31:21,283:INFO:Uploading results into container
2023-05-16 13:31:21,284:INFO:Uploading model into container now
2023-05-16 13:31:21,284:INFO:_master_model_container: 14
2023-05-16 13:31:21,284:INFO:_display_container: 2
2023-05-16 13:31:21,284:INFO:DummyClassifier(constant=None, random_state=4948, strategy='prior')
2023-05-16 13:31:21,284:INFO:create_model() successfully completed......................................
2023-05-16 13:31:21,377:INFO:SubProcess create_model() end ==================================
2023-05-16 13:31:21,377:INFO:Creating metrics dataframe
2023-05-16 13:31:21,401:INFO:Initializing create_model()
2023-05-16 13:31:21,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002516A1F37F0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4948, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:31:21,401:INFO:Checking exceptions
2023-05-16 13:31:21,403:INFO:Importing libraries
2023-05-16 13:31:21,403:INFO:Copying training dataset
2023-05-16 13:31:21,406:INFO:Defining folds
2023-05-16 13:31:21,406:INFO:Declaring metric variables
2023-05-16 13:31:21,407:INFO:Importing untrained model
2023-05-16 13:31:21,407:INFO:Declaring custom model
2023-05-16 13:31:21,407:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:31:21,408:INFO:Cross validation set to False
2023-05-16 13:31:21,408:INFO:Fitting Model
2023-05-16 13:31:21,684:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4948, verbose=0, warm_start=False)
2023-05-16 13:31:21,685:INFO:create_model() successfully completed......................................
2023-05-16 13:31:21,815:INFO:_master_model_container: 14
2023-05-16 13:31:21,816:INFO:_display_container: 2
2023-05-16 13:31:21,816:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4948, verbose=0, warm_start=False)
2023-05-16 13:31:21,816:INFO:compare_models() successfully completed......................................
2023-05-16 13:35:33,589:INFO:PyCaret ClassificationExperiment
2023-05-16 13:35:33,589:INFO:Logging name: clf-default-name
2023-05-16 13:35:33,589:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:35:33,591:INFO:version 3.0.1
2023-05-16 13:35:33,591:INFO:Initializing setup()
2023-05-16 13:35:33,591:INFO:self.USI: 348d
2023-05-16 13:35:33,591:INFO:self._variable_keys: {'fix_imbalance', 'fold_groups_param', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'is_multiclass', 'html_param', 'gpu_param', 'seed', 'exp_id', 'data', 'logging_param', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'target_param', 'memory', 'log_plots_param', 'USI', 'exp_name_log', 'y_test', 'X_train', 'y', 'y_train', 'fold_generator', 'pipeline', 'idx', 'X'}
2023-05-16 13:35:33,591:INFO:Checking environment
2023-05-16 13:35:33,591:INFO:python_version: 3.9.13
2023-05-16 13:35:33,591:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:35:33,591:INFO:machine: AMD64
2023-05-16 13:35:33,591:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:35:33,591:INFO:Memory: svmem(total=7968444416, available=427634688, percent=94.6, used=7540809728, free=427634688)
2023-05-16 13:35:33,591:INFO:Physical Core: 6
2023-05-16 13:35:33,591:INFO:Logical Core: 12
2023-05-16 13:35:33,591:INFO:Checking libraries
2023-05-16 13:35:33,591:INFO:System:
2023-05-16 13:35:33,591:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:35:33,591:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:35:33,591:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:35:33,592:INFO:PyCaret required dependencies:
2023-05-16 13:35:33,592:INFO:                 pip: 22.2.2
2023-05-16 13:35:33,592:INFO:          setuptools: 63.4.1
2023-05-16 13:35:33,592:INFO:             pycaret: 3.0.1
2023-05-16 13:35:33,592:INFO:             IPython: 7.31.1
2023-05-16 13:35:33,592:INFO:          ipywidgets: 7.6.5
2023-05-16 13:35:33,592:INFO:                tqdm: 4.64.1
2023-05-16 13:35:33,592:INFO:               numpy: 1.21.6
2023-05-16 13:35:33,592:INFO:              pandas: 1.4.4
2023-05-16 13:35:33,592:INFO:              jinja2: 2.11.3
2023-05-16 13:35:33,592:INFO:               scipy: 1.9.1
2023-05-16 13:35:33,592:INFO:              joblib: 1.2.0
2023-05-16 13:35:33,592:INFO:             sklearn: 1.0.2
2023-05-16 13:35:33,592:INFO:                pyod: 1.0.9
2023-05-16 13:35:33,592:INFO:            imblearn: 0.10.1
2023-05-16 13:35:33,592:INFO:   category_encoders: 2.6.1
2023-05-16 13:35:33,592:INFO:            lightgbm: 3.3.5
2023-05-16 13:35:33,592:INFO:               numba: 0.55.1
2023-05-16 13:35:33,592:INFO:            requests: 2.28.1
2023-05-16 13:35:33,592:INFO:          matplotlib: 3.5.2
2023-05-16 13:35:33,592:INFO:          scikitplot: 0.3.7
2023-05-16 13:35:33,592:INFO:         yellowbrick: 1.5
2023-05-16 13:35:33,593:INFO:              plotly: 5.9.0
2023-05-16 13:35:33,593:INFO:             kaleido: 0.2.1
2023-05-16 13:35:33,593:INFO:         statsmodels: 0.13.2
2023-05-16 13:35:33,593:INFO:              sktime: 0.17.0
2023-05-16 13:35:33,593:INFO:               tbats: 1.1.3
2023-05-16 13:35:33,593:INFO:            pmdarima: 2.0.3
2023-05-16 13:35:33,593:INFO:              psutil: 5.9.0
2023-05-16 13:35:33,593:INFO:PyCaret optional dependencies:
2023-05-16 13:35:33,593:INFO:                shap: Not installed
2023-05-16 13:35:33,593:INFO:           interpret: Not installed
2023-05-16 13:35:33,593:INFO:                umap: Not installed
2023-05-16 13:35:33,593:INFO:    pandas_profiling: Not installed
2023-05-16 13:35:33,593:INFO:  explainerdashboard: Not installed
2023-05-16 13:35:33,593:INFO:             autoviz: Not installed
2023-05-16 13:35:33,593:INFO:           fairlearn: Not installed
2023-05-16 13:35:33,593:INFO:             xgboost: Not installed
2023-05-16 13:35:33,594:INFO:            catboost: Not installed
2023-05-16 13:35:33,594:INFO:              kmodes: Not installed
2023-05-16 13:35:33,594:INFO:             mlxtend: Not installed
2023-05-16 13:35:33,594:INFO:       statsforecast: Not installed
2023-05-16 13:35:33,594:INFO:        tune_sklearn: Not installed
2023-05-16 13:35:33,594:INFO:                 ray: Not installed
2023-05-16 13:35:33,594:INFO:            hyperopt: Not installed
2023-05-16 13:35:33,594:INFO:              optuna: Not installed
2023-05-16 13:35:33,594:INFO:               skopt: Not installed
2023-05-16 13:35:33,594:INFO:              mlflow: Not installed
2023-05-16 13:35:33,594:INFO:              gradio: Not installed
2023-05-16 13:35:33,594:INFO:             fastapi: Not installed
2023-05-16 13:35:33,594:INFO:             uvicorn: Not installed
2023-05-16 13:35:33,594:INFO:              m2cgen: Not installed
2023-05-16 13:35:33,594:INFO:           evidently: Not installed
2023-05-16 13:35:33,594:INFO:               fugue: Not installed
2023-05-16 13:35:33,594:INFO:           streamlit: 1.20.0
2023-05-16 13:35:33,594:INFO:             prophet: Not installed
2023-05-16 13:35:33,594:INFO:None
2023-05-16 13:35:33,595:INFO:Set up data.
2023-05-16 13:35:33,601:INFO:Set up train/test split.
2023-05-16 13:35:33,605:INFO:Set up index.
2023-05-16 13:35:33,605:INFO:Set up folding strategy.
2023-05-16 13:35:33,605:INFO:Assigning column types.
2023-05-16 13:35:33,608:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:35:33,658:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:35:33,660:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:33,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:35:33,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:33,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,774:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:35:33,824:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:33,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:33,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:33,932:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:35:34,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,115:INFO:Preparing preprocessing pipeline...
2023-05-16 13:35:34,117:INFO:Set up simple imputation.
2023-05-16 13:35:34,117:INFO:Set up column name cleaning.
2023-05-16 13:35:34,141:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:35:34,145:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'menopause', 'tumor-size',
                                             'inv-nodes', 'node-caps',
                                             'deg-malig', 'breast',
                                             'breast-quad', 'irradiat'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:35:34,146:INFO:Creating final display dataframe.
2023-05-16 13:35:34,222:INFO:Setup _display_container:                     Description             Value
0                    Session id              5324
1                        Target             Class
2                   Target type            Binary
3           Original data shape         (683, 10)
4        Transformed data shape         (683, 10)
5   Transformed train set shape         (478, 10)
6    Transformed test set shape         (205, 10)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              348d
2023-05-16 13:35:34,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:34,410:INFO:setup() successfully completed in 0.85s...............
2023-05-16 13:35:44,408:INFO:PyCaret ClassificationExperiment
2023-05-16 13:35:44,408:INFO:Logging name: clf-default-name
2023-05-16 13:35:44,408:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:35:44,408:INFO:version 3.0.1
2023-05-16 13:35:44,408:INFO:Initializing setup()
2023-05-16 13:35:44,408:INFO:self.USI: 5c8b
2023-05-16 13:35:44,409:INFO:self._variable_keys: {'fix_imbalance', 'fold_groups_param', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'is_multiclass', 'html_param', 'gpu_param', 'seed', 'exp_id', 'data', 'logging_param', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'target_param', 'memory', 'log_plots_param', 'USI', 'exp_name_log', 'y_test', 'X_train', 'y', 'y_train', 'fold_generator', 'pipeline', 'idx', 'X'}
2023-05-16 13:35:44,409:INFO:Checking environment
2023-05-16 13:35:44,409:INFO:python_version: 3.9.13
2023-05-16 13:35:44,409:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:35:44,409:INFO:machine: AMD64
2023-05-16 13:35:44,409:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:35:44,409:INFO:Memory: svmem(total=7968444416, available=588017664, percent=92.6, used=7380426752, free=588017664)
2023-05-16 13:35:44,409:INFO:Physical Core: 6
2023-05-16 13:35:44,409:INFO:Logical Core: 12
2023-05-16 13:35:44,410:INFO:Checking libraries
2023-05-16 13:35:44,410:INFO:System:
2023-05-16 13:35:44,410:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:35:44,410:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:35:44,410:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:35:44,410:INFO:PyCaret required dependencies:
2023-05-16 13:35:44,410:INFO:                 pip: 22.2.2
2023-05-16 13:35:44,410:INFO:          setuptools: 63.4.1
2023-05-16 13:35:44,410:INFO:             pycaret: 3.0.1
2023-05-16 13:35:44,410:INFO:             IPython: 7.31.1
2023-05-16 13:35:44,410:INFO:          ipywidgets: 7.6.5
2023-05-16 13:35:44,410:INFO:                tqdm: 4.64.1
2023-05-16 13:35:44,410:INFO:               numpy: 1.21.6
2023-05-16 13:35:44,410:INFO:              pandas: 1.4.4
2023-05-16 13:35:44,410:INFO:              jinja2: 2.11.3
2023-05-16 13:35:44,410:INFO:               scipy: 1.9.1
2023-05-16 13:35:44,410:INFO:              joblib: 1.2.0
2023-05-16 13:35:44,410:INFO:             sklearn: 1.0.2
2023-05-16 13:35:44,410:INFO:                pyod: 1.0.9
2023-05-16 13:35:44,410:INFO:            imblearn: 0.10.1
2023-05-16 13:35:44,410:INFO:   category_encoders: 2.6.1
2023-05-16 13:35:44,410:INFO:            lightgbm: 3.3.5
2023-05-16 13:35:44,410:INFO:               numba: 0.55.1
2023-05-16 13:35:44,410:INFO:            requests: 2.28.1
2023-05-16 13:35:44,410:INFO:          matplotlib: 3.5.2
2023-05-16 13:35:44,410:INFO:          scikitplot: 0.3.7
2023-05-16 13:35:44,410:INFO:         yellowbrick: 1.5
2023-05-16 13:35:44,410:INFO:              plotly: 5.9.0
2023-05-16 13:35:44,410:INFO:             kaleido: 0.2.1
2023-05-16 13:35:44,411:INFO:         statsmodels: 0.13.2
2023-05-16 13:35:44,411:INFO:              sktime: 0.17.0
2023-05-16 13:35:44,411:INFO:               tbats: 1.1.3
2023-05-16 13:35:44,411:INFO:            pmdarima: 2.0.3
2023-05-16 13:35:44,411:INFO:              psutil: 5.9.0
2023-05-16 13:35:44,411:INFO:PyCaret optional dependencies:
2023-05-16 13:35:44,411:INFO:                shap: Not installed
2023-05-16 13:35:44,411:INFO:           interpret: Not installed
2023-05-16 13:35:44,411:INFO:                umap: Not installed
2023-05-16 13:35:44,411:INFO:    pandas_profiling: Not installed
2023-05-16 13:35:44,411:INFO:  explainerdashboard: Not installed
2023-05-16 13:35:44,411:INFO:             autoviz: Not installed
2023-05-16 13:35:44,411:INFO:           fairlearn: Not installed
2023-05-16 13:35:44,411:INFO:             xgboost: Not installed
2023-05-16 13:35:44,411:INFO:            catboost: Not installed
2023-05-16 13:35:44,411:INFO:              kmodes: Not installed
2023-05-16 13:35:44,411:INFO:             mlxtend: Not installed
2023-05-16 13:35:44,411:INFO:       statsforecast: Not installed
2023-05-16 13:35:44,411:INFO:        tune_sklearn: Not installed
2023-05-16 13:35:44,411:INFO:                 ray: Not installed
2023-05-16 13:35:44,411:INFO:            hyperopt: Not installed
2023-05-16 13:35:44,411:INFO:              optuna: Not installed
2023-05-16 13:35:44,411:INFO:               skopt: Not installed
2023-05-16 13:35:44,411:INFO:              mlflow: Not installed
2023-05-16 13:35:44,411:INFO:              gradio: Not installed
2023-05-16 13:35:44,411:INFO:             fastapi: Not installed
2023-05-16 13:35:44,411:INFO:             uvicorn: Not installed
2023-05-16 13:35:44,411:INFO:              m2cgen: Not installed
2023-05-16 13:35:44,411:INFO:           evidently: Not installed
2023-05-16 13:35:44,412:INFO:               fugue: Not installed
2023-05-16 13:35:44,412:INFO:           streamlit: 1.20.0
2023-05-16 13:35:44,412:INFO:             prophet: Not installed
2023-05-16 13:35:44,412:INFO:None
2023-05-16 13:35:44,412:INFO:Set up data.
2023-05-16 13:35:44,417:INFO:Set up train/test split.
2023-05-16 13:35:44,421:INFO:Set up index.
2023-05-16 13:35:44,421:INFO:Set up folding strategy.
2023-05-16 13:35:44,421:INFO:Assigning column types.
2023-05-16 13:35:44,424:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:35:44,470:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:35:44,471:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:44,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:35:44,548:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:44,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,578:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:35:44,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:44,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:35:44,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,730:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:35:44,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:44,883:INFO:Preparing preprocessing pipeline...
2023-05-16 13:35:44,884:INFO:Set up simple imputation.
2023-05-16 13:35:44,884:INFO:Set up column name cleaning.
2023-05-16 13:35:44,906:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:35:44,911:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'menopause', 'tumor-size',
                                             'inv-nodes', 'node-caps',
                                             'deg-malig', 'breast',
                                             'breast-quad', 'irradiat'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:35:44,911:INFO:Creating final display dataframe.
2023-05-16 13:35:44,981:INFO:Setup _display_container:                     Description             Value
0                    Session id              2102
1                        Target             Class
2                   Target type            Binary
3           Original data shape         (683, 10)
4        Transformed data shape         (683, 10)
5   Transformed train set shape         (478, 10)
6    Transformed test set shape         (205, 10)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5c8b
2023-05-16 13:35:45,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:45,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:45,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:45,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:35:45,152:INFO:setup() successfully completed in 0.76s...............
2023-05-16 13:35:45,168:INFO:Initializing compare_models()
2023-05-16 13:35:45,168:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:35:45,168:INFO:Checking exceptions
2023-05-16 13:35:45,171:INFO:Preparing display monitor
2023-05-16 13:35:45,210:INFO:Initializing Logistic Regression
2023-05-16 13:35:45,210:INFO:Total runtime is 0.0 minutes
2023-05-16 13:35:45,216:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:45,216:INFO:Initializing create_model()
2023-05-16 13:35:45,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:45,217:INFO:Checking exceptions
2023-05-16 13:35:45,217:INFO:Importing libraries
2023-05-16 13:35:45,217:INFO:Copying training dataset
2023-05-16 13:35:45,221:INFO:Defining folds
2023-05-16 13:35:45,221:INFO:Declaring metric variables
2023-05-16 13:35:45,225:INFO:Importing untrained model
2023-05-16 13:35:45,231:INFO:Logistic Regression Imported successfully
2023-05-16 13:35:45,239:INFO:Starting cross validation
2023-05-16 13:35:45,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:45,585:INFO:Calculating mean and std
2023-05-16 13:35:45,586:INFO:Creating metrics dataframe
2023-05-16 13:35:45,612:INFO:Uploading results into container
2023-05-16 13:35:45,613:INFO:Uploading model into container now
2023-05-16 13:35:45,613:INFO:_master_model_container: 1
2023-05-16 13:35:45,613:INFO:_display_container: 2
2023-05-16 13:35:45,614:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2102, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:35:45,614:INFO:create_model() successfully completed......................................
2023-05-16 13:35:45,767:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:45,767:INFO:Creating metrics dataframe
2023-05-16 13:35:45,774:INFO:Initializing K Neighbors Classifier
2023-05-16 13:35:45,774:INFO:Total runtime is 0.009396719932556152 minutes
2023-05-16 13:35:45,778:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:45,779:INFO:Initializing create_model()
2023-05-16 13:35:45,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:45,779:INFO:Checking exceptions
2023-05-16 13:35:45,779:INFO:Importing libraries
2023-05-16 13:35:45,779:INFO:Copying training dataset
2023-05-16 13:35:45,783:INFO:Defining folds
2023-05-16 13:35:45,783:INFO:Declaring metric variables
2023-05-16 13:35:45,786:INFO:Importing untrained model
2023-05-16 13:35:45,792:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:35:45,802:INFO:Starting cross validation
2023-05-16 13:35:45,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:45,940:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:45,948:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:45,954:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:45,975:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:45,990:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:45,993:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:45,999:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:46,008:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:46,065:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:46,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:35:46,224:INFO:Calculating mean and std
2023-05-16 13:35:46,226:INFO:Creating metrics dataframe
2023-05-16 13:35:46,257:INFO:Uploading results into container
2023-05-16 13:35:46,258:INFO:Uploading model into container now
2023-05-16 13:35:46,258:INFO:_master_model_container: 2
2023-05-16 13:35:46,258:INFO:_display_container: 2
2023-05-16 13:35:46,258:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:35:46,258:INFO:create_model() successfully completed......................................
2023-05-16 13:35:46,403:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:46,403:INFO:Creating metrics dataframe
2023-05-16 13:35:46,413:INFO:Initializing Naive Bayes
2023-05-16 13:35:46,413:INFO:Total runtime is 0.020036045710245767 minutes
2023-05-16 13:35:46,418:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:46,418:INFO:Initializing create_model()
2023-05-16 13:35:46,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:46,418:INFO:Checking exceptions
2023-05-16 13:35:46,418:INFO:Importing libraries
2023-05-16 13:35:46,418:INFO:Copying training dataset
2023-05-16 13:35:46,424:INFO:Defining folds
2023-05-16 13:35:46,424:INFO:Declaring metric variables
2023-05-16 13:35:46,429:INFO:Importing untrained model
2023-05-16 13:35:46,435:INFO:Naive Bayes Imported successfully
2023-05-16 13:35:46,444:INFO:Starting cross validation
2023-05-16 13:35:46,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:46,769:INFO:Calculating mean and std
2023-05-16 13:35:46,772:INFO:Creating metrics dataframe
2023-05-16 13:35:46,799:INFO:Uploading results into container
2023-05-16 13:35:46,800:INFO:Uploading model into container now
2023-05-16 13:35:46,800:INFO:_master_model_container: 3
2023-05-16 13:35:46,800:INFO:_display_container: 2
2023-05-16 13:35:46,800:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:35:46,800:INFO:create_model() successfully completed......................................
2023-05-16 13:35:46,945:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:46,945:INFO:Creating metrics dataframe
2023-05-16 13:35:46,955:INFO:Initializing Decision Tree Classifier
2023-05-16 13:35:46,955:INFO:Total runtime is 0.02907615900039673 minutes
2023-05-16 13:35:46,960:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:46,961:INFO:Initializing create_model()
2023-05-16 13:35:46,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:46,961:INFO:Checking exceptions
2023-05-16 13:35:46,961:INFO:Importing libraries
2023-05-16 13:35:46,961:INFO:Copying training dataset
2023-05-16 13:35:46,967:INFO:Defining folds
2023-05-16 13:35:46,967:INFO:Declaring metric variables
2023-05-16 13:35:46,973:INFO:Importing untrained model
2023-05-16 13:35:46,979:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:35:46,988:INFO:Starting cross validation
2023-05-16 13:35:46,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:47,351:INFO:Calculating mean and std
2023-05-16 13:35:47,353:INFO:Creating metrics dataframe
2023-05-16 13:35:47,382:INFO:Uploading results into container
2023-05-16 13:35:47,382:INFO:Uploading model into container now
2023-05-16 13:35:47,383:INFO:_master_model_container: 4
2023-05-16 13:35:47,383:INFO:_display_container: 2
2023-05-16 13:35:47,383:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2102, splitter='best')
2023-05-16 13:35:47,383:INFO:create_model() successfully completed......................................
2023-05-16 13:35:47,607:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:47,608:INFO:Creating metrics dataframe
2023-05-16 13:35:47,621:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:35:47,622:INFO:Total runtime is 0.0401958703994751 minutes
2023-05-16 13:35:47,627:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:47,628:INFO:Initializing create_model()
2023-05-16 13:35:47,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:47,629:INFO:Checking exceptions
2023-05-16 13:35:47,629:INFO:Importing libraries
2023-05-16 13:35:47,629:INFO:Copying training dataset
2023-05-16 13:35:47,634:INFO:Defining folds
2023-05-16 13:35:47,635:INFO:Declaring metric variables
2023-05-16 13:35:47,641:INFO:Importing untrained model
2023-05-16 13:35:47,647:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:35:47,660:INFO:Starting cross validation
2023-05-16 13:35:47,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:47,760:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,810:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,826:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,831:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,842:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,876:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,882:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,902:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,908:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:47,910:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:35:48,018:INFO:Calculating mean and std
2023-05-16 13:35:48,020:INFO:Creating metrics dataframe
2023-05-16 13:35:48,062:INFO:Uploading results into container
2023-05-16 13:35:48,063:INFO:Uploading model into container now
2023-05-16 13:35:48,064:INFO:_master_model_container: 5
2023-05-16 13:35:48,064:INFO:_display_container: 2
2023-05-16 13:35:48,064:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2102, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:35:48,065:INFO:create_model() successfully completed......................................
2023-05-16 13:35:48,465:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:48,466:INFO:Creating metrics dataframe
2023-05-16 13:35:48,477:INFO:Initializing Ridge Classifier
2023-05-16 13:35:48,477:INFO:Total runtime is 0.05444810787836711 minutes
2023-05-16 13:35:48,482:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:48,483:INFO:Initializing create_model()
2023-05-16 13:35:48,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:48,483:INFO:Checking exceptions
2023-05-16 13:35:48,484:INFO:Importing libraries
2023-05-16 13:35:48,484:INFO:Copying training dataset
2023-05-16 13:35:48,489:INFO:Defining folds
2023-05-16 13:35:48,491:INFO:Declaring metric variables
2023-05-16 13:35:48,496:INFO:Importing untrained model
2023-05-16 13:35:48,504:INFO:Ridge Classifier Imported successfully
2023-05-16 13:35:48,516:INFO:Starting cross validation
2023-05-16 13:35:48,518:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:48,622:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,643:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,648:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,687:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,688:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,697:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,709:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,721:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,736:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,739:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:35:48,852:INFO:Calculating mean and std
2023-05-16 13:35:48,855:INFO:Creating metrics dataframe
2023-05-16 13:35:48,893:INFO:Uploading results into container
2023-05-16 13:35:48,894:INFO:Uploading model into container now
2023-05-16 13:35:48,895:INFO:_master_model_container: 6
2023-05-16 13:35:48,895:INFO:_display_container: 2
2023-05-16 13:35:48,895:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2102, solver='auto', tol=0.001)
2023-05-16 13:35:48,895:INFO:create_model() successfully completed......................................
2023-05-16 13:35:49,068:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:49,068:INFO:Creating metrics dataframe
2023-05-16 13:35:49,080:INFO:Initializing Random Forest Classifier
2023-05-16 13:35:49,081:INFO:Total runtime is 0.06451588074366252 minutes
2023-05-16 13:35:49,086:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:49,087:INFO:Initializing create_model()
2023-05-16 13:35:49,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:49,088:INFO:Checking exceptions
2023-05-16 13:35:49,088:INFO:Importing libraries
2023-05-16 13:35:49,088:INFO:Copying training dataset
2023-05-16 13:35:49,094:INFO:Defining folds
2023-05-16 13:35:49,095:INFO:Declaring metric variables
2023-05-16 13:35:49,101:INFO:Importing untrained model
2023-05-16 13:35:49,109:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:35:49,121:INFO:Starting cross validation
2023-05-16 13:35:49,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:50,591:INFO:Calculating mean and std
2023-05-16 13:35:50,593:INFO:Creating metrics dataframe
2023-05-16 13:35:50,640:INFO:Uploading results into container
2023-05-16 13:35:50,641:INFO:Uploading model into container now
2023-05-16 13:35:50,641:INFO:_master_model_container: 7
2023-05-16 13:35:50,641:INFO:_display_container: 2
2023-05-16 13:35:50,642:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2102, verbose=0, warm_start=False)
2023-05-16 13:35:50,642:INFO:create_model() successfully completed......................................
2023-05-16 13:35:50,796:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:50,796:INFO:Creating metrics dataframe
2023-05-16 13:35:50,805:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:35:50,806:INFO:Total runtime is 0.0932665467262268 minutes
2023-05-16 13:35:50,810:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:50,810:INFO:Initializing create_model()
2023-05-16 13:35:50,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:50,811:INFO:Checking exceptions
2023-05-16 13:35:50,811:INFO:Importing libraries
2023-05-16 13:35:50,811:INFO:Copying training dataset
2023-05-16 13:35:50,815:INFO:Defining folds
2023-05-16 13:35:50,815:INFO:Declaring metric variables
2023-05-16 13:35:50,820:INFO:Importing untrained model
2023-05-16 13:35:50,826:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:35:50,835:INFO:Starting cross validation
2023-05-16 13:35:50,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:51,226:INFO:Calculating mean and std
2023-05-16 13:35:51,228:INFO:Creating metrics dataframe
2023-05-16 13:35:51,278:INFO:Uploading results into container
2023-05-16 13:35:51,280:INFO:Uploading model into container now
2023-05-16 13:35:51,281:INFO:_master_model_container: 8
2023-05-16 13:35:51,281:INFO:_display_container: 2
2023-05-16 13:35:51,281:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:35:51,281:INFO:create_model() successfully completed......................................
2023-05-16 13:35:51,526:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:51,527:INFO:Creating metrics dataframe
2023-05-16 13:35:51,542:INFO:Initializing Ada Boost Classifier
2023-05-16 13:35:51,543:INFO:Total runtime is 0.10553758939107259 minutes
2023-05-16 13:35:51,547:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:51,548:INFO:Initializing create_model()
2023-05-16 13:35:51,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:51,548:INFO:Checking exceptions
2023-05-16 13:35:51,548:INFO:Importing libraries
2023-05-16 13:35:51,548:INFO:Copying training dataset
2023-05-16 13:35:51,555:INFO:Defining folds
2023-05-16 13:35:51,555:INFO:Declaring metric variables
2023-05-16 13:35:51,560:INFO:Importing untrained model
2023-05-16 13:35:51,566:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:35:51,578:INFO:Starting cross validation
2023-05-16 13:35:51,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:52,408:INFO:Calculating mean and std
2023-05-16 13:35:52,409:INFO:Creating metrics dataframe
2023-05-16 13:35:52,464:INFO:Uploading results into container
2023-05-16 13:35:52,466:INFO:Uploading model into container now
2023-05-16 13:35:52,466:INFO:_master_model_container: 9
2023-05-16 13:35:52,466:INFO:_display_container: 2
2023-05-16 13:35:52,466:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2102)
2023-05-16 13:35:52,466:INFO:create_model() successfully completed......................................
2023-05-16 13:35:52,614:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:52,614:INFO:Creating metrics dataframe
2023-05-16 13:35:52,626:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:35:52,626:INFO:Total runtime is 0.12358960310618083 minutes
2023-05-16 13:35:52,632:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:52,632:INFO:Initializing create_model()
2023-05-16 13:35:52,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:52,633:INFO:Checking exceptions
2023-05-16 13:35:52,633:INFO:Importing libraries
2023-05-16 13:35:52,633:INFO:Copying training dataset
2023-05-16 13:35:52,638:INFO:Defining folds
2023-05-16 13:35:52,638:INFO:Declaring metric variables
2023-05-16 13:35:52,642:INFO:Importing untrained model
2023-05-16 13:35:52,648:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:35:52,661:INFO:Starting cross validation
2023-05-16 13:35:52,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:53,583:INFO:Calculating mean and std
2023-05-16 13:35:53,585:INFO:Creating metrics dataframe
2023-05-16 13:35:53,649:INFO:Uploading results into container
2023-05-16 13:35:53,650:INFO:Uploading model into container now
2023-05-16 13:35:53,651:INFO:_master_model_container: 10
2023-05-16 13:35:53,651:INFO:_display_container: 2
2023-05-16 13:35:53,651:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2102, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:35:53,651:INFO:create_model() successfully completed......................................
2023-05-16 13:35:53,808:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:53,808:INFO:Creating metrics dataframe
2023-05-16 13:35:53,821:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:35:53,821:INFO:Total runtime is 0.14350471496582032 minutes
2023-05-16 13:35:53,826:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:53,827:INFO:Initializing create_model()
2023-05-16 13:35:53,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:53,827:INFO:Checking exceptions
2023-05-16 13:35:53,827:INFO:Importing libraries
2023-05-16 13:35:53,827:INFO:Copying training dataset
2023-05-16 13:35:53,832:INFO:Defining folds
2023-05-16 13:35:53,832:INFO:Declaring metric variables
2023-05-16 13:35:53,836:INFO:Importing untrained model
2023-05-16 13:35:53,844:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:35:53,854:INFO:Starting cross validation
2023-05-16 13:35:53,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:54,373:INFO:Calculating mean and std
2023-05-16 13:35:54,375:INFO:Creating metrics dataframe
2023-05-16 13:35:54,437:INFO:Uploading results into container
2023-05-16 13:35:54,438:INFO:Uploading model into container now
2023-05-16 13:35:54,438:INFO:_master_model_container: 11
2023-05-16 13:35:54,438:INFO:_display_container: 2
2023-05-16 13:35:54,438:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:35:54,438:INFO:create_model() successfully completed......................................
2023-05-16 13:35:54,592:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:54,592:INFO:Creating metrics dataframe
2023-05-16 13:35:54,603:INFO:Initializing Extra Trees Classifier
2023-05-16 13:35:54,604:INFO:Total runtime is 0.15656607548395793 minutes
2023-05-16 13:35:54,608:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:54,609:INFO:Initializing create_model()
2023-05-16 13:35:54,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:54,609:INFO:Checking exceptions
2023-05-16 13:35:54,609:INFO:Importing libraries
2023-05-16 13:35:54,609:INFO:Copying training dataset
2023-05-16 13:35:54,615:INFO:Defining folds
2023-05-16 13:35:54,615:INFO:Declaring metric variables
2023-05-16 13:35:54,620:INFO:Importing untrained model
2023-05-16 13:35:54,628:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:35:54,639:INFO:Starting cross validation
2023-05-16 13:35:54,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:56,279:INFO:Calculating mean and std
2023-05-16 13:35:56,280:INFO:Creating metrics dataframe
2023-05-16 13:35:56,353:INFO:Uploading results into container
2023-05-16 13:35:56,354:INFO:Uploading model into container now
2023-05-16 13:35:56,354:INFO:_master_model_container: 12
2023-05-16 13:35:56,354:INFO:_display_container: 2
2023-05-16 13:35:56,355:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2102, verbose=0, warm_start=False)
2023-05-16 13:35:56,355:INFO:create_model() successfully completed......................................
2023-05-16 13:35:56,456:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:56,456:INFO:Creating metrics dataframe
2023-05-16 13:35:56,466:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:35:56,466:INFO:Total runtime is 0.1875905156135559 minutes
2023-05-16 13:35:56,470:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:56,470:INFO:Initializing create_model()
2023-05-16 13:35:56,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:56,470:INFO:Checking exceptions
2023-05-16 13:35:56,471:INFO:Importing libraries
2023-05-16 13:35:56,471:INFO:Copying training dataset
2023-05-16 13:35:56,475:INFO:Defining folds
2023-05-16 13:35:56,475:INFO:Declaring metric variables
2023-05-16 13:35:56,479:INFO:Importing untrained model
2023-05-16 13:35:56,484:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:35:56,491:INFO:Starting cross validation
2023-05-16 13:35:56,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:57,905:INFO:Calculating mean and std
2023-05-16 13:35:57,908:INFO:Creating metrics dataframe
2023-05-16 13:35:57,971:INFO:Uploading results into container
2023-05-16 13:35:57,971:INFO:Uploading model into container now
2023-05-16 13:35:57,972:INFO:_master_model_container: 13
2023-05-16 13:35:57,972:INFO:_display_container: 2
2023-05-16 13:35:57,972:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2102, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:35:57,972:INFO:create_model() successfully completed......................................
2023-05-16 13:35:58,070:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:58,070:INFO:Creating metrics dataframe
2023-05-16 13:35:58,081:INFO:Initializing Dummy Classifier
2023-05-16 13:35:58,081:INFO:Total runtime is 0.2145183563232422 minutes
2023-05-16 13:35:58,084:INFO:SubProcess create_model() called ==================================
2023-05-16 13:35:58,085:INFO:Initializing create_model()
2023-05-16 13:35:58,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025170650B50>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:58,085:INFO:Checking exceptions
2023-05-16 13:35:58,085:INFO:Importing libraries
2023-05-16 13:35:58,085:INFO:Copying training dataset
2023-05-16 13:35:58,090:INFO:Defining folds
2023-05-16 13:35:58,090:INFO:Declaring metric variables
2023-05-16 13:35:58,094:INFO:Importing untrained model
2023-05-16 13:35:58,098:INFO:Dummy Classifier Imported successfully
2023-05-16 13:35:58,104:INFO:Starting cross validation
2023-05-16 13:35:58,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:35:58,206:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,210:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,224:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,238:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,242:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,249:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,260:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,273:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,280:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,285:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:35:58,533:INFO:Calculating mean and std
2023-05-16 13:35:58,535:INFO:Creating metrics dataframe
2023-05-16 13:35:58,604:INFO:Uploading results into container
2023-05-16 13:35:58,604:INFO:Uploading model into container now
2023-05-16 13:35:58,605:INFO:_master_model_container: 14
2023-05-16 13:35:58,605:INFO:_display_container: 2
2023-05-16 13:35:58,605:INFO:DummyClassifier(constant=None, random_state=2102, strategy='prior')
2023-05-16 13:35:58,605:INFO:create_model() successfully completed......................................
2023-05-16 13:35:58,702:INFO:SubProcess create_model() end ==================================
2023-05-16 13:35:58,702:INFO:Creating metrics dataframe
2023-05-16 13:35:58,723:INFO:Initializing create_model()
2023-05-16 13:35:58,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025170650310>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:35:58,723:INFO:Checking exceptions
2023-05-16 13:35:58,725:INFO:Importing libraries
2023-05-16 13:35:58,725:INFO:Copying training dataset
2023-05-16 13:35:58,728:INFO:Defining folds
2023-05-16 13:35:58,728:INFO:Declaring metric variables
2023-05-16 13:35:58,728:INFO:Importing untrained model
2023-05-16 13:35:58,728:INFO:Declaring custom model
2023-05-16 13:35:58,729:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:35:58,729:INFO:Cross validation set to False
2023-05-16 13:35:58,729:INFO:Fitting Model
2023-05-16 13:35:58,781:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:35:58,781:INFO:create_model() successfully completed......................................
2023-05-16 13:35:58,903:INFO:_master_model_container: 14
2023-05-16 13:35:58,903:INFO:_display_container: 2
2023-05-16 13:35:58,904:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:35:58,904:INFO:compare_models() successfully completed......................................
2023-05-16 13:37:34,324:INFO:PyCaret ClassificationExperiment
2023-05-16 13:37:34,324:INFO:Logging name: clf-default-name
2023-05-16 13:37:34,324:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:37:34,324:INFO:version 3.0.1
2023-05-16 13:37:34,324:INFO:Initializing setup()
2023-05-16 13:37:34,325:INFO:self.USI: a59d
2023-05-16 13:37:34,325:INFO:self._variable_keys: {'fix_imbalance', 'fold_groups_param', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'is_multiclass', 'html_param', 'gpu_param', 'seed', 'exp_id', 'data', 'logging_param', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'target_param', 'memory', 'log_plots_param', 'USI', 'exp_name_log', 'y_test', 'X_train', 'y', 'y_train', 'fold_generator', 'pipeline', 'idx', 'X'}
2023-05-16 13:37:34,325:INFO:Checking environment
2023-05-16 13:37:34,325:INFO:python_version: 3.9.13
2023-05-16 13:37:34,325:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:37:34,325:INFO:machine: AMD64
2023-05-16 13:37:34,325:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:37:34,325:INFO:Memory: svmem(total=7968444416, available=547045376, percent=93.1, used=7421399040, free=547045376)
2023-05-16 13:37:34,325:INFO:Physical Core: 6
2023-05-16 13:37:34,325:INFO:Logical Core: 12
2023-05-16 13:37:34,325:INFO:Checking libraries
2023-05-16 13:37:34,325:INFO:System:
2023-05-16 13:37:34,325:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:37:34,325:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:37:34,325:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:37:34,325:INFO:PyCaret required dependencies:
2023-05-16 13:37:34,325:INFO:                 pip: 22.2.2
2023-05-16 13:37:34,326:INFO:          setuptools: 63.4.1
2023-05-16 13:37:34,326:INFO:             pycaret: 3.0.1
2023-05-16 13:37:34,326:INFO:             IPython: 7.31.1
2023-05-16 13:37:34,326:INFO:          ipywidgets: 7.6.5
2023-05-16 13:37:34,326:INFO:                tqdm: 4.64.1
2023-05-16 13:37:34,326:INFO:               numpy: 1.21.6
2023-05-16 13:37:34,326:INFO:              pandas: 1.4.4
2023-05-16 13:37:34,326:INFO:              jinja2: 2.11.3
2023-05-16 13:37:34,326:INFO:               scipy: 1.9.1
2023-05-16 13:37:34,326:INFO:              joblib: 1.2.0
2023-05-16 13:37:34,326:INFO:             sklearn: 1.0.2
2023-05-16 13:37:34,326:INFO:                pyod: 1.0.9
2023-05-16 13:37:34,326:INFO:            imblearn: 0.10.1
2023-05-16 13:37:34,326:INFO:   category_encoders: 2.6.1
2023-05-16 13:37:34,326:INFO:            lightgbm: 3.3.5
2023-05-16 13:37:34,326:INFO:               numba: 0.55.1
2023-05-16 13:37:34,326:INFO:            requests: 2.28.1
2023-05-16 13:37:34,326:INFO:          matplotlib: 3.5.2
2023-05-16 13:37:34,326:INFO:          scikitplot: 0.3.7
2023-05-16 13:37:34,326:INFO:         yellowbrick: 1.5
2023-05-16 13:37:34,326:INFO:              plotly: 5.9.0
2023-05-16 13:37:34,326:INFO:             kaleido: 0.2.1
2023-05-16 13:37:34,326:INFO:         statsmodels: 0.13.2
2023-05-16 13:37:34,326:INFO:              sktime: 0.17.0
2023-05-16 13:37:34,327:INFO:               tbats: 1.1.3
2023-05-16 13:37:34,327:INFO:            pmdarima: 2.0.3
2023-05-16 13:37:34,327:INFO:              psutil: 5.9.0
2023-05-16 13:37:34,327:INFO:PyCaret optional dependencies:
2023-05-16 13:37:34,327:INFO:                shap: Not installed
2023-05-16 13:37:34,327:INFO:           interpret: Not installed
2023-05-16 13:37:34,327:INFO:                umap: Not installed
2023-05-16 13:37:34,327:INFO:    pandas_profiling: Not installed
2023-05-16 13:37:34,327:INFO:  explainerdashboard: Not installed
2023-05-16 13:37:34,327:INFO:             autoviz: Not installed
2023-05-16 13:37:34,327:INFO:           fairlearn: Not installed
2023-05-16 13:37:34,327:INFO:             xgboost: Not installed
2023-05-16 13:37:34,327:INFO:            catboost: Not installed
2023-05-16 13:37:34,327:INFO:              kmodes: Not installed
2023-05-16 13:37:34,327:INFO:             mlxtend: Not installed
2023-05-16 13:37:34,327:INFO:       statsforecast: Not installed
2023-05-16 13:37:34,328:INFO:        tune_sklearn: Not installed
2023-05-16 13:37:34,328:INFO:                 ray: Not installed
2023-05-16 13:37:34,328:INFO:            hyperopt: Not installed
2023-05-16 13:37:34,328:INFO:              optuna: Not installed
2023-05-16 13:37:34,328:INFO:               skopt: Not installed
2023-05-16 13:37:34,328:INFO:              mlflow: Not installed
2023-05-16 13:37:34,328:INFO:              gradio: Not installed
2023-05-16 13:37:34,328:INFO:             fastapi: Not installed
2023-05-16 13:37:34,328:INFO:             uvicorn: Not installed
2023-05-16 13:37:34,328:INFO:              m2cgen: Not installed
2023-05-16 13:37:34,328:INFO:           evidently: Not installed
2023-05-16 13:37:34,328:INFO:               fugue: Not installed
2023-05-16 13:37:34,328:INFO:           streamlit: 1.20.0
2023-05-16 13:37:34,328:INFO:             prophet: Not installed
2023-05-16 13:37:34,328:INFO:None
2023-05-16 13:37:34,328:INFO:Set up data.
2023-05-16 13:37:34,336:INFO:Set up train/test split.
2023-05-16 13:37:34,341:INFO:Set up index.
2023-05-16 13:37:34,341:INFO:Set up folding strategy.
2023-05-16 13:37:34,341:INFO:Assigning column types.
2023-05-16 13:37:34,347:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:37:34,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:37:34,406:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:37:34,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:37:34,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:37:34,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,515:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:37:34,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:37:34,591:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:37:34,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,667:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:37:34,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:34,821:INFO:Preparing preprocessing pipeline...
2023-05-16 13:37:34,824:INFO:Set up simple imputation.
2023-05-16 13:37:34,824:INFO:Set up column name cleaning.
2023-05-16 13:37:34,847:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:37:34,851:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'chest pain type',
                                             'resting blood pressure',
                                             'serum cholestoral in mg/dl      ',
                                             'fasting blood sugar > 120 mg/dl ',
                                             'resting electrocardiographic '
                                             'results',
                                             'maximum heart rate achieved  ',
                                             'exercise induced angina    ',
                                             'oldpeak...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:37:34,851:INFO:Creating final display dataframe.
2023-05-16 13:37:34,931:INFO:Setup _display_container:                     Description             Value
0                    Session id              1613
1                        Target           Disease
2                   Target type            Binary
3           Original data shape         (270, 14)
4        Transformed data shape         (270, 14)
5   Transformed train set shape         (189, 14)
6    Transformed test set shape          (81, 14)
7              Numeric features                13
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a59d
2023-05-16 13:37:35,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:35,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:35,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:35,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:37:35,099:INFO:setup() successfully completed in 0.82s...............
2023-05-16 13:37:35,131:INFO:Initializing compare_models()
2023-05-16 13:37:35,131:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:37:35,131:INFO:Checking exceptions
2023-05-16 13:37:35,133:INFO:Preparing display monitor
2023-05-16 13:37:35,193:INFO:Initializing Logistic Regression
2023-05-16 13:37:35,193:INFO:Total runtime is 0.0 minutes
2023-05-16 13:37:35,197:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:35,198:INFO:Initializing create_model()
2023-05-16 13:37:35,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:35,199:INFO:Checking exceptions
2023-05-16 13:37:35,199:INFO:Importing libraries
2023-05-16 13:37:35,199:INFO:Copying training dataset
2023-05-16 13:37:35,205:INFO:Defining folds
2023-05-16 13:37:35,206:INFO:Declaring metric variables
2023-05-16 13:37:35,210:INFO:Importing untrained model
2023-05-16 13:37:35,216:INFO:Logistic Regression Imported successfully
2023-05-16 13:37:35,224:INFO:Starting cross validation
2023-05-16 13:37:35,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:36,073:INFO:Calculating mean and std
2023-05-16 13:37:36,074:INFO:Creating metrics dataframe
2023-05-16 13:37:36,145:INFO:Uploading results into container
2023-05-16 13:37:36,146:INFO:Uploading model into container now
2023-05-16 13:37:36,146:INFO:_master_model_container: 1
2023-05-16 13:37:36,147:INFO:_display_container: 2
2023-05-16 13:37:36,147:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:37:36,147:INFO:create_model() successfully completed......................................
2023-05-16 13:37:36,296:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:36,296:INFO:Creating metrics dataframe
2023-05-16 13:37:36,307:INFO:Initializing K Neighbors Classifier
2023-05-16 13:37:36,307:INFO:Total runtime is 0.018576924006144205 minutes
2023-05-16 13:37:36,311:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:36,312:INFO:Initializing create_model()
2023-05-16 13:37:36,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:36,312:INFO:Checking exceptions
2023-05-16 13:37:36,312:INFO:Importing libraries
2023-05-16 13:37:36,313:INFO:Copying training dataset
2023-05-16 13:37:36,319:INFO:Defining folds
2023-05-16 13:37:36,321:INFO:Declaring metric variables
2023-05-16 13:37:36,326:INFO:Importing untrained model
2023-05-16 13:37:36,331:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:37:36,341:INFO:Starting cross validation
2023-05-16 13:37:36,343:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:36,505:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,523:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,530:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,548:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,582:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,590:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,607:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,622:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,636:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:36,639:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:37:37,079:INFO:Calculating mean and std
2023-05-16 13:37:37,081:INFO:Creating metrics dataframe
2023-05-16 13:37:37,156:INFO:Uploading results into container
2023-05-16 13:37:37,156:INFO:Uploading model into container now
2023-05-16 13:37:37,157:INFO:_master_model_container: 2
2023-05-16 13:37:37,157:INFO:_display_container: 2
2023-05-16 13:37:37,157:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:37:37,157:INFO:create_model() successfully completed......................................
2023-05-16 13:37:37,344:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:37,345:INFO:Creating metrics dataframe
2023-05-16 13:37:37,359:INFO:Initializing Naive Bayes
2023-05-16 13:37:37,359:INFO:Total runtime is 0.03610991636912028 minutes
2023-05-16 13:37:37,366:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:37,366:INFO:Initializing create_model()
2023-05-16 13:37:37,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:37,367:INFO:Checking exceptions
2023-05-16 13:37:37,368:INFO:Importing libraries
2023-05-16 13:37:37,368:INFO:Copying training dataset
2023-05-16 13:37:37,375:INFO:Defining folds
2023-05-16 13:37:37,375:INFO:Declaring metric variables
2023-05-16 13:37:37,382:INFO:Importing untrained model
2023-05-16 13:37:37,390:INFO:Naive Bayes Imported successfully
2023-05-16 13:37:37,404:INFO:Starting cross validation
2023-05-16 13:37:37,406:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:38,011:INFO:Calculating mean and std
2023-05-16 13:37:38,013:INFO:Creating metrics dataframe
2023-05-16 13:37:38,096:INFO:Uploading results into container
2023-05-16 13:37:38,096:INFO:Uploading model into container now
2023-05-16 13:37:38,097:INFO:_master_model_container: 3
2023-05-16 13:37:38,097:INFO:_display_container: 2
2023-05-16 13:37:38,097:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:37:38,097:INFO:create_model() successfully completed......................................
2023-05-16 13:37:38,252:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:38,252:INFO:Creating metrics dataframe
2023-05-16 13:37:38,262:INFO:Initializing Decision Tree Classifier
2023-05-16 13:37:38,262:INFO:Total runtime is 0.05116211970647176 minutes
2023-05-16 13:37:38,267:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:38,267:INFO:Initializing create_model()
2023-05-16 13:37:38,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:38,268:INFO:Checking exceptions
2023-05-16 13:37:38,268:INFO:Importing libraries
2023-05-16 13:37:38,268:INFO:Copying training dataset
2023-05-16 13:37:38,274:INFO:Defining folds
2023-05-16 13:37:38,274:INFO:Declaring metric variables
2023-05-16 13:37:38,281:INFO:Importing untrained model
2023-05-16 13:37:38,286:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:37:38,296:INFO:Starting cross validation
2023-05-16 13:37:38,296:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:38,879:INFO:Calculating mean and std
2023-05-16 13:37:38,879:INFO:Creating metrics dataframe
2023-05-16 13:37:38,962:INFO:Uploading results into container
2023-05-16 13:37:38,963:INFO:Uploading model into container now
2023-05-16 13:37:38,963:INFO:_master_model_container: 4
2023-05-16 13:37:38,963:INFO:_display_container: 2
2023-05-16 13:37:38,963:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1613, splitter='best')
2023-05-16 13:37:38,963:INFO:create_model() successfully completed......................................
2023-05-16 13:37:39,113:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:39,113:INFO:Creating metrics dataframe
2023-05-16 13:37:39,124:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:37:39,124:INFO:Total runtime is 0.06551382939020793 minutes
2023-05-16 13:37:39,130:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:39,130:INFO:Initializing create_model()
2023-05-16 13:37:39,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:39,131:INFO:Checking exceptions
2023-05-16 13:37:39,131:INFO:Importing libraries
2023-05-16 13:37:39,131:INFO:Copying training dataset
2023-05-16 13:37:39,140:INFO:Defining folds
2023-05-16 13:37:39,141:INFO:Declaring metric variables
2023-05-16 13:37:39,146:INFO:Importing untrained model
2023-05-16 13:37:39,152:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:37:39,161:INFO:Starting cross validation
2023-05-16 13:37:39,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:39,263:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,280:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,290:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,294:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:39,309:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,329:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,334:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,343:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,351:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,360:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:39,373:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,375:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:37:39,689:INFO:Calculating mean and std
2023-05-16 13:37:39,691:INFO:Creating metrics dataframe
2023-05-16 13:37:39,774:INFO:Uploading results into container
2023-05-16 13:37:39,775:INFO:Uploading model into container now
2023-05-16 13:37:39,775:INFO:_master_model_container: 5
2023-05-16 13:37:39,775:INFO:_display_container: 2
2023-05-16 13:37:39,775:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1613, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:37:39,775:INFO:create_model() successfully completed......................................
2023-05-16 13:37:39,924:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:39,924:INFO:Creating metrics dataframe
2023-05-16 13:37:39,935:INFO:Initializing Ridge Classifier
2023-05-16 13:37:39,936:INFO:Total runtime is 0.07905768156051636 minutes
2023-05-16 13:37:39,942:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:39,943:INFO:Initializing create_model()
2023-05-16 13:37:39,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:39,943:INFO:Checking exceptions
2023-05-16 13:37:39,943:INFO:Importing libraries
2023-05-16 13:37:39,943:INFO:Copying training dataset
2023-05-16 13:37:39,954:INFO:Defining folds
2023-05-16 13:37:39,954:INFO:Declaring metric variables
2023-05-16 13:37:39,960:INFO:Importing untrained model
2023-05-16 13:37:39,966:INFO:Ridge Classifier Imported successfully
2023-05-16 13:37:39,977:INFO:Starting cross validation
2023-05-16 13:37:39,977:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:40,088:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,114:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,137:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,138:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,158:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,165:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,167:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,187:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,193:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,211:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:37:40,538:INFO:Calculating mean and std
2023-05-16 13:37:40,539:INFO:Creating metrics dataframe
2023-05-16 13:37:40,619:INFO:Uploading results into container
2023-05-16 13:37:40,621:INFO:Uploading model into container now
2023-05-16 13:37:40,621:INFO:_master_model_container: 6
2023-05-16 13:37:40,621:INFO:_display_container: 2
2023-05-16 13:37:40,622:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1613, solver='auto', tol=0.001)
2023-05-16 13:37:40,622:INFO:create_model() successfully completed......................................
2023-05-16 13:37:40,803:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:40,803:INFO:Creating metrics dataframe
2023-05-16 13:37:40,815:INFO:Initializing Random Forest Classifier
2023-05-16 13:37:40,815:INFO:Total runtime is 0.0937124768892924 minutes
2023-05-16 13:37:40,819:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:40,820:INFO:Initializing create_model()
2023-05-16 13:37:40,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:40,821:INFO:Checking exceptions
2023-05-16 13:37:40,821:INFO:Importing libraries
2023-05-16 13:37:40,821:INFO:Copying training dataset
2023-05-16 13:37:40,827:INFO:Defining folds
2023-05-16 13:37:40,828:INFO:Declaring metric variables
2023-05-16 13:37:40,837:INFO:Importing untrained model
2023-05-16 13:37:40,843:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:37:40,855:INFO:Starting cross validation
2023-05-16 13:37:40,859:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:42,531:INFO:Calculating mean and std
2023-05-16 13:37:42,533:INFO:Creating metrics dataframe
2023-05-16 13:37:42,613:INFO:Uploading results into container
2023-05-16 13:37:42,614:INFO:Uploading model into container now
2023-05-16 13:37:42,615:INFO:_master_model_container: 7
2023-05-16 13:37:42,615:INFO:_display_container: 2
2023-05-16 13:37:42,616:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1613, verbose=0, warm_start=False)
2023-05-16 13:37:42,616:INFO:create_model() successfully completed......................................
2023-05-16 13:37:42,804:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:42,804:INFO:Creating metrics dataframe
2023-05-16 13:37:42,815:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:37:42,815:INFO:Total runtime is 0.12704362471898398 minutes
2023-05-16 13:37:42,820:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:42,821:INFO:Initializing create_model()
2023-05-16 13:37:42,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:42,822:INFO:Checking exceptions
2023-05-16 13:37:42,822:INFO:Importing libraries
2023-05-16 13:37:42,822:INFO:Copying training dataset
2023-05-16 13:37:42,828:INFO:Defining folds
2023-05-16 13:37:42,828:INFO:Declaring metric variables
2023-05-16 13:37:42,835:INFO:Importing untrained model
2023-05-16 13:37:42,841:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:37:42,852:INFO:Starting cross validation
2023-05-16 13:37:42,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:43,476:INFO:Calculating mean and std
2023-05-16 13:37:43,477:INFO:Creating metrics dataframe
2023-05-16 13:37:43,555:INFO:Uploading results into container
2023-05-16 13:37:43,556:INFO:Uploading model into container now
2023-05-16 13:37:43,557:INFO:_master_model_container: 8
2023-05-16 13:37:43,557:INFO:_display_container: 2
2023-05-16 13:37:43,557:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:37:43,557:INFO:create_model() successfully completed......................................
2023-05-16 13:37:43,698:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:43,698:INFO:Creating metrics dataframe
2023-05-16 13:37:43,711:INFO:Initializing Ada Boost Classifier
2023-05-16 13:37:43,711:INFO:Total runtime is 0.1419761339823405 minutes
2023-05-16 13:37:43,715:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:43,715:INFO:Initializing create_model()
2023-05-16 13:37:43,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:43,716:INFO:Checking exceptions
2023-05-16 13:37:43,717:INFO:Importing libraries
2023-05-16 13:37:43,717:INFO:Copying training dataset
2023-05-16 13:37:43,723:INFO:Defining folds
2023-05-16 13:37:43,723:INFO:Declaring metric variables
2023-05-16 13:37:43,730:INFO:Importing untrained model
2023-05-16 13:37:43,737:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:37:43,748:INFO:Starting cross validation
2023-05-16 13:37:43,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:44,762:INFO:Calculating mean and std
2023-05-16 13:37:44,765:INFO:Creating metrics dataframe
2023-05-16 13:37:44,864:INFO:Uploading results into container
2023-05-16 13:37:44,865:INFO:Uploading model into container now
2023-05-16 13:37:44,867:INFO:_master_model_container: 9
2023-05-16 13:37:44,867:INFO:_display_container: 2
2023-05-16 13:37:44,868:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1613)
2023-05-16 13:37:44,868:INFO:create_model() successfully completed......................................
2023-05-16 13:37:45,025:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:45,025:INFO:Creating metrics dataframe
2023-05-16 13:37:45,037:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:37:45,038:INFO:Total runtime is 0.16408042510350546 minutes
2023-05-16 13:37:45,041:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:45,041:INFO:Initializing create_model()
2023-05-16 13:37:45,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:45,042:INFO:Checking exceptions
2023-05-16 13:37:45,043:INFO:Importing libraries
2023-05-16 13:37:45,043:INFO:Copying training dataset
2023-05-16 13:37:45,047:INFO:Defining folds
2023-05-16 13:37:45,048:INFO:Declaring metric variables
2023-05-16 13:37:45,054:INFO:Importing untrained model
2023-05-16 13:37:45,061:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:37:45,071:INFO:Starting cross validation
2023-05-16 13:37:45,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:46,111:INFO:Calculating mean and std
2023-05-16 13:37:46,113:INFO:Creating metrics dataframe
2023-05-16 13:37:46,210:INFO:Uploading results into container
2023-05-16 13:37:46,211:INFO:Uploading model into container now
2023-05-16 13:37:46,211:INFO:_master_model_container: 10
2023-05-16 13:37:46,211:INFO:_display_container: 2
2023-05-16 13:37:46,212:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1613, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:37:46,212:INFO:create_model() successfully completed......................................
2023-05-16 13:37:46,374:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:46,374:INFO:Creating metrics dataframe
2023-05-16 13:37:46,386:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:37:46,386:INFO:Total runtime is 0.18656193415323893 minutes
2023-05-16 13:37:46,393:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:46,393:INFO:Initializing create_model()
2023-05-16 13:37:46,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:46,394:INFO:Checking exceptions
2023-05-16 13:37:46,394:INFO:Importing libraries
2023-05-16 13:37:46,394:INFO:Copying training dataset
2023-05-16 13:37:46,401:INFO:Defining folds
2023-05-16 13:37:46,401:INFO:Declaring metric variables
2023-05-16 13:37:46,406:INFO:Importing untrained model
2023-05-16 13:37:46,414:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:37:46,426:INFO:Starting cross validation
2023-05-16 13:37:46,427:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:47,089:INFO:Calculating mean and std
2023-05-16 13:37:47,090:INFO:Creating metrics dataframe
2023-05-16 13:37:47,193:INFO:Uploading results into container
2023-05-16 13:37:47,195:INFO:Uploading model into container now
2023-05-16 13:37:47,197:INFO:_master_model_container: 11
2023-05-16 13:37:47,197:INFO:_display_container: 2
2023-05-16 13:37:47,198:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:37:47,198:INFO:create_model() successfully completed......................................
2023-05-16 13:37:47,394:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:47,394:INFO:Creating metrics dataframe
2023-05-16 13:37:47,408:INFO:Initializing Extra Trees Classifier
2023-05-16 13:37:47,409:INFO:Total runtime is 0.20359718402226767 minutes
2023-05-16 13:37:47,414:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:47,415:INFO:Initializing create_model()
2023-05-16 13:37:47,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:47,415:INFO:Checking exceptions
2023-05-16 13:37:47,415:INFO:Importing libraries
2023-05-16 13:37:47,415:INFO:Copying training dataset
2023-05-16 13:37:47,422:INFO:Defining folds
2023-05-16 13:37:47,422:INFO:Declaring metric variables
2023-05-16 13:37:47,430:INFO:Importing untrained model
2023-05-16 13:37:47,438:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:37:47,449:INFO:Starting cross validation
2023-05-16 13:37:47,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:49,225:INFO:Calculating mean and std
2023-05-16 13:37:49,226:INFO:Creating metrics dataframe
2023-05-16 13:37:49,323:INFO:Uploading results into container
2023-05-16 13:37:49,324:INFO:Uploading model into container now
2023-05-16 13:37:49,324:INFO:_master_model_container: 12
2023-05-16 13:37:49,324:INFO:_display_container: 2
2023-05-16 13:37:49,325:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1613, verbose=0, warm_start=False)
2023-05-16 13:37:49,325:INFO:create_model() successfully completed......................................
2023-05-16 13:37:49,498:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:49,498:INFO:Creating metrics dataframe
2023-05-16 13:37:49,515:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:37:49,515:INFO:Total runtime is 0.23871060212453207 minutes
2023-05-16 13:37:49,519:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:49,520:INFO:Initializing create_model()
2023-05-16 13:37:49,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:49,520:INFO:Checking exceptions
2023-05-16 13:37:49,520:INFO:Importing libraries
2023-05-16 13:37:49,520:INFO:Copying training dataset
2023-05-16 13:37:49,527:INFO:Defining folds
2023-05-16 13:37:49,529:INFO:Declaring metric variables
2023-05-16 13:37:49,535:INFO:Importing untrained model
2023-05-16 13:37:49,541:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:37:49,549:INFO:Starting cross validation
2023-05-16 13:37:49,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:50,370:INFO:Calculating mean and std
2023-05-16 13:37:50,372:INFO:Creating metrics dataframe
2023-05-16 13:37:50,471:INFO:Uploading results into container
2023-05-16 13:37:50,472:INFO:Uploading model into container now
2023-05-16 13:37:50,473:INFO:_master_model_container: 13
2023-05-16 13:37:50,473:INFO:_display_container: 2
2023-05-16 13:37:50,474:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1613, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:37:50,474:INFO:create_model() successfully completed......................................
2023-05-16 13:37:50,658:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:50,658:INFO:Creating metrics dataframe
2023-05-16 13:37:50,684:INFO:Initializing Dummy Classifier
2023-05-16 13:37:50,685:INFO:Total runtime is 0.25819842020670575 minutes
2023-05-16 13:37:50,695:INFO:SubProcess create_model() called ==================================
2023-05-16 13:37:50,696:INFO:Initializing create_model()
2023-05-16 13:37:50,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002514DEB13A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:50,696:INFO:Checking exceptions
2023-05-16 13:37:50,696:INFO:Importing libraries
2023-05-16 13:37:50,696:INFO:Copying training dataset
2023-05-16 13:37:50,711:INFO:Defining folds
2023-05-16 13:37:50,711:INFO:Declaring metric variables
2023-05-16 13:37:50,717:INFO:Importing untrained model
2023-05-16 13:37:50,727:INFO:Dummy Classifier Imported successfully
2023-05-16 13:37:50,739:INFO:Starting cross validation
2023-05-16 13:37:50,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:37:50,919:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:50,923:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:50,964:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:50,969:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:50,986:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:51,017:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:51,019:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:51,021:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:51,025:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:51,026:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:37:51,471:INFO:Calculating mean and std
2023-05-16 13:37:51,472:INFO:Creating metrics dataframe
2023-05-16 13:37:51,610:INFO:Uploading results into container
2023-05-16 13:37:51,612:INFO:Uploading model into container now
2023-05-16 13:37:51,612:INFO:_master_model_container: 14
2023-05-16 13:37:51,613:INFO:_display_container: 2
2023-05-16 13:37:51,613:INFO:DummyClassifier(constant=None, random_state=1613, strategy='prior')
2023-05-16 13:37:51,613:INFO:create_model() successfully completed......................................
2023-05-16 13:37:51,824:INFO:SubProcess create_model() end ==================================
2023-05-16 13:37:51,824:INFO:Creating metrics dataframe
2023-05-16 13:37:51,859:INFO:Initializing create_model()
2023-05-16 13:37:51,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251703C2B20>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1613, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:37:51,859:INFO:Checking exceptions
2023-05-16 13:37:51,864:INFO:Importing libraries
2023-05-16 13:37:51,864:INFO:Copying training dataset
2023-05-16 13:37:51,871:INFO:Defining folds
2023-05-16 13:37:51,871:INFO:Declaring metric variables
2023-05-16 13:37:51,872:INFO:Importing untrained model
2023-05-16 13:37:51,872:INFO:Declaring custom model
2023-05-16 13:37:51,873:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:37:51,873:INFO:Cross validation set to False
2023-05-16 13:37:51,873:INFO:Fitting Model
2023-05-16 13:37:52,185:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1613, verbose=0, warm_start=False)
2023-05-16 13:37:52,185:INFO:create_model() successfully completed......................................
2023-05-16 13:37:52,399:INFO:_master_model_container: 14
2023-05-16 13:37:52,399:INFO:_display_container: 2
2023-05-16 13:37:52,400:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1613, verbose=0, warm_start=False)
2023-05-16 13:37:52,400:INFO:compare_models() successfully completed......................................
2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_fba11fa9a95644ffb5e3b8e774fc8d04
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_bff04371fea24e7a8ae9b20881178bb9_b86d48bc65084f9995bcc17387c405a9
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_e475087493e048ff9a57667f0afa11cb
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_0dcf7a7f2d0f4418a7ebd1d9eab48587_f4152598311b43878278f2e2b7efc80c
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_05cc6fd340d7444f91d426fcae95bc48
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_ea45e917a89141f2b4a3deded574a514_af7af59aaf5c472aa98c3b96d0a887f6
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_e91d36447b4e4bfeb81911bab3006299
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_4bd2668d32d14bf2955fddd4cc342c7d_6b286526e07343669eedaa1c8b130f46
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_de8b5655b6f444da96ae5b3e960883cf
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_0c55a66a76c24dd188dd275c85bf309e_e08e5ff10a6a4e46898df2cb1cd1e709
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_cbcb1dfb70f54aa08461bc540098370d
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_09d98c75b07f4ccdbc428847718e59de_e46bd45a90094d01823d99311a9f2fd2
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_21818330b990455284e220cf5718cd95
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_38f437f6d24e4f0ba618b2ef54a8e414_223cfa72ecc3439cbf0fc04aae34428f
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_84c468416c64421499b41c2262263972
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_ec03bea2caf3456ebeb974e90b110802_ae787cdb1c3544b8b264e1470157ffdc
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_875b92af51d94150bf2832e48fc53478
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_59b3a011955848b0a0ac4f165ae5162a_b8d026958ca845978d2915997d8aaf0f
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_a88c9935ceab46b799d70cac0f7cc458
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3c51e177679d4c45815dfd057bb759b4_62e1b36ae5c14c509dd2667755907337
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_04a56a1482ce49bc9fe78de8c8595a2d
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_84ce96d14cab4293bac0dd5c2c05f3f9_214505ec9c864df589d20574079de90a
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_e05b9185e66946b4b0a595422f295cd1
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_5cb0c215b9b247f99f70206c1ef2592d_5cdddb8c9a3d4a989146c34aa9fd5778
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_54007698df634c019303cdb420c04942
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_97748483135e4952ba9af45754073500_903054813f734780990613fe700a6be3
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_39af579b48a14134b05a5f914b0c9827
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_eadf22a6a8fc44979d41d1ff44504736_152598200a174e9dbc3545243e14f49c
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_bcafccc8e9554a52894188e016032b2b
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_14838a00d3354d9aae150095f8031fde_2ee7df4c66694a908ce47262a8530c74
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_9462088306e641e7a59ff49b56618b50
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_afb3b2aee6c545f88d9e48809e6a8cf6_0be83c45740e4b10971b1cfb21c070d0
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_0e01080d62f849a89c18f67afb6dea90
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_572fd9b1d672449ca647753067f1874e_fee676ce4ff84c5489a8ddaf9abf7d70
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_491b0017e9564e509761f45d9e3de52c
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_815364e9dacd4691bab4ef25f0996e32_33eb67791e244d40812a7cc5e78c52c8
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_f4ee4507a65344cb898f2d8421b4ec94
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_f4909257fc6d4f819c7f67420fbf1366_7757ca314058463fb68e39acb0580f1d
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_313c3c96a19d4e8cb326d367042fc618
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_f9b5d7e187ca4b7f90260e0ab96dbeed_78800ba685774a61941f7e0ab26bc650
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_e41a40c7bfb147e3ba961f1ef16c4a6b
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_dd0a764176dd4f5099b981eef743a8b8_1110410e9e3340d3affbac8d107aeab4
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_781c9e5ccfd848f0a5ccaa556ed9aea0
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_ac801b062a844fd8b0f689b2d8a05045_4b272ed54c674076bb4de2c1fdf07c9e
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_71b6756b7f754a928f5704b6365d5e41
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_5306642e58dd461e9f241a34b01dd4ae_4fd04539dc064e8b94bd72d221c4144b
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_286befd654e1451bac0f21499430a533
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_26f0ef4022a3471082414e8cad35c6e6_fb100d48ee2f4d809539d6c7c4a417e1
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_6bb380f5327c40a799f920706bb9a018
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_39ee702fcd9a496cb6ad754a7c6d78d7_77b6f41326cb47889ed345b967b438f9
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_78954ee3807c4c6589634eb79237ae72
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_d4b79e7d1dde498bad0ac6aa0a6d37ba_c952cf8e87fa433da030743112abe2b6
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_d409eb49aff94815a5ec6de169067e87
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_4ff7361657e24de485524d263e568490_56900e2d054e418fa9106c0df8c74c6d
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_cb231cdc78fc4253927f25526a100317
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_c371efb3b04b4d77ad7554e2eb106eae_cab43f6370ab439ba3a3742b62a9ff85
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_2259d92d11904e599e3c9ce6775e6314
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_ed9921f8ddf145d5b459bd884a67d888_f776f6d203e5439e8a38c218ff8b8acd
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_33859435641e43d59d6527c9094d0a18
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_debb74257f0945969c198652deda180b_a20b09bf5de94db9a9185de946ef949c
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_c8672992c17a4626ba065331c70dba33
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_d9f33afb6f53496e8f579e5d2739862b_609a301c68fe4ea1bff32e73f40107c4
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_d7c0af0cf0c74d06be2c603b267de8dd
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_8996b5092741447a88d25909d755657d_bcd178830f3a4a3d8504a2199e96204f
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_4c4224a72e084c16803b883b1907334b
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_a63da70259784cb18c5f90145a676a10_20a8aa7a87b44a4fb936e49ba2d142ba
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_db4a3c1b71fd44cc8a7154305038e4e4
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_6f2eb1bd7e644863bdacc5df88c2c79b_e5e53ae8f7c8474c8974479a8f3d9c9a
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_a3b7f64e3b604e638890cb43d4ffc8c9
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_59b9d56ef39a46cdbd437cf1888ddf65_c430028483bf465093f2c5680bc841ac
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_f454c12cb3a14f2593fd34d96c9950f8
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_f9b3e89144c647a4871f274ee8f8fdd4_58169afab8284f12b8bc4076034e1de9
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_9a9c85d86d5f452d987e2ad1263464c1
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_ccffd0b000134576b66e6eb82976174f_4a54beeae64347a4af5e4277058026e6
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_c2909c7be3e54dc997da580c74020355
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_923b688c8bb343d686b8968ee91820bc_9911eb2966984138954a4b9148b6a82e
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_cccc96a8ec704ac7a42c3e02407d8134
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_8db9f61883e54c39a897e54657d286e7_a543359ccf81427492807a478ce64810
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_c8005755595f413990e9e7a1ccf404ae
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_39d6dca343f34aa28fda89b2d26a94c7_6be4cae84b3d457cb408bc0bd4dd994f
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_d9577b9669e54899a3f1ae60d6798960
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_1b7b9a3ee72c4ef08e84116422eec6ad_a195a78f6f8247eeba52a32d41e2df8c
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_d77a3968f48346fdadf3189d2df0b613
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:29,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\ASUS\AppData\Local\Temp\joblib_memmapping_folder_11688_3ecc2fedf41544ca9fe94cbfe8d82036_7419fbee31e14b90a491266cf9050d72
  warnings.warn("Failed to delete temporary folder: {}"

2023-05-16 13:38:39,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:38:39,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:38:39,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:38:39,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:38:40,920:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-16 13:38:41,183:INFO:PyCaret ClassificationExperiment
2023-05-16 13:38:41,183:INFO:Logging name: clf-default-name
2023-05-16 13:38:41,183:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:38:41,183:INFO:version 3.0.1
2023-05-16 13:38:41,183:INFO:Initializing setup()
2023-05-16 13:38:41,183:INFO:self.USI: 27fb
2023-05-16 13:38:41,183:INFO:self._variable_keys: {'log_plots_param', 'html_param', 'exp_name_log', 'y_test', 'y_train', 'exp_id', 'y', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'pipeline', 'is_multiclass', 'X', '_available_plots', 'fold_groups_param', 'data', 'fix_imbalance', 'seed', '_ml_usecase', 'idx', 'fold_generator', 'target_param', 'gpu_param', 'X_train', 'USI', 'fold_shuffle_param', 'logging_param', 'X_test'}
2023-05-16 13:38:41,183:INFO:Checking environment
2023-05-16 13:38:41,183:INFO:python_version: 3.9.13
2023-05-16 13:38:41,183:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:38:41,183:INFO:machine: AMD64
2023-05-16 13:38:41,183:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:38:41,183:INFO:Memory: svmem(total=7968444416, available=2305978368, percent=71.1, used=5662466048, free=2305978368)
2023-05-16 13:38:41,183:INFO:Physical Core: 6
2023-05-16 13:38:41,183:INFO:Logical Core: 12
2023-05-16 13:38:41,183:INFO:Checking libraries
2023-05-16 13:38:41,183:INFO:System:
2023-05-16 13:38:41,183:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:38:41,183:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:38:41,183:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:38:41,183:INFO:PyCaret required dependencies:
2023-05-16 13:38:41,183:INFO:                 pip: 22.2.2
2023-05-16 13:38:41,183:INFO:          setuptools: 63.4.1
2023-05-16 13:38:41,183:INFO:             pycaret: 3.0.1
2023-05-16 13:38:41,183:INFO:             IPython: 7.31.1
2023-05-16 13:38:41,183:INFO:          ipywidgets: 7.6.5
2023-05-16 13:38:41,183:INFO:                tqdm: 4.64.1
2023-05-16 13:38:41,183:INFO:               numpy: 1.21.6
2023-05-16 13:38:41,183:INFO:              pandas: 1.4.4
2023-05-16 13:38:41,183:INFO:              jinja2: 2.11.3
2023-05-16 13:38:41,183:INFO:               scipy: 1.9.1
2023-05-16 13:38:41,183:INFO:              joblib: 1.2.0
2023-05-16 13:38:41,183:INFO:             sklearn: 1.0.2
2023-05-16 13:38:41,183:INFO:                pyod: 1.0.9
2023-05-16 13:38:41,183:INFO:            imblearn: 0.10.1
2023-05-16 13:38:41,183:INFO:   category_encoders: 2.6.1
2023-05-16 13:38:41,183:INFO:            lightgbm: 3.3.5
2023-05-16 13:38:41,183:INFO:               numba: 0.55.1
2023-05-16 13:38:41,183:INFO:            requests: 2.28.1
2023-05-16 13:38:41,183:INFO:          matplotlib: 3.5.2
2023-05-16 13:38:41,183:INFO:          scikitplot: 0.3.7
2023-05-16 13:38:41,183:INFO:         yellowbrick: 1.5
2023-05-16 13:38:41,183:INFO:              plotly: 5.9.0
2023-05-16 13:38:41,183:INFO:             kaleido: 0.2.1
2023-05-16 13:38:41,183:INFO:         statsmodels: 0.13.2
2023-05-16 13:38:41,183:INFO:              sktime: 0.17.0
2023-05-16 13:38:41,183:INFO:               tbats: 1.1.3
2023-05-16 13:38:41,183:INFO:            pmdarima: 2.0.3
2023-05-16 13:38:41,183:INFO:              psutil: 5.9.0
2023-05-16 13:38:41,183:INFO:PyCaret optional dependencies:
2023-05-16 13:38:41,198:INFO:                shap: Not installed
2023-05-16 13:38:41,198:INFO:           interpret: Not installed
2023-05-16 13:38:41,198:INFO:                umap: Not installed
2023-05-16 13:38:41,198:INFO:    pandas_profiling: Not installed
2023-05-16 13:38:41,198:INFO:  explainerdashboard: Not installed
2023-05-16 13:38:41,198:INFO:             autoviz: Not installed
2023-05-16 13:38:41,198:INFO:           fairlearn: Not installed
2023-05-16 13:38:41,198:INFO:             xgboost: Not installed
2023-05-16 13:38:41,198:INFO:            catboost: Not installed
2023-05-16 13:38:41,198:INFO:              kmodes: Not installed
2023-05-16 13:38:41,198:INFO:             mlxtend: Not installed
2023-05-16 13:38:41,198:INFO:       statsforecast: Not installed
2023-05-16 13:38:41,198:INFO:        tune_sklearn: Not installed
2023-05-16 13:38:41,198:INFO:                 ray: Not installed
2023-05-16 13:38:41,198:INFO:            hyperopt: Not installed
2023-05-16 13:38:41,198:INFO:              optuna: Not installed
2023-05-16 13:38:41,198:INFO:               skopt: Not installed
2023-05-16 13:38:41,198:INFO:              mlflow: Not installed
2023-05-16 13:38:41,198:INFO:              gradio: Not installed
2023-05-16 13:38:41,198:INFO:             fastapi: Not installed
2023-05-16 13:38:41,198:INFO:             uvicorn: Not installed
2023-05-16 13:38:41,198:INFO:              m2cgen: Not installed
2023-05-16 13:38:41,198:INFO:           evidently: Not installed
2023-05-16 13:38:41,198:INFO:               fugue: Not installed
2023-05-16 13:38:41,198:INFO:           streamlit: 1.20.0
2023-05-16 13:38:41,198:INFO:             prophet: Not installed
2023-05-16 13:38:41,198:INFO:None
2023-05-16 13:38:41,198:INFO:Set up data.
2023-05-16 13:38:41,198:INFO:Set up train/test split.
2023-05-16 13:38:41,198:INFO:Set up index.
2023-05-16 13:38:41,198:INFO:Set up folding strategy.
2023-05-16 13:38:41,198:INFO:Assigning column types.
2023-05-16 13:38:41,214:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:38:41,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:38:41,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:38:41,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:38:41,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:38:41,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,415:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:38:41,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:38:41,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,551:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:38:41,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,584:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:38:41,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,750:INFO:Preparing preprocessing pipeline...
2023-05-16 13:38:41,752:INFO:Set up simple imputation.
2023-05-16 13:38:41,753:INFO:Set up column name cleaning.
2023-05-16 13:38:41,780:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:38:41,786:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:38:41,786:INFO:Creating final display dataframe.
2023-05-16 13:38:41,858:INFO:Setup _display_container:                     Description             Value
0                    Session id              8144
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              27fb
2023-05-16 13:38:41,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:41,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:42,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:42,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:38:42,026:INFO:setup() successfully completed in 0.89s...............
2023-05-16 13:38:42,036:INFO:Initializing compare_models()
2023-05-16 13:38:42,036:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:38:42,037:INFO:Checking exceptions
2023-05-16 13:38:42,041:INFO:Preparing display monitor
2023-05-16 13:38:42,084:INFO:Initializing Logistic Regression
2023-05-16 13:38:42,085:INFO:Total runtime is 0.0 minutes
2023-05-16 13:38:42,089:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:42,089:INFO:Initializing create_model()
2023-05-16 13:38:42,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:42,090:INFO:Checking exceptions
2023-05-16 13:38:42,090:INFO:Importing libraries
2023-05-16 13:38:42,090:INFO:Copying training dataset
2023-05-16 13:38:42,095:INFO:Defining folds
2023-05-16 13:38:42,095:INFO:Declaring metric variables
2023-05-16 13:38:42,098:INFO:Importing untrained model
2023-05-16 13:38:42,102:INFO:Logistic Regression Imported successfully
2023-05-16 13:38:42,111:INFO:Starting cross validation
2023-05-16 13:38:42,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:38:51,630:INFO:Calculating mean and std
2023-05-16 13:38:51,630:INFO:Creating metrics dataframe
2023-05-16 13:38:51,711:INFO:Uploading results into container
2023-05-16 13:38:51,711:INFO:Uploading model into container now
2023-05-16 13:38:51,711:INFO:_master_model_container: 1
2023-05-16 13:38:51,711:INFO:_display_container: 2
2023-05-16 13:38:51,711:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8144, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:38:51,711:INFO:create_model() successfully completed......................................
2023-05-16 13:38:51,789:INFO:SubProcess create_model() end ==================================
2023-05-16 13:38:51,789:INFO:Creating metrics dataframe
2023-05-16 13:38:51,805:INFO:Initializing K Neighbors Classifier
2023-05-16 13:38:51,805:INFO:Total runtime is 0.16201172669728597 minutes
2023-05-16 13:38:51,805:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:51,805:INFO:Initializing create_model()
2023-05-16 13:38:51,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:51,805:INFO:Checking exceptions
2023-05-16 13:38:51,805:INFO:Importing libraries
2023-05-16 13:38:51,805:INFO:Copying training dataset
2023-05-16 13:38:51,814:INFO:Defining folds
2023-05-16 13:38:51,814:INFO:Declaring metric variables
2023-05-16 13:38:51,817:INFO:Importing untrained model
2023-05-16 13:38:51,817:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:38:51,817:INFO:Starting cross validation
2023-05-16 13:38:51,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:38:51,931:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:51,931:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:51,947:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:51,962:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:51,962:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:51,978:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:51,998:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:51,999:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:54,683:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:54,683:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:38:54,761:INFO:Calculating mean and std
2023-05-16 13:38:54,761:INFO:Creating metrics dataframe
2023-05-16 13:38:54,848:INFO:Uploading results into container
2023-05-16 13:38:54,848:INFO:Uploading model into container now
2023-05-16 13:38:54,848:INFO:_master_model_container: 2
2023-05-16 13:38:54,848:INFO:_display_container: 2
2023-05-16 13:38:54,848:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:38:54,848:INFO:create_model() successfully completed......................................
2023-05-16 13:38:54,941:INFO:SubProcess create_model() end ==================================
2023-05-16 13:38:54,941:INFO:Creating metrics dataframe
2023-05-16 13:38:54,941:INFO:Initializing Naive Bayes
2023-05-16 13:38:54,941:INFO:Total runtime is 0.21428271532058715 minutes
2023-05-16 13:38:54,957:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:54,957:INFO:Initializing create_model()
2023-05-16 13:38:54,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:54,958:INFO:Checking exceptions
2023-05-16 13:38:54,958:INFO:Importing libraries
2023-05-16 13:38:54,958:INFO:Copying training dataset
2023-05-16 13:38:54,963:INFO:Defining folds
2023-05-16 13:38:54,963:INFO:Declaring metric variables
2023-05-16 13:38:54,963:INFO:Importing untrained model
2023-05-16 13:38:54,963:INFO:Naive Bayes Imported successfully
2023-05-16 13:38:54,978:INFO:Starting cross validation
2023-05-16 13:38:54,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:38:55,559:INFO:Calculating mean and std
2023-05-16 13:38:55,559:INFO:Creating metrics dataframe
2023-05-16 13:38:55,632:INFO:Uploading results into container
2023-05-16 13:38:55,632:INFO:Uploading model into container now
2023-05-16 13:38:55,632:INFO:_master_model_container: 3
2023-05-16 13:38:55,632:INFO:_display_container: 2
2023-05-16 13:38:55,632:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:38:55,632:INFO:create_model() successfully completed......................................
2023-05-16 13:38:55,727:INFO:SubProcess create_model() end ==================================
2023-05-16 13:38:55,727:INFO:Creating metrics dataframe
2023-05-16 13:38:55,727:INFO:Initializing Decision Tree Classifier
2023-05-16 13:38:55,727:INFO:Total runtime is 0.22737700939178465 minutes
2023-05-16 13:38:55,740:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:55,741:INFO:Initializing create_model()
2023-05-16 13:38:55,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:55,741:INFO:Checking exceptions
2023-05-16 13:38:55,741:INFO:Importing libraries
2023-05-16 13:38:55,741:INFO:Copying training dataset
2023-05-16 13:38:55,741:INFO:Defining folds
2023-05-16 13:38:55,741:INFO:Declaring metric variables
2023-05-16 13:38:55,741:INFO:Importing untrained model
2023-05-16 13:38:55,741:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:38:55,757:INFO:Starting cross validation
2023-05-16 13:38:55,757:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:38:56,333:INFO:Calculating mean and std
2023-05-16 13:38:56,333:INFO:Creating metrics dataframe
2023-05-16 13:38:56,410:INFO:Uploading results into container
2023-05-16 13:38:56,410:INFO:Uploading model into container now
2023-05-16 13:38:56,410:INFO:_master_model_container: 4
2023-05-16 13:38:56,410:INFO:_display_container: 2
2023-05-16 13:38:56,410:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8144, splitter='best')
2023-05-16 13:38:56,410:INFO:create_model() successfully completed......................................
2023-05-16 13:38:56,488:INFO:SubProcess create_model() end ==================================
2023-05-16 13:38:56,488:INFO:Creating metrics dataframe
2023-05-16 13:38:56,504:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:38:56,504:INFO:Total runtime is 0.24032277663548784 minutes
2023-05-16 13:38:56,504:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:56,504:INFO:Initializing create_model()
2023-05-16 13:38:56,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:56,504:INFO:Checking exceptions
2023-05-16 13:38:56,504:INFO:Importing libraries
2023-05-16 13:38:56,504:INFO:Copying training dataset
2023-05-16 13:38:56,518:INFO:Defining folds
2023-05-16 13:38:56,518:INFO:Declaring metric variables
2023-05-16 13:38:56,518:INFO:Importing untrained model
2023-05-16 13:38:56,518:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:38:56,534:INFO:Starting cross validation
2023-05-16 13:38:56,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:38:56,614:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,614:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,629:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,645:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,645:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,645:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,660:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,660:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,676:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:56,676:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:38:57,081:INFO:Calculating mean and std
2023-05-16 13:38:57,081:INFO:Creating metrics dataframe
2023-05-16 13:38:57,166:INFO:Uploading results into container
2023-05-16 13:38:57,166:INFO:Uploading model into container now
2023-05-16 13:38:57,166:INFO:_master_model_container: 5
2023-05-16 13:38:57,166:INFO:_display_container: 2
2023-05-16 13:38:57,166:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8144, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:38:57,166:INFO:create_model() successfully completed......................................
2023-05-16 13:38:57,260:INFO:SubProcess create_model() end ==================================
2023-05-16 13:38:57,260:INFO:Creating metrics dataframe
2023-05-16 13:38:57,260:INFO:Initializing Ridge Classifier
2023-05-16 13:38:57,260:INFO:Total runtime is 0.2529204328854878 minutes
2023-05-16 13:38:57,278:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:57,278:INFO:Initializing create_model()
2023-05-16 13:38:57,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:57,278:INFO:Checking exceptions
2023-05-16 13:38:57,279:INFO:Importing libraries
2023-05-16 13:38:57,279:INFO:Copying training dataset
2023-05-16 13:38:57,282:INFO:Defining folds
2023-05-16 13:38:57,282:INFO:Declaring metric variables
2023-05-16 13:38:57,282:INFO:Importing untrained model
2023-05-16 13:38:57,282:INFO:Ridge Classifier Imported successfully
2023-05-16 13:38:57,298:INFO:Starting cross validation
2023-05-16 13:38:57,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:38:57,371:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,371:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,371:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,387:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,387:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,402:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,418:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,434:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,434:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,450:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:38:57,853:INFO:Calculating mean and std
2023-05-16 13:38:57,853:INFO:Creating metrics dataframe
2023-05-16 13:38:57,937:INFO:Uploading results into container
2023-05-16 13:38:57,937:INFO:Uploading model into container now
2023-05-16 13:38:57,937:INFO:_master_model_container: 6
2023-05-16 13:38:57,937:INFO:_display_container: 2
2023-05-16 13:38:57,937:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8144, solver='auto', tol=0.001)
2023-05-16 13:38:57,937:INFO:create_model() successfully completed......................................
2023-05-16 13:38:58,025:INFO:SubProcess create_model() end ==================================
2023-05-16 13:38:58,025:INFO:Creating metrics dataframe
2023-05-16 13:38:58,034:INFO:Initializing Random Forest Classifier
2023-05-16 13:38:58,034:INFO:Total runtime is 0.2658289114634195 minutes
2023-05-16 13:38:58,038:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:58,039:INFO:Initializing create_model()
2023-05-16 13:38:58,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:58,039:INFO:Checking exceptions
2023-05-16 13:38:58,039:INFO:Importing libraries
2023-05-16 13:38:58,039:INFO:Copying training dataset
2023-05-16 13:38:58,043:INFO:Defining folds
2023-05-16 13:38:58,043:INFO:Declaring metric variables
2023-05-16 13:38:58,047:INFO:Importing untrained model
2023-05-16 13:38:58,047:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:38:58,060:INFO:Starting cross validation
2023-05-16 13:38:58,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:38:59,346:INFO:Calculating mean and std
2023-05-16 13:38:59,346:INFO:Creating metrics dataframe
2023-05-16 13:38:59,432:INFO:Uploading results into container
2023-05-16 13:38:59,432:INFO:Uploading model into container now
2023-05-16 13:38:59,432:INFO:_master_model_container: 7
2023-05-16 13:38:59,432:INFO:_display_container: 2
2023-05-16 13:38:59,432:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8144, verbose=0, warm_start=False)
2023-05-16 13:38:59,432:INFO:create_model() successfully completed......................................
2023-05-16 13:38:59,526:INFO:SubProcess create_model() end ==================================
2023-05-16 13:38:59,526:INFO:Creating metrics dataframe
2023-05-16 13:38:59,526:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:38:59,526:INFO:Total runtime is 0.2907013297080993 minutes
2023-05-16 13:38:59,540:INFO:SubProcess create_model() called ==================================
2023-05-16 13:38:59,541:INFO:Initializing create_model()
2023-05-16 13:38:59,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:38:59,541:INFO:Checking exceptions
2023-05-16 13:38:59,541:INFO:Importing libraries
2023-05-16 13:38:59,541:INFO:Copying training dataset
2023-05-16 13:38:59,545:INFO:Defining folds
2023-05-16 13:38:59,546:INFO:Declaring metric variables
2023-05-16 13:38:59,546:INFO:Importing untrained model
2023-05-16 13:38:59,546:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:38:59,563:INFO:Starting cross validation
2023-05-16 13:38:59,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:00,174:INFO:Calculating mean and std
2023-05-16 13:39:00,174:INFO:Creating metrics dataframe
2023-05-16 13:39:00,258:INFO:Uploading results into container
2023-05-16 13:39:00,258:INFO:Uploading model into container now
2023-05-16 13:39:00,258:INFO:_master_model_container: 8
2023-05-16 13:39:00,258:INFO:_display_container: 2
2023-05-16 13:39:00,258:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:39:00,258:INFO:create_model() successfully completed......................................
2023-05-16 13:39:00,369:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:00,369:INFO:Creating metrics dataframe
2023-05-16 13:39:00,385:INFO:Initializing Ada Boost Classifier
2023-05-16 13:39:00,385:INFO:Total runtime is 0.3050038894017537 minutes
2023-05-16 13:39:00,392:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:00,392:INFO:Initializing create_model()
2023-05-16 13:39:00,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:00,392:INFO:Checking exceptions
2023-05-16 13:39:00,392:INFO:Importing libraries
2023-05-16 13:39:00,392:INFO:Copying training dataset
2023-05-16 13:39:00,394:INFO:Defining folds
2023-05-16 13:39:00,394:INFO:Declaring metric variables
2023-05-16 13:39:00,394:INFO:Importing untrained model
2023-05-16 13:39:00,394:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:39:00,416:INFO:Starting cross validation
2023-05-16 13:39:00,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:01,307:INFO:Calculating mean and std
2023-05-16 13:39:01,307:INFO:Creating metrics dataframe
2023-05-16 13:39:01,392:INFO:Uploading results into container
2023-05-16 13:39:01,392:INFO:Uploading model into container now
2023-05-16 13:39:01,392:INFO:_master_model_container: 9
2023-05-16 13:39:01,392:INFO:_display_container: 2
2023-05-16 13:39:01,392:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8144)
2023-05-16 13:39:01,392:INFO:create_model() successfully completed......................................
2023-05-16 13:39:01,501:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:01,501:INFO:Creating metrics dataframe
2023-05-16 13:39:01,513:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:39:01,513:INFO:Total runtime is 0.32381529013315835 minutes
2023-05-16 13:39:01,517:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:01,517:INFO:Initializing create_model()
2023-05-16 13:39:01,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:01,517:INFO:Checking exceptions
2023-05-16 13:39:01,519:INFO:Importing libraries
2023-05-16 13:39:01,519:INFO:Copying training dataset
2023-05-16 13:39:01,523:INFO:Defining folds
2023-05-16 13:39:01,524:INFO:Declaring metric variables
2023-05-16 13:39:01,529:INFO:Importing untrained model
2023-05-16 13:39:01,535:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:39:01,544:INFO:Starting cross validation
2023-05-16 13:39:01,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:02,567:INFO:Calculating mean and std
2023-05-16 13:39:02,580:INFO:Creating metrics dataframe
2023-05-16 13:39:02,664:INFO:Uploading results into container
2023-05-16 13:39:02,664:INFO:Uploading model into container now
2023-05-16 13:39:02,664:INFO:_master_model_container: 10
2023-05-16 13:39:02,664:INFO:_display_container: 2
2023-05-16 13:39:02,664:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8144, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:39:02,664:INFO:create_model() successfully completed......................................
2023-05-16 13:39:02,759:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:02,759:INFO:Creating metrics dataframe
2023-05-16 13:39:02,759:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:39:02,759:INFO:Total runtime is 0.344569718837738 minutes
2023-05-16 13:39:02,774:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:02,774:INFO:Initializing create_model()
2023-05-16 13:39:02,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:02,774:INFO:Checking exceptions
2023-05-16 13:39:02,774:INFO:Importing libraries
2023-05-16 13:39:02,774:INFO:Copying training dataset
2023-05-16 13:39:02,775:INFO:Defining folds
2023-05-16 13:39:02,775:INFO:Declaring metric variables
2023-05-16 13:39:02,775:INFO:Importing untrained model
2023-05-16 13:39:02,775:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:39:02,791:INFO:Starting cross validation
2023-05-16 13:39:02,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:03,494:INFO:Calculating mean and std
2023-05-16 13:39:03,494:INFO:Creating metrics dataframe
2023-05-16 13:39:03,593:INFO:Uploading results into container
2023-05-16 13:39:03,593:INFO:Uploading model into container now
2023-05-16 13:39:03,593:INFO:_master_model_container: 11
2023-05-16 13:39:03,593:INFO:_display_container: 2
2023-05-16 13:39:03,593:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:39:03,593:INFO:create_model() successfully completed......................................
2023-05-16 13:39:03,688:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:03,688:INFO:Creating metrics dataframe
2023-05-16 13:39:03,688:INFO:Initializing Extra Trees Classifier
2023-05-16 13:39:03,688:INFO:Total runtime is 0.36005473136901855 minutes
2023-05-16 13:39:03,688:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:03,688:INFO:Initializing create_model()
2023-05-16 13:39:03,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:03,688:INFO:Checking exceptions
2023-05-16 13:39:03,688:INFO:Importing libraries
2023-05-16 13:39:03,688:INFO:Copying training dataset
2023-05-16 13:39:03,706:INFO:Defining folds
2023-05-16 13:39:03,706:INFO:Declaring metric variables
2023-05-16 13:39:03,706:INFO:Importing untrained model
2023-05-16 13:39:03,706:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:39:03,722:INFO:Starting cross validation
2023-05-16 13:39:03,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:05,071:INFO:Calculating mean and std
2023-05-16 13:39:05,071:INFO:Creating metrics dataframe
2023-05-16 13:39:05,180:INFO:Uploading results into container
2023-05-16 13:39:05,180:INFO:Uploading model into container now
2023-05-16 13:39:05,180:INFO:_master_model_container: 12
2023-05-16 13:39:05,180:INFO:_display_container: 2
2023-05-16 13:39:05,180:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8144, verbose=0, warm_start=False)
2023-05-16 13:39:05,180:INFO:create_model() successfully completed......................................
2023-05-16 13:39:05,257:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:05,257:INFO:Creating metrics dataframe
2023-05-16 13:39:05,277:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:39:05,277:INFO:Total runtime is 0.38655137618382773 minutes
2023-05-16 13:39:05,284:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:05,285:INFO:Initializing create_model()
2023-05-16 13:39:05,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:05,285:INFO:Checking exceptions
2023-05-16 13:39:05,285:INFO:Importing libraries
2023-05-16 13:39:05,285:INFO:Copying training dataset
2023-05-16 13:39:05,290:INFO:Defining folds
2023-05-16 13:39:05,290:INFO:Declaring metric variables
2023-05-16 13:39:05,295:INFO:Importing untrained model
2023-05-16 13:39:05,300:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:39:05,308:INFO:Starting cross validation
2023-05-16 13:39:05,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:07,664:INFO:Calculating mean and std
2023-05-16 13:39:07,664:INFO:Creating metrics dataframe
2023-05-16 13:39:07,762:INFO:Uploading results into container
2023-05-16 13:39:07,762:INFO:Uploading model into container now
2023-05-16 13:39:07,762:INFO:_master_model_container: 13
2023-05-16 13:39:07,762:INFO:_display_container: 2
2023-05-16 13:39:07,762:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8144, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:39:07,762:INFO:create_model() successfully completed......................................
2023-05-16 13:39:07,856:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:07,856:INFO:Creating metrics dataframe
2023-05-16 13:39:07,856:INFO:Initializing Dummy Classifier
2023-05-16 13:39:07,856:INFO:Total runtime is 0.429525629679362 minutes
2023-05-16 13:39:07,873:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:07,874:INFO:Initializing create_model()
2023-05-16 13:39:07,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1103FA60>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:07,874:INFO:Checking exceptions
2023-05-16 13:39:07,874:INFO:Importing libraries
2023-05-16 13:39:07,874:INFO:Copying training dataset
2023-05-16 13:39:07,878:INFO:Defining folds
2023-05-16 13:39:07,879:INFO:Declaring metric variables
2023-05-16 13:39:07,879:INFO:Importing untrained model
2023-05-16 13:39:07,879:INFO:Dummy Classifier Imported successfully
2023-05-16 13:39:07,895:INFO:Starting cross validation
2023-05-16 13:39:07,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:07,982:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:07,982:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,027:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,027:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,027:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,027:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,042:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,042:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,058:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,058:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:08,578:INFO:Calculating mean and std
2023-05-16 13:39:08,578:INFO:Creating metrics dataframe
2023-05-16 13:39:08,678:INFO:Uploading results into container
2023-05-16 13:39:08,678:INFO:Uploading model into container now
2023-05-16 13:39:08,678:INFO:_master_model_container: 14
2023-05-16 13:39:08,678:INFO:_display_container: 2
2023-05-16 13:39:08,678:INFO:DummyClassifier(constant=None, random_state=8144, strategy='prior')
2023-05-16 13:39:08,678:INFO:create_model() successfully completed......................................
2023-05-16 13:39:08,764:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:08,764:INFO:Creating metrics dataframe
2023-05-16 13:39:08,795:INFO:Initializing create_model()
2023-05-16 13:39:08,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F92DD00>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:08,796:INFO:Checking exceptions
2023-05-16 13:39:08,797:INFO:Importing libraries
2023-05-16 13:39:08,798:INFO:Copying training dataset
2023-05-16 13:39:08,801:INFO:Defining folds
2023-05-16 13:39:08,801:INFO:Declaring metric variables
2023-05-16 13:39:08,801:INFO:Importing untrained model
2023-05-16 13:39:08,801:INFO:Declaring custom model
2023-05-16 13:39:08,801:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:39:08,802:INFO:Cross validation set to False
2023-05-16 13:39:08,802:INFO:Fitting Model
2023-05-16 13:39:08,899:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:39:08,899:INFO:create_model() successfully completed......................................
2023-05-16 13:39:09,021:INFO:_master_model_container: 14
2023-05-16 13:39:09,022:INFO:_display_container: 2
2023-05-16 13:39:09,022:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:39:09,022:INFO:compare_models() successfully completed......................................
2023-05-16 13:39:09,304:INFO:PyCaret ClassificationExperiment
2023-05-16 13:39:09,304:INFO:Logging name: clf-default-name
2023-05-16 13:39:09,304:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:39:09,304:INFO:version 3.0.1
2023-05-16 13:39:09,304:INFO:Initializing setup()
2023-05-16 13:39:09,304:INFO:self.USI: a61e
2023-05-16 13:39:09,304:INFO:self._variable_keys: {'log_plots_param', 'html_param', 'exp_name_log', 'y_test', 'y_train', 'exp_id', 'y', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'pipeline', 'is_multiclass', 'X', '_available_plots', 'fold_groups_param', 'data', 'fix_imbalance', 'seed', '_ml_usecase', 'idx', 'fold_generator', 'target_param', 'gpu_param', 'X_train', 'USI', 'fold_shuffle_param', 'logging_param', 'X_test'}
2023-05-16 13:39:09,304:INFO:Checking environment
2023-05-16 13:39:09,304:INFO:python_version: 3.9.13
2023-05-16 13:39:09,304:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:39:09,304:INFO:machine: AMD64
2023-05-16 13:39:09,304:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:39:09,304:INFO:Memory: svmem(total=7968444416, available=678506496, percent=91.5, used=7289937920, free=678506496)
2023-05-16 13:39:09,304:INFO:Physical Core: 6
2023-05-16 13:39:09,304:INFO:Logical Core: 12
2023-05-16 13:39:09,304:INFO:Checking libraries
2023-05-16 13:39:09,304:INFO:System:
2023-05-16 13:39:09,304:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:39:09,304:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:39:09,304:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:39:09,304:INFO:PyCaret required dependencies:
2023-05-16 13:39:09,304:INFO:                 pip: 22.2.2
2023-05-16 13:39:09,304:INFO:          setuptools: 63.4.1
2023-05-16 13:39:09,304:INFO:             pycaret: 3.0.1
2023-05-16 13:39:09,304:INFO:             IPython: 7.31.1
2023-05-16 13:39:09,304:INFO:          ipywidgets: 7.6.5
2023-05-16 13:39:09,304:INFO:                tqdm: 4.64.1
2023-05-16 13:39:09,304:INFO:               numpy: 1.21.6
2023-05-16 13:39:09,304:INFO:              pandas: 1.4.4
2023-05-16 13:39:09,304:INFO:              jinja2: 2.11.3
2023-05-16 13:39:09,304:INFO:               scipy: 1.9.1
2023-05-16 13:39:09,304:INFO:              joblib: 1.2.0
2023-05-16 13:39:09,304:INFO:             sklearn: 1.0.2
2023-05-16 13:39:09,304:INFO:                pyod: 1.0.9
2023-05-16 13:39:09,304:INFO:            imblearn: 0.10.1
2023-05-16 13:39:09,304:INFO:   category_encoders: 2.6.1
2023-05-16 13:39:09,304:INFO:            lightgbm: 3.3.5
2023-05-16 13:39:09,304:INFO:               numba: 0.55.1
2023-05-16 13:39:09,304:INFO:            requests: 2.28.1
2023-05-16 13:39:09,304:INFO:          matplotlib: 3.5.2
2023-05-16 13:39:09,304:INFO:          scikitplot: 0.3.7
2023-05-16 13:39:09,304:INFO:         yellowbrick: 1.5
2023-05-16 13:39:09,304:INFO:              plotly: 5.9.0
2023-05-16 13:39:09,304:INFO:             kaleido: 0.2.1
2023-05-16 13:39:09,304:INFO:         statsmodels: 0.13.2
2023-05-16 13:39:09,304:INFO:              sktime: 0.17.0
2023-05-16 13:39:09,304:INFO:               tbats: 1.1.3
2023-05-16 13:39:09,304:INFO:            pmdarima: 2.0.3
2023-05-16 13:39:09,304:INFO:              psutil: 5.9.0
2023-05-16 13:39:09,304:INFO:PyCaret optional dependencies:
2023-05-16 13:39:09,304:INFO:                shap: Not installed
2023-05-16 13:39:09,304:INFO:           interpret: Not installed
2023-05-16 13:39:09,304:INFO:                umap: Not installed
2023-05-16 13:39:09,304:INFO:    pandas_profiling: Not installed
2023-05-16 13:39:09,304:INFO:  explainerdashboard: Not installed
2023-05-16 13:39:09,304:INFO:             autoviz: Not installed
2023-05-16 13:39:09,304:INFO:           fairlearn: Not installed
2023-05-16 13:39:09,304:INFO:             xgboost: Not installed
2023-05-16 13:39:09,304:INFO:            catboost: Not installed
2023-05-16 13:39:09,304:INFO:              kmodes: Not installed
2023-05-16 13:39:09,304:INFO:             mlxtend: Not installed
2023-05-16 13:39:09,304:INFO:       statsforecast: Not installed
2023-05-16 13:39:09,304:INFO:        tune_sklearn: Not installed
2023-05-16 13:39:09,304:INFO:                 ray: Not installed
2023-05-16 13:39:09,304:INFO:            hyperopt: Not installed
2023-05-16 13:39:09,304:INFO:              optuna: Not installed
2023-05-16 13:39:09,304:INFO:               skopt: Not installed
2023-05-16 13:39:09,304:INFO:              mlflow: Not installed
2023-05-16 13:39:09,304:INFO:              gradio: Not installed
2023-05-16 13:39:09,304:INFO:             fastapi: Not installed
2023-05-16 13:39:09,304:INFO:             uvicorn: Not installed
2023-05-16 13:39:09,304:INFO:              m2cgen: Not installed
2023-05-16 13:39:09,304:INFO:           evidently: Not installed
2023-05-16 13:39:09,304:INFO:               fugue: Not installed
2023-05-16 13:39:09,304:INFO:           streamlit: 1.20.0
2023-05-16 13:39:09,304:INFO:             prophet: Not installed
2023-05-16 13:39:09,304:INFO:None
2023-05-16 13:39:09,304:INFO:Set up data.
2023-05-16 13:39:09,311:INFO:Set up train/test split.
2023-05-16 13:39:09,311:INFO:Set up index.
2023-05-16 13:39:09,311:INFO:Set up folding strategy.
2023-05-16 13:39:09,311:INFO:Assigning column types.
2023-05-16 13:39:09,311:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:39:09,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:39:09,367:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:09,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:39:09,446:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:09,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,477:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:39:09,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:09,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,595:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:09,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,634:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:39:09,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,789:INFO:Preparing preprocessing pipeline...
2023-05-16 13:39:09,790:INFO:Set up simple imputation.
2023-05-16 13:39:09,791:INFO:Set up column name cleaning.
2023-05-16 13:39:09,811:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:39:09,814:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'menopause', 'tumor-size',
                                             'inv-nodes', 'node-caps',
                                             'deg-malig', 'breast',
                                             'breast-quad', 'irradiat'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:39:09,815:INFO:Creating final display dataframe.
2023-05-16 13:39:09,875:INFO:Setup _display_container:                     Description             Value
0                    Session id              2004
1                        Target             Class
2                   Target type            Binary
3           Original data shape         (683, 10)
4        Transformed data shape         (683, 10)
5   Transformed train set shape         (478, 10)
6    Transformed test set shape         (205, 10)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a61e
2023-05-16 13:39:09,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:09,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:10,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:10,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:10,027:INFO:setup() successfully completed in 0.79s...............
2023-05-16 13:39:10,090:INFO:Initializing compare_models()
2023-05-16 13:39:10,090:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:39:10,090:INFO:Checking exceptions
2023-05-16 13:39:10,090:INFO:Preparing display monitor
2023-05-16 13:39:10,136:INFO:Initializing Logistic Regression
2023-05-16 13:39:10,136:INFO:Total runtime is 0.0 minutes
2023-05-16 13:39:10,144:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:10,144:INFO:Initializing create_model()
2023-05-16 13:39:10,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:10,144:INFO:Checking exceptions
2023-05-16 13:39:10,144:INFO:Importing libraries
2023-05-16 13:39:10,144:INFO:Copying training dataset
2023-05-16 13:39:10,153:INFO:Defining folds
2023-05-16 13:39:10,153:INFO:Declaring metric variables
2023-05-16 13:39:10,157:INFO:Importing untrained model
2023-05-16 13:39:10,162:INFO:Logistic Regression Imported successfully
2023-05-16 13:39:10,168:INFO:Starting cross validation
2023-05-16 13:39:10,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:10,888:INFO:Calculating mean and std
2023-05-16 13:39:10,888:INFO:Creating metrics dataframe
2023-05-16 13:39:11,025:INFO:Uploading results into container
2023-05-16 13:39:11,025:INFO:Uploading model into container now
2023-05-16 13:39:11,025:INFO:_master_model_container: 1
2023-05-16 13:39:11,025:INFO:_display_container: 2
2023-05-16 13:39:11,025:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2004, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:39:11,025:INFO:create_model() successfully completed......................................
2023-05-16 13:39:11,119:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:11,119:INFO:Creating metrics dataframe
2023-05-16 13:39:11,119:INFO:Initializing K Neighbors Classifier
2023-05-16 13:39:11,119:INFO:Total runtime is 0.01637517213821411 minutes
2023-05-16 13:39:11,133:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:11,133:INFO:Initializing create_model()
2023-05-16 13:39:11,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:11,134:INFO:Checking exceptions
2023-05-16 13:39:11,134:INFO:Importing libraries
2023-05-16 13:39:11,134:INFO:Copying training dataset
2023-05-16 13:39:11,136:INFO:Defining folds
2023-05-16 13:39:11,136:INFO:Declaring metric variables
2023-05-16 13:39:11,136:INFO:Importing untrained model
2023-05-16 13:39:11,136:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:39:11,152:INFO:Starting cross validation
2023-05-16 13:39:11,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:11,250:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,260:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,289:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,289:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,304:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,304:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,326:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,345:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,347:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,349:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:11,921:INFO:Calculating mean and std
2023-05-16 13:39:11,937:INFO:Creating metrics dataframe
2023-05-16 13:39:12,074:INFO:Uploading results into container
2023-05-16 13:39:12,074:INFO:Uploading model into container now
2023-05-16 13:39:12,074:INFO:_master_model_container: 2
2023-05-16 13:39:12,074:INFO:_display_container: 2
2023-05-16 13:39:12,074:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:39:12,074:INFO:create_model() successfully completed......................................
2023-05-16 13:39:12,171:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:12,171:INFO:Creating metrics dataframe
2023-05-16 13:39:12,184:INFO:Initializing Naive Bayes
2023-05-16 13:39:12,184:INFO:Total runtime is 0.03412962754567464 minutes
2023-05-16 13:39:12,185:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:12,185:INFO:Initializing create_model()
2023-05-16 13:39:12,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:12,185:INFO:Checking exceptions
2023-05-16 13:39:12,185:INFO:Importing libraries
2023-05-16 13:39:12,185:INFO:Copying training dataset
2023-05-16 13:39:12,185:INFO:Defining folds
2023-05-16 13:39:12,185:INFO:Declaring metric variables
2023-05-16 13:39:12,185:INFO:Importing untrained model
2023-05-16 13:39:12,200:INFO:Naive Bayes Imported successfully
2023-05-16 13:39:12,210:INFO:Starting cross validation
2023-05-16 13:39:12,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:12,910:INFO:Calculating mean and std
2023-05-16 13:39:12,910:INFO:Creating metrics dataframe
2023-05-16 13:39:13,046:INFO:Uploading results into container
2023-05-16 13:39:13,046:INFO:Uploading model into container now
2023-05-16 13:39:13,046:INFO:_master_model_container: 3
2023-05-16 13:39:13,046:INFO:_display_container: 2
2023-05-16 13:39:13,046:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:39:13,046:INFO:create_model() successfully completed......................................
2023-05-16 13:39:13,145:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:13,145:INFO:Creating metrics dataframe
2023-05-16 13:39:13,150:INFO:Initializing Decision Tree Classifier
2023-05-16 13:39:13,150:INFO:Total runtime is 0.05022562742233276 minutes
2023-05-16 13:39:13,158:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:13,158:INFO:Initializing create_model()
2023-05-16 13:39:13,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:13,159:INFO:Checking exceptions
2023-05-16 13:39:13,159:INFO:Importing libraries
2023-05-16 13:39:13,159:INFO:Copying training dataset
2023-05-16 13:39:13,159:INFO:Defining folds
2023-05-16 13:39:13,159:INFO:Declaring metric variables
2023-05-16 13:39:13,167:INFO:Importing untrained model
2023-05-16 13:39:13,172:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:39:13,181:INFO:Starting cross validation
2023-05-16 13:39:13,182:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:13,937:INFO:Calculating mean and std
2023-05-16 13:39:13,938:INFO:Creating metrics dataframe
2023-05-16 13:39:14,087:INFO:Uploading results into container
2023-05-16 13:39:14,087:INFO:Uploading model into container now
2023-05-16 13:39:14,103:INFO:_master_model_container: 4
2023-05-16 13:39:14,103:INFO:_display_container: 2
2023-05-16 13:39:14,103:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2004, splitter='best')
2023-05-16 13:39:14,103:INFO:create_model() successfully completed......................................
2023-05-16 13:39:14,192:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:14,192:INFO:Creating metrics dataframe
2023-05-16 13:39:14,202:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:39:14,202:INFO:Total runtime is 0.0677661140759786 minutes
2023-05-16 13:39:14,205:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:14,205:INFO:Initializing create_model()
2023-05-16 13:39:14,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:14,205:INFO:Checking exceptions
2023-05-16 13:39:14,205:INFO:Importing libraries
2023-05-16 13:39:14,205:INFO:Copying training dataset
2023-05-16 13:39:14,212:INFO:Defining folds
2023-05-16 13:39:14,212:INFO:Declaring metric variables
2023-05-16 13:39:14,217:INFO:Importing untrained model
2023-05-16 13:39:14,221:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:39:14,230:INFO:Starting cross validation
2023-05-16 13:39:14,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:14,301:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,301:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,317:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,317:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,333:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,333:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,348:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,366:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,373:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,373:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:14,946:INFO:Calculating mean and std
2023-05-16 13:39:14,947:INFO:Creating metrics dataframe
2023-05-16 13:39:15,095:INFO:Uploading results into container
2023-05-16 13:39:15,095:INFO:Uploading model into container now
2023-05-16 13:39:15,095:INFO:_master_model_container: 5
2023-05-16 13:39:15,095:INFO:_display_container: 2
2023-05-16 13:39:15,095:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2004, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:39:15,095:INFO:create_model() successfully completed......................................
2023-05-16 13:39:15,191:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:15,191:INFO:Creating metrics dataframe
2023-05-16 13:39:15,191:INFO:Initializing Ridge Classifier
2023-05-16 13:39:15,191:INFO:Total runtime is 0.08425010840098063 minutes
2023-05-16 13:39:15,209:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:15,210:INFO:Initializing create_model()
2023-05-16 13:39:15,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:15,210:INFO:Checking exceptions
2023-05-16 13:39:15,210:INFO:Importing libraries
2023-05-16 13:39:15,210:INFO:Copying training dataset
2023-05-16 13:39:15,216:INFO:Defining folds
2023-05-16 13:39:15,216:INFO:Declaring metric variables
2023-05-16 13:39:15,222:INFO:Importing untrained model
2023-05-16 13:39:15,226:INFO:Ridge Classifier Imported successfully
2023-05-16 13:39:15,233:INFO:Starting cross validation
2023-05-16 13:39:15,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:15,314:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,314:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,326:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,338:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,352:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,367:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,374:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,380:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,401:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,408:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:15,970:INFO:Calculating mean and std
2023-05-16 13:39:15,971:INFO:Creating metrics dataframe
2023-05-16 13:39:16,114:INFO:Uploading results into container
2023-05-16 13:39:16,114:INFO:Uploading model into container now
2023-05-16 13:39:16,114:INFO:_master_model_container: 6
2023-05-16 13:39:16,114:INFO:_display_container: 2
2023-05-16 13:39:16,114:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2004, solver='auto', tol=0.001)
2023-05-16 13:39:16,114:INFO:create_model() successfully completed......................................
2023-05-16 13:39:16,211:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:16,211:INFO:Creating metrics dataframe
2023-05-16 13:39:16,226:INFO:Initializing Random Forest Classifier
2023-05-16 13:39:16,226:INFO:Total runtime is 0.10149736404418945 minutes
2023-05-16 13:39:16,226:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:16,226:INFO:Initializing create_model()
2023-05-16 13:39:16,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:16,226:INFO:Checking exceptions
2023-05-16 13:39:16,226:INFO:Importing libraries
2023-05-16 13:39:16,226:INFO:Copying training dataset
2023-05-16 13:39:16,244:INFO:Defining folds
2023-05-16 13:39:16,245:INFO:Declaring metric variables
2023-05-16 13:39:16,247:INFO:Importing untrained model
2023-05-16 13:39:16,247:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:39:16,263:INFO:Starting cross validation
2023-05-16 13:39:16,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:17,808:INFO:Calculating mean and std
2023-05-16 13:39:17,808:INFO:Creating metrics dataframe
2023-05-16 13:39:17,928:INFO:Uploading results into container
2023-05-16 13:39:17,928:INFO:Uploading model into container now
2023-05-16 13:39:17,928:INFO:_master_model_container: 7
2023-05-16 13:39:17,928:INFO:_display_container: 2
2023-05-16 13:39:17,928:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2004, verbose=0, warm_start=False)
2023-05-16 13:39:17,928:INFO:create_model() successfully completed......................................
2023-05-16 13:39:18,026:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:18,026:INFO:Creating metrics dataframe
2023-05-16 13:39:18,041:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:39:18,041:INFO:Total runtime is 0.13174966971079508 minutes
2023-05-16 13:39:18,041:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:18,041:INFO:Initializing create_model()
2023-05-16 13:39:18,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:18,041:INFO:Checking exceptions
2023-05-16 13:39:18,041:INFO:Importing libraries
2023-05-16 13:39:18,041:INFO:Copying training dataset
2023-05-16 13:39:18,061:INFO:Defining folds
2023-05-16 13:39:18,061:INFO:Declaring metric variables
2023-05-16 13:39:18,066:INFO:Importing untrained model
2023-05-16 13:39:18,073:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:39:18,082:INFO:Starting cross validation
2023-05-16 13:39:18,083:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:18,913:INFO:Calculating mean and std
2023-05-16 13:39:18,913:INFO:Creating metrics dataframe
2023-05-16 13:39:19,069:INFO:Uploading results into container
2023-05-16 13:39:19,070:INFO:Uploading model into container now
2023-05-16 13:39:19,070:INFO:_master_model_container: 8
2023-05-16 13:39:19,071:INFO:_display_container: 2
2023-05-16 13:39:19,071:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:39:19,071:INFO:create_model() successfully completed......................................
2023-05-16 13:39:19,163:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:19,163:INFO:Creating metrics dataframe
2023-05-16 13:39:19,163:INFO:Initializing Ada Boost Classifier
2023-05-16 13:39:19,163:INFO:Total runtime is 0.15044440031051634 minutes
2023-05-16 13:39:19,178:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:19,178:INFO:Initializing create_model()
2023-05-16 13:39:19,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:19,180:INFO:Checking exceptions
2023-05-16 13:39:19,180:INFO:Importing libraries
2023-05-16 13:39:19,180:INFO:Copying training dataset
2023-05-16 13:39:19,184:INFO:Defining folds
2023-05-16 13:39:19,184:INFO:Declaring metric variables
2023-05-16 13:39:19,185:INFO:Importing untrained model
2023-05-16 13:39:19,185:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:39:19,185:INFO:Starting cross validation
2023-05-16 13:39:19,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:20,163:INFO:Calculating mean and std
2023-05-16 13:39:20,163:INFO:Creating metrics dataframe
2023-05-16 13:39:20,317:INFO:Uploading results into container
2023-05-16 13:39:20,317:INFO:Uploading model into container now
2023-05-16 13:39:20,317:INFO:_master_model_container: 9
2023-05-16 13:39:20,317:INFO:_display_container: 2
2023-05-16 13:39:20,317:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2004)
2023-05-16 13:39:20,317:INFO:create_model() successfully completed......................................
2023-05-16 13:39:20,404:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:20,404:INFO:Creating metrics dataframe
2023-05-16 13:39:20,420:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:39:20,420:INFO:Total runtime is 0.171396001180013 minutes
2023-05-16 13:39:20,426:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:20,426:INFO:Initializing create_model()
2023-05-16 13:39:20,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:20,426:INFO:Checking exceptions
2023-05-16 13:39:20,426:INFO:Importing libraries
2023-05-16 13:39:20,426:INFO:Copying training dataset
2023-05-16 13:39:20,430:INFO:Defining folds
2023-05-16 13:39:20,431:INFO:Declaring metric variables
2023-05-16 13:39:20,434:INFO:Importing untrained model
2023-05-16 13:39:20,435:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:39:20,450:INFO:Starting cross validation
2023-05-16 13:39:20,452:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:21,392:INFO:Calculating mean and std
2023-05-16 13:39:21,392:INFO:Creating metrics dataframe
2023-05-16 13:39:21,522:INFO:Uploading results into container
2023-05-16 13:39:21,522:INFO:Uploading model into container now
2023-05-16 13:39:21,522:INFO:_master_model_container: 10
2023-05-16 13:39:21,522:INFO:_display_container: 2
2023-05-16 13:39:21,522:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2004, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:39:21,522:INFO:create_model() successfully completed......................................
2023-05-16 13:39:21,630:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:21,630:INFO:Creating metrics dataframe
2023-05-16 13:39:21,635:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:39:21,635:INFO:Total runtime is 0.19165255228678382 minutes
2023-05-16 13:39:21,635:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:21,635:INFO:Initializing create_model()
2023-05-16 13:39:21,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:21,646:INFO:Checking exceptions
2023-05-16 13:39:21,646:INFO:Importing libraries
2023-05-16 13:39:21,646:INFO:Copying training dataset
2023-05-16 13:39:21,649:INFO:Defining folds
2023-05-16 13:39:21,649:INFO:Declaring metric variables
2023-05-16 13:39:21,653:INFO:Importing untrained model
2023-05-16 13:39:21,656:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:39:21,665:INFO:Starting cross validation
2023-05-16 13:39:21,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:22,411:INFO:Calculating mean and std
2023-05-16 13:39:22,426:INFO:Creating metrics dataframe
2023-05-16 13:39:22,557:INFO:Uploading results into container
2023-05-16 13:39:22,557:INFO:Uploading model into container now
2023-05-16 13:39:22,557:INFO:_master_model_container: 11
2023-05-16 13:39:22,557:INFO:_display_container: 2
2023-05-16 13:39:22,557:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:39:22,557:INFO:create_model() successfully completed......................................
2023-05-16 13:39:22,651:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:22,651:INFO:Creating metrics dataframe
2023-05-16 13:39:22,663:INFO:Initializing Extra Trees Classifier
2023-05-16 13:39:22,664:INFO:Total runtime is 0.20879960060119626 minutes
2023-05-16 13:39:22,668:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:22,669:INFO:Initializing create_model()
2023-05-16 13:39:22,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:22,669:INFO:Checking exceptions
2023-05-16 13:39:22,669:INFO:Importing libraries
2023-05-16 13:39:22,669:INFO:Copying training dataset
2023-05-16 13:39:22,675:INFO:Defining folds
2023-05-16 13:39:22,676:INFO:Declaring metric variables
2023-05-16 13:39:22,680:INFO:Importing untrained model
2023-05-16 13:39:22,685:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:39:22,693:INFO:Starting cross validation
2023-05-16 13:39:22,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:24,160:INFO:Calculating mean and std
2023-05-16 13:39:24,161:INFO:Creating metrics dataframe
2023-05-16 13:39:24,309:INFO:Uploading results into container
2023-05-16 13:39:24,310:INFO:Uploading model into container now
2023-05-16 13:39:24,311:INFO:_master_model_container: 12
2023-05-16 13:39:24,311:INFO:_display_container: 2
2023-05-16 13:39:24,311:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2004, verbose=0, warm_start=False)
2023-05-16 13:39:24,311:INFO:create_model() successfully completed......................................
2023-05-16 13:39:24,414:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:24,415:INFO:Creating metrics dataframe
2023-05-16 13:39:24,428:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:39:24,428:INFO:Total runtime is 0.23819729487101235 minutes
2023-05-16 13:39:24,432:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:24,433:INFO:Initializing create_model()
2023-05-16 13:39:24,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:24,433:INFO:Checking exceptions
2023-05-16 13:39:24,433:INFO:Importing libraries
2023-05-16 13:39:24,433:INFO:Copying training dataset
2023-05-16 13:39:24,438:INFO:Defining folds
2023-05-16 13:39:24,439:INFO:Declaring metric variables
2023-05-16 13:39:24,443:INFO:Importing untrained model
2023-05-16 13:39:24,455:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:39:24,467:INFO:Starting cross validation
2023-05-16 13:39:24,468:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:25,851:INFO:Calculating mean and std
2023-05-16 13:39:25,854:INFO:Creating metrics dataframe
2023-05-16 13:39:25,990:INFO:Uploading results into container
2023-05-16 13:39:25,990:INFO:Uploading model into container now
2023-05-16 13:39:25,990:INFO:_master_model_container: 13
2023-05-16 13:39:25,990:INFO:_display_container: 2
2023-05-16 13:39:25,990:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2004, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:39:25,990:INFO:create_model() successfully completed......................................
2023-05-16 13:39:26,075:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:26,075:INFO:Creating metrics dataframe
2023-05-16 13:39:26,101:INFO:Initializing Dummy Classifier
2023-05-16 13:39:26,101:INFO:Total runtime is 0.2660719076792399 minutes
2023-05-16 13:39:26,106:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:26,106:INFO:Initializing create_model()
2023-05-16 13:39:26,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD0A76C7C0>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:26,106:INFO:Checking exceptions
2023-05-16 13:39:26,107:INFO:Importing libraries
2023-05-16 13:39:26,107:INFO:Copying training dataset
2023-05-16 13:39:26,112:INFO:Defining folds
2023-05-16 13:39:26,112:INFO:Declaring metric variables
2023-05-16 13:39:26,117:INFO:Importing untrained model
2023-05-16 13:39:26,122:INFO:Dummy Classifier Imported successfully
2023-05-16 13:39:26,130:INFO:Starting cross validation
2023-05-16 13:39:26,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:26,220:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,245:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,254:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,265:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,272:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,274:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,276:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,292:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,298:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,305:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:26,944:INFO:Calculating mean and std
2023-05-16 13:39:26,946:INFO:Creating metrics dataframe
2023-05-16 13:39:27,114:INFO:Uploading results into container
2023-05-16 13:39:27,115:INFO:Uploading model into container now
2023-05-16 13:39:27,115:INFO:_master_model_container: 14
2023-05-16 13:39:27,116:INFO:_display_container: 2
2023-05-16 13:39:27,116:INFO:DummyClassifier(constant=None, random_state=2004, strategy='prior')
2023-05-16 13:39:27,116:INFO:create_model() successfully completed......................................
2023-05-16 13:39:27,205:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:27,205:INFO:Creating metrics dataframe
2023-05-16 13:39:27,228:INFO:Initializing create_model()
2023-05-16 13:39:27,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0BBF3EB0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2004, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:27,228:INFO:Checking exceptions
2023-05-16 13:39:27,234:INFO:Importing libraries
2023-05-16 13:39:27,234:INFO:Copying training dataset
2023-05-16 13:39:27,236:INFO:Defining folds
2023-05-16 13:39:27,236:INFO:Declaring metric variables
2023-05-16 13:39:27,236:INFO:Importing untrained model
2023-05-16 13:39:27,236:INFO:Declaring custom model
2023-05-16 13:39:27,237:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:39:27,238:INFO:Cross validation set to False
2023-05-16 13:39:27,238:INFO:Fitting Model
2023-05-16 13:39:27,433:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2004, verbose=0, warm_start=False)
2023-05-16 13:39:27,433:INFO:create_model() successfully completed......................................
2023-05-16 13:39:27,555:INFO:_master_model_container: 14
2023-05-16 13:39:27,555:INFO:_display_container: 2
2023-05-16 13:39:27,556:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2004, verbose=0, warm_start=False)
2023-05-16 13:39:27,556:INFO:compare_models() successfully completed......................................
2023-05-16 13:39:27,865:INFO:PyCaret ClassificationExperiment
2023-05-16 13:39:27,865:INFO:Logging name: clf-default-name
2023-05-16 13:39:27,865:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:39:27,865:INFO:version 3.0.1
2023-05-16 13:39:27,865:INFO:Initializing setup()
2023-05-16 13:39:27,865:INFO:self.USI: 2690
2023-05-16 13:39:27,865:INFO:self._variable_keys: {'log_plots_param', 'html_param', 'exp_name_log', 'y_test', 'y_train', 'exp_id', 'y', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'pipeline', 'is_multiclass', 'X', '_available_plots', 'fold_groups_param', 'data', 'fix_imbalance', 'seed', '_ml_usecase', 'idx', 'fold_generator', 'target_param', 'gpu_param', 'X_train', 'USI', 'fold_shuffle_param', 'logging_param', 'X_test'}
2023-05-16 13:39:27,865:INFO:Checking environment
2023-05-16 13:39:27,865:INFO:python_version: 3.9.13
2023-05-16 13:39:27,865:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:39:27,865:INFO:machine: AMD64
2023-05-16 13:39:27,865:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:39:27,865:INFO:Memory: svmem(total=7968444416, available=652173312, percent=91.8, used=7316271104, free=652173312)
2023-05-16 13:39:27,865:INFO:Physical Core: 6
2023-05-16 13:39:27,865:INFO:Logical Core: 12
2023-05-16 13:39:27,865:INFO:Checking libraries
2023-05-16 13:39:27,865:INFO:System:
2023-05-16 13:39:27,865:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:39:27,865:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:39:27,865:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:39:27,865:INFO:PyCaret required dependencies:
2023-05-16 13:39:27,865:INFO:                 pip: 22.2.2
2023-05-16 13:39:27,865:INFO:          setuptools: 63.4.1
2023-05-16 13:39:27,865:INFO:             pycaret: 3.0.1
2023-05-16 13:39:27,865:INFO:             IPython: 7.31.1
2023-05-16 13:39:27,865:INFO:          ipywidgets: 7.6.5
2023-05-16 13:39:27,865:INFO:                tqdm: 4.64.1
2023-05-16 13:39:27,865:INFO:               numpy: 1.21.6
2023-05-16 13:39:27,865:INFO:              pandas: 1.4.4
2023-05-16 13:39:27,865:INFO:              jinja2: 2.11.3
2023-05-16 13:39:27,865:INFO:               scipy: 1.9.1
2023-05-16 13:39:27,865:INFO:              joblib: 1.2.0
2023-05-16 13:39:27,865:INFO:             sklearn: 1.0.2
2023-05-16 13:39:27,865:INFO:                pyod: 1.0.9
2023-05-16 13:39:27,865:INFO:            imblearn: 0.10.1
2023-05-16 13:39:27,865:INFO:   category_encoders: 2.6.1
2023-05-16 13:39:27,865:INFO:            lightgbm: 3.3.5
2023-05-16 13:39:27,865:INFO:               numba: 0.55.1
2023-05-16 13:39:27,865:INFO:            requests: 2.28.1
2023-05-16 13:39:27,865:INFO:          matplotlib: 3.5.2
2023-05-16 13:39:27,865:INFO:          scikitplot: 0.3.7
2023-05-16 13:39:27,865:INFO:         yellowbrick: 1.5
2023-05-16 13:39:27,865:INFO:              plotly: 5.9.0
2023-05-16 13:39:27,865:INFO:             kaleido: 0.2.1
2023-05-16 13:39:27,865:INFO:         statsmodels: 0.13.2
2023-05-16 13:39:27,865:INFO:              sktime: 0.17.0
2023-05-16 13:39:27,865:INFO:               tbats: 1.1.3
2023-05-16 13:39:27,865:INFO:            pmdarima: 2.0.3
2023-05-16 13:39:27,865:INFO:              psutil: 5.9.0
2023-05-16 13:39:27,865:INFO:PyCaret optional dependencies:
2023-05-16 13:39:27,865:INFO:                shap: Not installed
2023-05-16 13:39:27,865:INFO:           interpret: Not installed
2023-05-16 13:39:27,865:INFO:                umap: Not installed
2023-05-16 13:39:27,865:INFO:    pandas_profiling: Not installed
2023-05-16 13:39:27,865:INFO:  explainerdashboard: Not installed
2023-05-16 13:39:27,865:INFO:             autoviz: Not installed
2023-05-16 13:39:27,865:INFO:           fairlearn: Not installed
2023-05-16 13:39:27,865:INFO:             xgboost: Not installed
2023-05-16 13:39:27,865:INFO:            catboost: Not installed
2023-05-16 13:39:27,865:INFO:              kmodes: Not installed
2023-05-16 13:39:27,865:INFO:             mlxtend: Not installed
2023-05-16 13:39:27,865:INFO:       statsforecast: Not installed
2023-05-16 13:39:27,865:INFO:        tune_sklearn: Not installed
2023-05-16 13:39:27,865:INFO:                 ray: Not installed
2023-05-16 13:39:27,865:INFO:            hyperopt: Not installed
2023-05-16 13:39:27,865:INFO:              optuna: Not installed
2023-05-16 13:39:27,865:INFO:               skopt: Not installed
2023-05-16 13:39:27,865:INFO:              mlflow: Not installed
2023-05-16 13:39:27,865:INFO:              gradio: Not installed
2023-05-16 13:39:27,865:INFO:             fastapi: Not installed
2023-05-16 13:39:27,865:INFO:             uvicorn: Not installed
2023-05-16 13:39:27,865:INFO:              m2cgen: Not installed
2023-05-16 13:39:27,865:INFO:           evidently: Not installed
2023-05-16 13:39:27,865:INFO:               fugue: Not installed
2023-05-16 13:39:27,865:INFO:           streamlit: 1.20.0
2023-05-16 13:39:27,865:INFO:             prophet: Not installed
2023-05-16 13:39:27,865:INFO:None
2023-05-16 13:39:27,865:INFO:Set up data.
2023-05-16 13:39:27,865:INFO:Set up train/test split.
2023-05-16 13:39:27,865:INFO:Set up index.
2023-05-16 13:39:27,865:INFO:Set up folding strategy.
2023-05-16 13:39:27,865:INFO:Assigning column types.
2023-05-16 13:39:27,865:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:39:27,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:39:27,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:27,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:27,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:27,990:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:39:27,990:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:28,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,029:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:39:28,064:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:28,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,142:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:39:28,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,173:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:39:28,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,325:INFO:Preparing preprocessing pipeline...
2023-05-16 13:39:28,325:INFO:Set up simple imputation.
2023-05-16 13:39:28,325:INFO:Set up column name cleaning.
2023-05-16 13:39:28,340:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:39:28,340:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'chest pain type',
                                             'resting blood pressure',
                                             'serum cholestoral in mg/dl      ',
                                             'fasting blood sugar > 120 mg/dl ',
                                             'resting electrocardiographic '
                                             'results',
                                             'maximum heart rate achieved  ',
                                             'exercise induced angina    ',
                                             'oldpeak...
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-16 13:39:28,340:INFO:Creating final display dataframe.
2023-05-16 13:39:28,408:INFO:Setup _display_container:                     Description             Value
0                    Session id              6427
1                        Target           Disease
2                   Target type            Binary
3           Original data shape         (270, 14)
4        Transformed data shape         (270, 14)
5   Transformed train set shape         (189, 14)
6    Transformed test set shape          (81, 14)
7              Numeric features                13
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              2690
2023-05-16 13:39:28,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:39:28,601:INFO:setup() successfully completed in 0.8s...............
2023-05-16 13:39:28,677:INFO:Initializing compare_models()
2023-05-16 13:39:28,678:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:39:28,678:INFO:Checking exceptions
2023-05-16 13:39:28,681:INFO:Preparing display monitor
2023-05-16 13:39:28,714:INFO:Initializing Logistic Regression
2023-05-16 13:39:28,715:INFO:Total runtime is 1.7261505126953126e-05 minutes
2023-05-16 13:39:28,718:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:28,718:INFO:Initializing create_model()
2023-05-16 13:39:28,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:28,719:INFO:Checking exceptions
2023-05-16 13:39:28,719:INFO:Importing libraries
2023-05-16 13:39:28,719:INFO:Copying training dataset
2023-05-16 13:39:28,722:INFO:Defining folds
2023-05-16 13:39:28,722:INFO:Declaring metric variables
2023-05-16 13:39:28,725:INFO:Importing untrained model
2023-05-16 13:39:28,730:INFO:Logistic Regression Imported successfully
2023-05-16 13:39:28,739:INFO:Starting cross validation
2023-05-16 13:39:28,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:29,094:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-16 13:39:29,114:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-16 13:39:29,837:INFO:Calculating mean and std
2023-05-16 13:39:29,838:INFO:Creating metrics dataframe
2023-05-16 13:39:29,994:INFO:Uploading results into container
2023-05-16 13:39:29,996:INFO:Uploading model into container now
2023-05-16 13:39:29,996:INFO:_master_model_container: 1
2023-05-16 13:39:29,997:INFO:_display_container: 2
2023-05-16 13:39:29,997:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6427, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:39:29,997:INFO:create_model() successfully completed......................................
2023-05-16 13:39:30,088:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:30,088:INFO:Creating metrics dataframe
2023-05-16 13:39:30,095:INFO:Initializing K Neighbors Classifier
2023-05-16 13:39:30,095:INFO:Total runtime is 0.023016790548960366 minutes
2023-05-16 13:39:30,099:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:30,100:INFO:Initializing create_model()
2023-05-16 13:39:30,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:30,100:INFO:Checking exceptions
2023-05-16 13:39:30,100:INFO:Importing libraries
2023-05-16 13:39:30,100:INFO:Copying training dataset
2023-05-16 13:39:30,106:INFO:Defining folds
2023-05-16 13:39:30,106:INFO:Declaring metric variables
2023-05-16 13:39:30,112:INFO:Importing untrained model
2023-05-16 13:39:30,117:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:39:30,124:INFO:Starting cross validation
2023-05-16 13:39:30,124:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:30,220:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,235:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,239:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,247:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,277:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,278:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,293:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,308:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,322:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:30,422:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:39:31,025:INFO:Calculating mean and std
2023-05-16 13:39:31,025:INFO:Creating metrics dataframe
2023-05-16 13:39:31,185:INFO:Uploading results into container
2023-05-16 13:39:31,185:INFO:Uploading model into container now
2023-05-16 13:39:31,185:INFO:_master_model_container: 2
2023-05-16 13:39:31,185:INFO:_display_container: 2
2023-05-16 13:39:31,185:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:39:31,191:INFO:create_model() successfully completed......................................
2023-05-16 13:39:31,276:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:31,276:INFO:Creating metrics dataframe
2023-05-16 13:39:31,294:INFO:Initializing Naive Bayes
2023-05-16 13:39:31,295:INFO:Total runtime is 0.04302046298980713 minutes
2023-05-16 13:39:31,296:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:31,296:INFO:Initializing create_model()
2023-05-16 13:39:31,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:31,296:INFO:Checking exceptions
2023-05-16 13:39:31,296:INFO:Importing libraries
2023-05-16 13:39:31,296:INFO:Copying training dataset
2023-05-16 13:39:31,305:INFO:Defining folds
2023-05-16 13:39:31,305:INFO:Declaring metric variables
2023-05-16 13:39:31,310:INFO:Importing untrained model
2023-05-16 13:39:31,315:INFO:Naive Bayes Imported successfully
2023-05-16 13:39:31,322:INFO:Starting cross validation
2023-05-16 13:39:31,323:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:32,188:INFO:Calculating mean and std
2023-05-16 13:39:32,188:INFO:Creating metrics dataframe
2023-05-16 13:39:32,336:INFO:Uploading results into container
2023-05-16 13:39:32,337:INFO:Uploading model into container now
2023-05-16 13:39:32,338:INFO:_master_model_container: 3
2023-05-16 13:39:32,338:INFO:_display_container: 2
2023-05-16 13:39:32,339:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:39:32,339:INFO:create_model() successfully completed......................................
2023-05-16 13:39:32,434:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:32,434:INFO:Creating metrics dataframe
2023-05-16 13:39:32,450:INFO:Initializing Decision Tree Classifier
2023-05-16 13:39:32,450:INFO:Total runtime is 0.06227059761683146 minutes
2023-05-16 13:39:32,464:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:32,465:INFO:Initializing create_model()
2023-05-16 13:39:32,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:32,465:INFO:Checking exceptions
2023-05-16 13:39:32,465:INFO:Importing libraries
2023-05-16 13:39:32,466:INFO:Copying training dataset
2023-05-16 13:39:32,471:INFO:Defining folds
2023-05-16 13:39:32,471:INFO:Declaring metric variables
2023-05-16 13:39:32,476:INFO:Importing untrained model
2023-05-16 13:39:32,482:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:39:32,491:INFO:Starting cross validation
2023-05-16 13:39:32,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:33,360:INFO:Calculating mean and std
2023-05-16 13:39:33,360:INFO:Creating metrics dataframe
2023-05-16 13:39:33,502:INFO:Uploading results into container
2023-05-16 13:39:33,503:INFO:Uploading model into container now
2023-05-16 13:39:33,504:INFO:_master_model_container: 4
2023-05-16 13:39:33,504:INFO:_display_container: 2
2023-05-16 13:39:33,505:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6427, splitter='best')
2023-05-16 13:39:33,505:INFO:create_model() successfully completed......................................
2023-05-16 13:39:33,622:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:33,622:INFO:Creating metrics dataframe
2023-05-16 13:39:33,637:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:39:33,637:INFO:Total runtime is 0.08206029335657755 minutes
2023-05-16 13:39:33,637:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:33,637:INFO:Initializing create_model()
2023-05-16 13:39:33,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:33,637:INFO:Checking exceptions
2023-05-16 13:39:33,637:INFO:Importing libraries
2023-05-16 13:39:33,637:INFO:Copying training dataset
2023-05-16 13:39:33,656:INFO:Defining folds
2023-05-16 13:39:33,657:INFO:Declaring metric variables
2023-05-16 13:39:33,663:INFO:Importing untrained model
2023-05-16 13:39:33,668:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:39:33,679:INFO:Starting cross validation
2023-05-16 13:39:33,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:33,767:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,767:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,767:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,783:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,799:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,799:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,799:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,814:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,814:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:33,814:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:33,830:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:39:34,518:INFO:Calculating mean and std
2023-05-16 13:39:34,518:INFO:Creating metrics dataframe
2023-05-16 13:39:34,683:INFO:Uploading results into container
2023-05-16 13:39:34,683:INFO:Uploading model into container now
2023-05-16 13:39:34,683:INFO:_master_model_container: 5
2023-05-16 13:39:34,683:INFO:_display_container: 2
2023-05-16 13:39:34,683:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6427, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:39:34,683:INFO:create_model() successfully completed......................................
2023-05-16 13:39:34,780:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:34,780:INFO:Creating metrics dataframe
2023-05-16 13:39:34,780:INFO:Initializing Ridge Classifier
2023-05-16 13:39:34,780:INFO:Total runtime is 0.10109863281249999 minutes
2023-05-16 13:39:34,793:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:34,793:INFO:Initializing create_model()
2023-05-16 13:39:34,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:34,794:INFO:Checking exceptions
2023-05-16 13:39:34,794:INFO:Importing libraries
2023-05-16 13:39:34,794:INFO:Copying training dataset
2023-05-16 13:39:34,798:INFO:Defining folds
2023-05-16 13:39:34,799:INFO:Declaring metric variables
2023-05-16 13:39:34,803:INFO:Importing untrained model
2023-05-16 13:39:34,808:INFO:Ridge Classifier Imported successfully
2023-05-16 13:39:34,816:INFO:Starting cross validation
2023-05-16 13:39:34,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:34,886:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,902:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,902:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,918:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,933:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,933:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,949:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,964:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,964:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:34,964:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:39:35,659:INFO:Calculating mean and std
2023-05-16 13:39:35,659:INFO:Creating metrics dataframe
2023-05-16 13:39:35,838:INFO:Uploading results into container
2023-05-16 13:39:35,838:INFO:Uploading model into container now
2023-05-16 13:39:35,838:INFO:_master_model_container: 6
2023-05-16 13:39:35,838:INFO:_display_container: 2
2023-05-16 13:39:35,838:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=6427, solver='auto', tol=0.001)
2023-05-16 13:39:35,838:INFO:create_model() successfully completed......................................
2023-05-16 13:39:35,948:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:35,948:INFO:Creating metrics dataframe
2023-05-16 13:39:35,948:INFO:Initializing Random Forest Classifier
2023-05-16 13:39:35,948:INFO:Total runtime is 0.12056424220403035 minutes
2023-05-16 13:39:35,948:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:35,963:INFO:Initializing create_model()
2023-05-16 13:39:35,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:35,963:INFO:Checking exceptions
2023-05-16 13:39:35,963:INFO:Importing libraries
2023-05-16 13:39:35,963:INFO:Copying training dataset
2023-05-16 13:39:35,970:INFO:Defining folds
2023-05-16 13:39:35,971:INFO:Declaring metric variables
2023-05-16 13:39:35,976:INFO:Importing untrained model
2023-05-16 13:39:35,985:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:39:35,998:INFO:Starting cross validation
2023-05-16 13:39:36,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:37,629:INFO:Calculating mean and std
2023-05-16 13:39:37,629:INFO:Creating metrics dataframe
2023-05-16 13:39:37,802:INFO:Uploading results into container
2023-05-16 13:39:37,803:INFO:Uploading model into container now
2023-05-16 13:39:37,803:INFO:_master_model_container: 7
2023-05-16 13:39:37,803:INFO:_display_container: 2
2023-05-16 13:39:37,803:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6427, verbose=0, warm_start=False)
2023-05-16 13:39:37,803:INFO:create_model() successfully completed......................................
2023-05-16 13:39:37,911:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:37,912:INFO:Creating metrics dataframe
2023-05-16 13:39:37,921:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:39:37,922:INFO:Total runtime is 0.15347690582275392 minutes
2023-05-16 13:39:37,926:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:37,926:INFO:Initializing create_model()
2023-05-16 13:39:37,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:37,927:INFO:Checking exceptions
2023-05-16 13:39:37,927:INFO:Importing libraries
2023-05-16 13:39:37,927:INFO:Copying training dataset
2023-05-16 13:39:37,931:INFO:Defining folds
2023-05-16 13:39:37,931:INFO:Declaring metric variables
2023-05-16 13:39:37,935:INFO:Importing untrained model
2023-05-16 13:39:37,941:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:39:37,951:INFO:Starting cross validation
2023-05-16 13:39:37,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:38,916:INFO:Calculating mean and std
2023-05-16 13:39:38,921:INFO:Creating metrics dataframe
2023-05-16 13:39:39,096:INFO:Uploading results into container
2023-05-16 13:39:39,097:INFO:Uploading model into container now
2023-05-16 13:39:39,098:INFO:_master_model_container: 8
2023-05-16 13:39:39,098:INFO:_display_container: 2
2023-05-16 13:39:39,098:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:39:39,098:INFO:create_model() successfully completed......................................
2023-05-16 13:39:39,192:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:39,192:INFO:Creating metrics dataframe
2023-05-16 13:39:39,205:INFO:Initializing Ada Boost Classifier
2023-05-16 13:39:39,205:INFO:Total runtime is 0.17485903104146322 minutes
2023-05-16 13:39:39,212:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:39,212:INFO:Initializing create_model()
2023-05-16 13:39:39,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:39,213:INFO:Checking exceptions
2023-05-16 13:39:39,213:INFO:Importing libraries
2023-05-16 13:39:39,213:INFO:Copying training dataset
2023-05-16 13:39:39,218:INFO:Defining folds
2023-05-16 13:39:39,218:INFO:Declaring metric variables
2023-05-16 13:39:39,222:INFO:Importing untrained model
2023-05-16 13:39:39,227:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:39:39,236:INFO:Starting cross validation
2023-05-16 13:39:39,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:40,512:INFO:Calculating mean and std
2023-05-16 13:39:40,512:INFO:Creating metrics dataframe
2023-05-16 13:39:40,687:INFO:Uploading results into container
2023-05-16 13:39:40,687:INFO:Uploading model into container now
2023-05-16 13:39:40,688:INFO:_master_model_container: 9
2023-05-16 13:39:40,688:INFO:_display_container: 2
2023-05-16 13:39:40,689:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6427)
2023-05-16 13:39:40,689:INFO:create_model() successfully completed......................................
2023-05-16 13:39:40,775:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:40,775:INFO:Creating metrics dataframe
2023-05-16 13:39:40,787:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:39:40,787:INFO:Total runtime is 0.2012210249900818 minutes
2023-05-16 13:39:40,793:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:40,793:INFO:Initializing create_model()
2023-05-16 13:39:40,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:40,793:INFO:Checking exceptions
2023-05-16 13:39:40,793:INFO:Importing libraries
2023-05-16 13:39:40,793:INFO:Copying training dataset
2023-05-16 13:39:40,798:INFO:Defining folds
2023-05-16 13:39:40,798:INFO:Declaring metric variables
2023-05-16 13:39:40,803:INFO:Importing untrained model
2023-05-16 13:39:40,809:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:39:40,817:INFO:Starting cross validation
2023-05-16 13:39:40,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:41,906:INFO:Calculating mean and std
2023-05-16 13:39:41,922:INFO:Creating metrics dataframe
2023-05-16 13:39:42,093:INFO:Uploading results into container
2023-05-16 13:39:42,108:INFO:Uploading model into container now
2023-05-16 13:39:42,108:INFO:_master_model_container: 10
2023-05-16 13:39:42,108:INFO:_display_container: 2
2023-05-16 13:39:42,108:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6427, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:39:42,108:INFO:create_model() successfully completed......................................
2023-05-16 13:39:42,183:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:42,183:INFO:Creating metrics dataframe
2023-05-16 13:39:42,198:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:39:42,198:INFO:Total runtime is 0.22473832368850707 minutes
2023-05-16 13:39:42,211:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:42,211:INFO:Initializing create_model()
2023-05-16 13:39:42,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:42,212:INFO:Checking exceptions
2023-05-16 13:39:42,212:INFO:Importing libraries
2023-05-16 13:39:42,212:INFO:Copying training dataset
2023-05-16 13:39:42,214:INFO:Defining folds
2023-05-16 13:39:42,214:INFO:Declaring metric variables
2023-05-16 13:39:42,214:INFO:Importing untrained model
2023-05-16 13:39:42,214:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:39:42,230:INFO:Starting cross validation
2023-05-16 13:39:42,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:43,135:INFO:Calculating mean and std
2023-05-16 13:39:43,135:INFO:Creating metrics dataframe
2023-05-16 13:39:43,302:INFO:Uploading results into container
2023-05-16 13:39:43,302:INFO:Uploading model into container now
2023-05-16 13:39:43,318:INFO:_master_model_container: 11
2023-05-16 13:39:43,318:INFO:_display_container: 2
2023-05-16 13:39:43,318:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:39:43,318:INFO:create_model() successfully completed......................................
2023-05-16 13:39:43,407:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:43,407:INFO:Creating metrics dataframe
2023-05-16 13:39:43,407:INFO:Initializing Extra Trees Classifier
2023-05-16 13:39:43,407:INFO:Total runtime is 0.2448781967163086 minutes
2023-05-16 13:39:43,421:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:43,421:INFO:Initializing create_model()
2023-05-16 13:39:43,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:43,422:INFO:Checking exceptions
2023-05-16 13:39:43,422:INFO:Importing libraries
2023-05-16 13:39:43,422:INFO:Copying training dataset
2023-05-16 13:39:43,428:INFO:Defining folds
2023-05-16 13:39:43,429:INFO:Declaring metric variables
2023-05-16 13:39:43,433:INFO:Importing untrained model
2023-05-16 13:39:43,439:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:39:43,447:INFO:Starting cross validation
2023-05-16 13:39:43,449:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:45,088:INFO:Calculating mean and std
2023-05-16 13:39:45,093:INFO:Creating metrics dataframe
2023-05-16 13:39:45,276:INFO:Uploading results into container
2023-05-16 13:39:45,276:INFO:Uploading model into container now
2023-05-16 13:39:45,276:INFO:_master_model_container: 12
2023-05-16 13:39:45,276:INFO:_display_container: 2
2023-05-16 13:39:45,276:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6427, verbose=0, warm_start=False)
2023-05-16 13:39:45,276:INFO:create_model() successfully completed......................................
2023-05-16 13:39:45,370:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:45,370:INFO:Creating metrics dataframe
2023-05-16 13:39:45,375:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:39:45,375:INFO:Total runtime is 0.27768303553263346 minutes
2023-05-16 13:39:45,386:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:45,386:INFO:Initializing create_model()
2023-05-16 13:39:45,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:45,386:INFO:Checking exceptions
2023-05-16 13:39:45,387:INFO:Importing libraries
2023-05-16 13:39:45,387:INFO:Copying training dataset
2023-05-16 13:39:45,391:INFO:Defining folds
2023-05-16 13:39:45,391:INFO:Declaring metric variables
2023-05-16 13:39:45,395:INFO:Importing untrained model
2023-05-16 13:39:45,401:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:39:45,410:INFO:Starting cross validation
2023-05-16 13:39:45,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:46,413:INFO:Calculating mean and std
2023-05-16 13:39:46,413:INFO:Creating metrics dataframe
2023-05-16 13:39:46,604:INFO:Uploading results into container
2023-05-16 13:39:46,604:INFO:Uploading model into container now
2023-05-16 13:39:46,604:INFO:_master_model_container: 13
2023-05-16 13:39:46,604:INFO:_display_container: 2
2023-05-16 13:39:46,604:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6427, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:39:46,604:INFO:create_model() successfully completed......................................
2023-05-16 13:39:46,703:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:46,703:INFO:Creating metrics dataframe
2023-05-16 13:39:46,703:INFO:Initializing Dummy Classifier
2023-05-16 13:39:46,703:INFO:Total runtime is 0.2998222470283508 minutes
2023-05-16 13:39:46,721:INFO:SubProcess create_model() called ==================================
2023-05-16 13:39:46,722:INFO:Initializing create_model()
2023-05-16 13:39:46,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD1100AD30>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:46,722:INFO:Checking exceptions
2023-05-16 13:39:46,722:INFO:Importing libraries
2023-05-16 13:39:46,722:INFO:Copying training dataset
2023-05-16 13:39:46,723:INFO:Defining folds
2023-05-16 13:39:46,723:INFO:Declaring metric variables
2023-05-16 13:39:46,723:INFO:Importing untrained model
2023-05-16 13:39:46,723:INFO:Dummy Classifier Imported successfully
2023-05-16 13:39:46,739:INFO:Starting cross validation
2023-05-16 13:39:46,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:39:46,850:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,850:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,850:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,866:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,882:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,882:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,898:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,898:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,913:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:46,913:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:39:47,682:INFO:Calculating mean and std
2023-05-16 13:39:47,682:INFO:Creating metrics dataframe
2023-05-16 13:39:47,874:INFO:Uploading results into container
2023-05-16 13:39:47,874:INFO:Uploading model into container now
2023-05-16 13:39:47,874:INFO:_master_model_container: 14
2023-05-16 13:39:47,874:INFO:_display_container: 2
2023-05-16 13:39:47,874:INFO:DummyClassifier(constant=None, random_state=6427, strategy='prior')
2023-05-16 13:39:47,874:INFO:create_model() successfully completed......................................
2023-05-16 13:39:47,975:INFO:SubProcess create_model() end ==================================
2023-05-16 13:39:47,975:INFO:Creating metrics dataframe
2023-05-16 13:39:48,001:INFO:Initializing create_model()
2023-05-16 13:39:48,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD6F946970>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=6427, solver='auto', tol=0.001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:39:48,001:INFO:Checking exceptions
2023-05-16 13:39:48,004:INFO:Importing libraries
2023-05-16 13:39:48,004:INFO:Copying training dataset
2023-05-16 13:39:48,010:INFO:Defining folds
2023-05-16 13:39:48,010:INFO:Declaring metric variables
2023-05-16 13:39:48,011:INFO:Importing untrained model
2023-05-16 13:39:48,011:INFO:Declaring custom model
2023-05-16 13:39:48,011:INFO:Ridge Classifier Imported successfully
2023-05-16 13:39:48,012:INFO:Cross validation set to False
2023-05-16 13:39:48,012:INFO:Fitting Model
2023-05-16 13:39:48,135:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=6427, solver='auto', tol=0.001)
2023-05-16 13:39:48,135:INFO:create_model() successfully completed......................................
2023-05-16 13:39:48,279:INFO:_master_model_container: 14
2023-05-16 13:39:48,279:INFO:_display_container: 2
2023-05-16 13:39:48,279:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=6427, solver='auto', tol=0.001)
2023-05-16 13:39:48,280:INFO:compare_models() successfully completed......................................
2023-05-16 13:49:40,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:49:40,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:49:40,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:49:40,383:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:49:41,740:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-16 13:49:42,260:INFO:PyCaret ClassificationExperiment
2023-05-16 13:49:42,260:INFO:Logging name: clf-default-name
2023-05-16 13:49:42,260:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:49:42,261:INFO:version 3.0.1
2023-05-16 13:49:42,261:INFO:Initializing setup()
2023-05-16 13:49:42,261:INFO:self.USI: 607a
2023-05-16 13:49:42,261:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'X_train', 'fold_generator', 'exp_name_log', 'exp_id', 'y', 'y_train', 'fold_shuffle_param', '_ml_usecase', 'USI', 'idx', 'html_param', 'gpu_param', 'y_test', 'is_multiclass', 'X_test', 'logging_param', 'memory', 'X', 'fold_groups_param', '_available_plots', 'pipeline', 'fix_imbalance', 'seed', 'n_jobs_param', 'log_plots_param', 'target_param'}
2023-05-16 13:49:42,261:INFO:Checking environment
2023-05-16 13:49:42,261:INFO:python_version: 3.9.13
2023-05-16 13:49:42,261:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:49:42,261:INFO:machine: AMD64
2023-05-16 13:49:42,261:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:49:42,261:INFO:Memory: svmem(total=7968444416, available=2243067904, percent=71.9, used=5725376512, free=2243067904)
2023-05-16 13:49:42,261:INFO:Physical Core: 6
2023-05-16 13:49:42,261:INFO:Logical Core: 12
2023-05-16 13:49:42,262:INFO:Checking libraries
2023-05-16 13:49:42,262:INFO:System:
2023-05-16 13:49:42,262:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:49:42,262:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:49:42,262:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:49:42,262:INFO:PyCaret required dependencies:
2023-05-16 13:49:42,262:INFO:                 pip: 22.2.2
2023-05-16 13:49:42,262:INFO:          setuptools: 63.4.1
2023-05-16 13:49:42,262:INFO:             pycaret: 3.0.1
2023-05-16 13:49:42,262:INFO:             IPython: 7.31.1
2023-05-16 13:49:42,262:INFO:          ipywidgets: 7.6.5
2023-05-16 13:49:42,262:INFO:                tqdm: 4.64.1
2023-05-16 13:49:42,262:INFO:               numpy: 1.21.6
2023-05-16 13:49:42,262:INFO:              pandas: 1.4.4
2023-05-16 13:49:42,262:INFO:              jinja2: 2.11.3
2023-05-16 13:49:42,262:INFO:               scipy: 1.9.1
2023-05-16 13:49:42,262:INFO:              joblib: 1.2.0
2023-05-16 13:49:42,262:INFO:             sklearn: 1.0.2
2023-05-16 13:49:42,262:INFO:                pyod: 1.0.9
2023-05-16 13:49:42,262:INFO:            imblearn: 0.10.1
2023-05-16 13:49:42,262:INFO:   category_encoders: 2.6.1
2023-05-16 13:49:42,262:INFO:            lightgbm: 3.3.5
2023-05-16 13:49:42,262:INFO:               numba: 0.55.1
2023-05-16 13:49:42,262:INFO:            requests: 2.28.1
2023-05-16 13:49:42,262:INFO:          matplotlib: 3.5.2
2023-05-16 13:49:42,262:INFO:          scikitplot: 0.3.7
2023-05-16 13:49:42,263:INFO:         yellowbrick: 1.5
2023-05-16 13:49:42,263:INFO:              plotly: 5.9.0
2023-05-16 13:49:42,263:INFO:             kaleido: 0.2.1
2023-05-16 13:49:42,263:INFO:         statsmodels: 0.13.2
2023-05-16 13:49:42,263:INFO:              sktime: 0.17.0
2023-05-16 13:49:42,263:INFO:               tbats: 1.1.3
2023-05-16 13:49:42,263:INFO:            pmdarima: 2.0.3
2023-05-16 13:49:42,263:INFO:              psutil: 5.9.0
2023-05-16 13:49:42,263:INFO:PyCaret optional dependencies:
2023-05-16 13:49:42,277:INFO:                shap: Not installed
2023-05-16 13:49:42,277:INFO:           interpret: Not installed
2023-05-16 13:49:42,277:INFO:                umap: Not installed
2023-05-16 13:49:42,277:INFO:    pandas_profiling: Not installed
2023-05-16 13:49:42,277:INFO:  explainerdashboard: Not installed
2023-05-16 13:49:42,277:INFO:             autoviz: Not installed
2023-05-16 13:49:42,277:INFO:           fairlearn: Not installed
2023-05-16 13:49:42,277:INFO:             xgboost: Not installed
2023-05-16 13:49:42,277:INFO:            catboost: Not installed
2023-05-16 13:49:42,277:INFO:              kmodes: Not installed
2023-05-16 13:49:42,277:INFO:             mlxtend: Not installed
2023-05-16 13:49:42,277:INFO:       statsforecast: Not installed
2023-05-16 13:49:42,277:INFO:        tune_sklearn: Not installed
2023-05-16 13:49:42,277:INFO:                 ray: Not installed
2023-05-16 13:49:42,278:INFO:            hyperopt: Not installed
2023-05-16 13:49:42,278:INFO:              optuna: Not installed
2023-05-16 13:49:42,278:INFO:               skopt: Not installed
2023-05-16 13:49:42,278:INFO:              mlflow: Not installed
2023-05-16 13:49:42,278:INFO:              gradio: Not installed
2023-05-16 13:49:42,278:INFO:             fastapi: Not installed
2023-05-16 13:49:42,278:INFO:             uvicorn: Not installed
2023-05-16 13:49:42,278:INFO:              m2cgen: Not installed
2023-05-16 13:49:42,278:INFO:           evidently: Not installed
2023-05-16 13:49:42,278:INFO:               fugue: Not installed
2023-05-16 13:49:42,278:INFO:           streamlit: 1.20.0
2023-05-16 13:49:42,278:INFO:             prophet: Not installed
2023-05-16 13:49:42,278:INFO:None
2023-05-16 13:49:42,278:INFO:Set up data.
2023-05-16 13:49:42,283:INFO:Set up train/test split.
2023-05-16 13:49:42,289:INFO:Set up index.
2023-05-16 13:49:42,289:INFO:Set up folding strategy.
2023-05-16 13:49:42,289:INFO:Assigning column types.
2023-05-16 13:49:42,292:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:49:42,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:49:42,344:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:42,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:49:42,461:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:42,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,491:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:49:42,539:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:42,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:42,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,657:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:49:42,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:42,816:INFO:Preparing preprocessing pipeline...
2023-05-16 13:49:42,818:INFO:Set up label encoding.
2023-05-16 13:49:42,818:INFO:Set up simple imputation.
2023-05-16 13:49:42,844:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:49:42,849:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Id', 'SepalLengthCm',
                                             'SepalWidthCm', 'PetalLengthCm',
                                             'PetalWidthCm'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0)))],
         verbose=False)
2023-05-16 13:49:42,850:INFO:Creating final display dataframe.
2023-05-16 13:49:42,934:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                2756  
1                                             Species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 6)  
5                                            (150, 6)  
6                                            (105, 6)  
7                                             (45, 6)  
8                                                   5  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               607a  
2023-05-16 13:49:43,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:43,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:43,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:43,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:43,102:INFO:setup() successfully completed in 0.95s...............
2023-05-16 13:49:51,115:INFO:PyCaret ClassificationExperiment
2023-05-16 13:49:51,115:INFO:Logging name: clf-default-name
2023-05-16 13:49:51,115:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:49:51,115:INFO:version 3.0.1
2023-05-16 13:49:51,115:INFO:Initializing setup()
2023-05-16 13:49:51,115:INFO:self.USI: 3c5d
2023-05-16 13:49:51,115:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'X_train', 'fold_generator', 'exp_name_log', 'exp_id', 'y', 'y_train', 'fold_shuffle_param', '_ml_usecase', 'USI', 'idx', 'html_param', 'gpu_param', 'y_test', 'is_multiclass', 'X_test', 'logging_param', 'memory', 'X', 'fold_groups_param', '_available_plots', 'pipeline', 'fix_imbalance', 'seed', 'n_jobs_param', 'log_plots_param', 'target_param'}
2023-05-16 13:49:51,115:INFO:Checking environment
2023-05-16 13:49:51,115:INFO:python_version: 3.9.13
2023-05-16 13:49:51,115:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:49:51,115:INFO:machine: AMD64
2023-05-16 13:49:51,116:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:49:51,116:INFO:Memory: svmem(total=7968444416, available=2298576896, percent=71.2, used=5669867520, free=2298576896)
2023-05-16 13:49:51,116:INFO:Physical Core: 6
2023-05-16 13:49:51,116:INFO:Logical Core: 12
2023-05-16 13:49:51,116:INFO:Checking libraries
2023-05-16 13:49:51,116:INFO:System:
2023-05-16 13:49:51,116:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:49:51,116:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:49:51,116:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:49:51,116:INFO:PyCaret required dependencies:
2023-05-16 13:49:51,116:INFO:                 pip: 22.2.2
2023-05-16 13:49:51,116:INFO:          setuptools: 63.4.1
2023-05-16 13:49:51,116:INFO:             pycaret: 3.0.1
2023-05-16 13:49:51,116:INFO:             IPython: 7.31.1
2023-05-16 13:49:51,116:INFO:          ipywidgets: 7.6.5
2023-05-16 13:49:51,116:INFO:                tqdm: 4.64.1
2023-05-16 13:49:51,116:INFO:               numpy: 1.21.6
2023-05-16 13:49:51,116:INFO:              pandas: 1.4.4
2023-05-16 13:49:51,116:INFO:              jinja2: 2.11.3
2023-05-16 13:49:51,116:INFO:               scipy: 1.9.1
2023-05-16 13:49:51,116:INFO:              joblib: 1.2.0
2023-05-16 13:49:51,116:INFO:             sklearn: 1.0.2
2023-05-16 13:49:51,117:INFO:                pyod: 1.0.9
2023-05-16 13:49:51,117:INFO:            imblearn: 0.10.1
2023-05-16 13:49:51,117:INFO:   category_encoders: 2.6.1
2023-05-16 13:49:51,117:INFO:            lightgbm: 3.3.5
2023-05-16 13:49:51,117:INFO:               numba: 0.55.1
2023-05-16 13:49:51,117:INFO:            requests: 2.28.1
2023-05-16 13:49:51,117:INFO:          matplotlib: 3.5.2
2023-05-16 13:49:51,117:INFO:          scikitplot: 0.3.7
2023-05-16 13:49:51,117:INFO:         yellowbrick: 1.5
2023-05-16 13:49:51,117:INFO:              plotly: 5.9.0
2023-05-16 13:49:51,117:INFO:             kaleido: 0.2.1
2023-05-16 13:49:51,117:INFO:         statsmodels: 0.13.2
2023-05-16 13:49:51,117:INFO:              sktime: 0.17.0
2023-05-16 13:49:51,118:INFO:               tbats: 1.1.3
2023-05-16 13:49:51,118:INFO:            pmdarima: 2.0.3
2023-05-16 13:49:51,118:INFO:              psutil: 5.9.0
2023-05-16 13:49:51,118:INFO:PyCaret optional dependencies:
2023-05-16 13:49:51,118:INFO:                shap: Not installed
2023-05-16 13:49:51,118:INFO:           interpret: Not installed
2023-05-16 13:49:51,118:INFO:                umap: Not installed
2023-05-16 13:49:51,118:INFO:    pandas_profiling: Not installed
2023-05-16 13:49:51,118:INFO:  explainerdashboard: Not installed
2023-05-16 13:49:51,118:INFO:             autoviz: Not installed
2023-05-16 13:49:51,118:INFO:           fairlearn: Not installed
2023-05-16 13:49:51,118:INFO:             xgboost: Not installed
2023-05-16 13:49:51,118:INFO:            catboost: Not installed
2023-05-16 13:49:51,118:INFO:              kmodes: Not installed
2023-05-16 13:49:51,118:INFO:             mlxtend: Not installed
2023-05-16 13:49:51,118:INFO:       statsforecast: Not installed
2023-05-16 13:49:51,118:INFO:        tune_sklearn: Not installed
2023-05-16 13:49:51,118:INFO:                 ray: Not installed
2023-05-16 13:49:51,118:INFO:            hyperopt: Not installed
2023-05-16 13:49:51,118:INFO:              optuna: Not installed
2023-05-16 13:49:51,118:INFO:               skopt: Not installed
2023-05-16 13:49:51,118:INFO:              mlflow: Not installed
2023-05-16 13:49:51,118:INFO:              gradio: Not installed
2023-05-16 13:49:51,118:INFO:             fastapi: Not installed
2023-05-16 13:49:51,118:INFO:             uvicorn: Not installed
2023-05-16 13:49:51,118:INFO:              m2cgen: Not installed
2023-05-16 13:49:51,118:INFO:           evidently: Not installed
2023-05-16 13:49:51,119:INFO:               fugue: Not installed
2023-05-16 13:49:51,119:INFO:           streamlit: 1.20.0
2023-05-16 13:49:51,119:INFO:             prophet: Not installed
2023-05-16 13:49:51,119:INFO:None
2023-05-16 13:49:51,119:INFO:Set up data.
2023-05-16 13:49:51,123:INFO:Set up train/test split.
2023-05-16 13:49:51,126:INFO:Set up index.
2023-05-16 13:49:51,126:INFO:Set up folding strategy.
2023-05-16 13:49:51,127:INFO:Assigning column types.
2023-05-16 13:49:51,129:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:49:51,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:49:51,177:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:51,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:49:51,255:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:51,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,284:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:49:51,331:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:51,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:49:51,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,441:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:49:51,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,594:INFO:Preparing preprocessing pipeline...
2023-05-16 13:49:51,595:INFO:Set up label encoding.
2023-05-16 13:49:51,595:INFO:Set up simple imputation.
2023-05-16 13:49:51,618:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:49:51,621:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Id', 'SepalLengthCm',
                                             'SepalWidthCm', 'PetalLengthCm',
                                             'PetalWidthCm'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0)))],
         verbose=False)
2023-05-16 13:49:51,621:INFO:Creating final display dataframe.
2023-05-16 13:49:51,693:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                4402  
1                                             Species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 6)  
5                                            (150, 6)  
6                                            (105, 6)  
7                                             (45, 6)  
8                                                   5  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               3c5d  
2023-05-16 13:49:51,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:49:51,859:INFO:setup() successfully completed in 0.85s...............
2023-05-16 13:49:51,941:INFO:Initializing compare_models()
2023-05-16 13:49:51,941:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:49:51,941:INFO:Checking exceptions
2023-05-16 13:49:51,944:INFO:Preparing display monitor
2023-05-16 13:49:51,981:INFO:Initializing Logistic Regression
2023-05-16 13:49:51,981:INFO:Total runtime is 0.0 minutes
2023-05-16 13:49:51,985:INFO:SubProcess create_model() called ==================================
2023-05-16 13:49:51,985:INFO:Initializing create_model()
2023-05-16 13:49:51,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:49:51,986:INFO:Checking exceptions
2023-05-16 13:49:51,986:INFO:Importing libraries
2023-05-16 13:49:51,986:INFO:Copying training dataset
2023-05-16 13:49:51,991:INFO:Defining folds
2023-05-16 13:49:51,991:INFO:Declaring metric variables
2023-05-16 13:49:51,995:INFO:Importing untrained model
2023-05-16 13:49:52,001:INFO:Logistic Regression Imported successfully
2023-05-16 13:49:52,009:INFO:Starting cross validation
2023-05-16 13:49:52,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:07,450:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,453:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,456:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,478:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,480:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,483:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,568:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,574:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,577:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,583:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,586:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,594:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,615:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,618:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,621:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,720:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,724:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,726:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,870:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,876:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,880:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,891:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,894:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,897:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,961:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,965:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:07,970:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:08,016:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:08,019:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:08,020:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:08,652:INFO:Calculating mean and std
2023-05-16 13:50:08,654:INFO:Creating metrics dataframe
2023-05-16 13:50:08,834:INFO:Uploading results into container
2023-05-16 13:50:08,835:INFO:Uploading model into container now
2023-05-16 13:50:08,837:INFO:_master_model_container: 1
2023-05-16 13:50:08,837:INFO:_display_container: 2
2023-05-16 13:50:08,837:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:50:08,837:INFO:create_model() successfully completed......................................
2023-05-16 13:50:08,991:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:08,992:INFO:Creating metrics dataframe
2023-05-16 13:50:09,001:INFO:Initializing K Neighbors Classifier
2023-05-16 13:50:09,001:INFO:Total runtime is 0.28367082675298055 minutes
2023-05-16 13:50:09,004:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:09,006:INFO:Initializing create_model()
2023-05-16 13:50:09,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:09,006:INFO:Checking exceptions
2023-05-16 13:50:09,006:INFO:Importing libraries
2023-05-16 13:50:09,006:INFO:Copying training dataset
2023-05-16 13:50:09,012:INFO:Defining folds
2023-05-16 13:50:09,012:INFO:Declaring metric variables
2023-05-16 13:50:09,019:INFO:Importing untrained model
2023-05-16 13:50:09,025:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:50:09,037:INFO:Starting cross validation
2023-05-16 13:50:09,039:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:09,222:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,231:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,235:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,250:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,276:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,280:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,291:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,298:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,301:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,301:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:09,304:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,318:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,320:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,324:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,324:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,328:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,333:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,342:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,347:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,350:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,363:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,364:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,367:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,369:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,370:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,385:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,388:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,388:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,390:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:09,391:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:13,508:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:13,537:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:50:13,548:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:13,550:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:13,552:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:13,585:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:13,587:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:13,589:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:13,682:INFO:Calculating mean and std
2023-05-16 13:50:13,685:INFO:Creating metrics dataframe
2023-05-16 13:50:13,892:INFO:Uploading results into container
2023-05-16 13:50:13,893:INFO:Uploading model into container now
2023-05-16 13:50:13,894:INFO:_master_model_container: 2
2023-05-16 13:50:13,894:INFO:_display_container: 2
2023-05-16 13:50:13,894:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:50:13,894:INFO:create_model() successfully completed......................................
2023-05-16 13:50:14,088:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:14,088:INFO:Creating metrics dataframe
2023-05-16 13:50:14,099:INFO:Initializing Naive Bayes
2023-05-16 13:50:14,099:INFO:Total runtime is 0.36863605976104735 minutes
2023-05-16 13:50:14,104:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:14,104:INFO:Initializing create_model()
2023-05-16 13:50:14,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:14,104:INFO:Checking exceptions
2023-05-16 13:50:14,105:INFO:Importing libraries
2023-05-16 13:50:14,105:INFO:Copying training dataset
2023-05-16 13:50:14,112:INFO:Defining folds
2023-05-16 13:50:14,112:INFO:Declaring metric variables
2023-05-16 13:50:14,120:INFO:Importing untrained model
2023-05-16 13:50:14,127:INFO:Naive Bayes Imported successfully
2023-05-16 13:50:14,138:INFO:Starting cross validation
2023-05-16 13:50:14,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:14,314:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,315:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,317:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,317:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,320:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,320:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,323:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,328:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,331:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,344:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,351:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,354:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,359:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,361:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,361:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,363:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,364:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,365:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,366:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,367:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,368:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,370:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,373:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,396:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,399:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,400:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,401:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,402:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:14,404:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:15,331:INFO:Calculating mean and std
2023-05-16 13:50:15,333:INFO:Creating metrics dataframe
2023-05-16 13:50:15,513:INFO:Uploading results into container
2023-05-16 13:50:15,515:INFO:Uploading model into container now
2023-05-16 13:50:15,516:INFO:_master_model_container: 3
2023-05-16 13:50:15,516:INFO:_display_container: 2
2023-05-16 13:50:15,517:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:50:15,517:INFO:create_model() successfully completed......................................
2023-05-16 13:50:15,805:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:15,806:INFO:Creating metrics dataframe
2023-05-16 13:50:15,817:INFO:Initializing Decision Tree Classifier
2023-05-16 13:50:15,817:INFO:Total runtime is 0.3972570856412252 minutes
2023-05-16 13:50:15,822:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:15,824:INFO:Initializing create_model()
2023-05-16 13:50:15,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:15,824:INFO:Checking exceptions
2023-05-16 13:50:15,824:INFO:Importing libraries
2023-05-16 13:50:15,824:INFO:Copying training dataset
2023-05-16 13:50:15,833:INFO:Defining folds
2023-05-16 13:50:15,833:INFO:Declaring metric variables
2023-05-16 13:50:15,840:INFO:Importing untrained model
2023-05-16 13:50:15,845:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:50:15,857:INFO:Starting cross validation
2023-05-16 13:50:15,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:15,994:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:15,998:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,000:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,002:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,006:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,008:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,036:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,040:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,042:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,044:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,047:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,053:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,060:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,062:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,068:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,071:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,071:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,074:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,080:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,086:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,097:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,101:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,103:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,104:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,105:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:16,107:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,014:INFO:Calculating mean and std
2023-05-16 13:50:17,016:INFO:Creating metrics dataframe
2023-05-16 13:50:17,191:INFO:Uploading results into container
2023-05-16 13:50:17,191:INFO:Uploading model into container now
2023-05-16 13:50:17,192:INFO:_master_model_container: 4
2023-05-16 13:50:17,192:INFO:_display_container: 2
2023-05-16 13:50:17,193:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4402, splitter='best')
2023-05-16 13:50:17,193:INFO:create_model() successfully completed......................................
2023-05-16 13:50:17,339:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:17,339:INFO:Creating metrics dataframe
2023-05-16 13:50:17,349:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:50:17,349:INFO:Total runtime is 0.42280084689458214 minutes
2023-05-16 13:50:17,353:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:17,353:INFO:Initializing create_model()
2023-05-16 13:50:17,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:17,354:INFO:Checking exceptions
2023-05-16 13:50:17,354:INFO:Importing libraries
2023-05-16 13:50:17,354:INFO:Copying training dataset
2023-05-16 13:50:17,360:INFO:Defining folds
2023-05-16 13:50:17,361:INFO:Declaring metric variables
2023-05-16 13:50:17,368:INFO:Importing untrained model
2023-05-16 13:50:17,374:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:50:17,386:INFO:Starting cross validation
2023-05-16 13:50:17,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:17,511:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,513:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,516:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,519:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,521:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,548:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,555:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,558:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,562:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,565:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,578:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,581:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,586:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,588:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,590:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,591:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,591:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,596:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,598:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,604:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,605:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,608:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,609:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,610:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,612:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,614:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,622:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,623:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,624:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,625:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,626:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,627:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,629:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,639:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,640:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,642:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,644:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,644:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,655:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,656:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,659:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,660:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,662:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,664:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:50:17,665:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,668:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:17,670:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:17,671:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:18,477:INFO:Calculating mean and std
2023-05-16 13:50:18,478:INFO:Creating metrics dataframe
2023-05-16 13:50:18,658:INFO:Uploading results into container
2023-05-16 13:50:18,660:INFO:Uploading model into container now
2023-05-16 13:50:18,661:INFO:_master_model_container: 5
2023-05-16 13:50:18,661:INFO:_display_container: 2
2023-05-16 13:50:18,662:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4402, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:50:18,662:INFO:create_model() successfully completed......................................
2023-05-16 13:50:18,822:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:18,822:INFO:Creating metrics dataframe
2023-05-16 13:50:18,832:INFO:Initializing Ridge Classifier
2023-05-16 13:50:18,832:INFO:Total runtime is 0.4475131630897522 minutes
2023-05-16 13:50:18,837:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:18,838:INFO:Initializing create_model()
2023-05-16 13:50:18,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:18,838:INFO:Checking exceptions
2023-05-16 13:50:18,838:INFO:Importing libraries
2023-05-16 13:50:18,838:INFO:Copying training dataset
2023-05-16 13:50:18,844:INFO:Defining folds
2023-05-16 13:50:18,845:INFO:Declaring metric variables
2023-05-16 13:50:18,852:INFO:Importing untrained model
2023-05-16 13:50:18,857:INFO:Ridge Classifier Imported successfully
2023-05-16 13:50:18,867:INFO:Starting cross validation
2023-05-16 13:50:18,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:19,028:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,031:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,036:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,040:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,043:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,045:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,045:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,046:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,050:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,050:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,052:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,052:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,071:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,073:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,074:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,074:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,075:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,075:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,075:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,077:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,079:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,079:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,079:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,080:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,082:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,085:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,096:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,097:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,100:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,110:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,111:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,114:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,118:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,118:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:50:19,120:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,122:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,123:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:19,983:INFO:Calculating mean and std
2023-05-16 13:50:19,985:INFO:Creating metrics dataframe
2023-05-16 13:50:20,163:INFO:Uploading results into container
2023-05-16 13:50:20,164:INFO:Uploading model into container now
2023-05-16 13:50:20,164:INFO:_master_model_container: 6
2023-05-16 13:50:20,164:INFO:_display_container: 2
2023-05-16 13:50:20,165:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4402, solver='auto', tol=0.001)
2023-05-16 13:50:20,165:INFO:create_model() successfully completed......................................
2023-05-16 13:50:20,327:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:20,327:INFO:Creating metrics dataframe
2023-05-16 13:50:20,341:INFO:Initializing Random Forest Classifier
2023-05-16 13:50:20,341:INFO:Total runtime is 0.47265914678573606 minutes
2023-05-16 13:50:20,345:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:20,346:INFO:Initializing create_model()
2023-05-16 13:50:20,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:20,346:INFO:Checking exceptions
2023-05-16 13:50:20,346:INFO:Importing libraries
2023-05-16 13:50:20,347:INFO:Copying training dataset
2023-05-16 13:50:20,352:INFO:Defining folds
2023-05-16 13:50:20,353:INFO:Declaring metric variables
2023-05-16 13:50:20,360:INFO:Importing untrained model
2023-05-16 13:50:20,365:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:50:20,377:INFO:Starting cross validation
2023-05-16 13:50:20,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:21,285:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,286:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,289:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,289:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,292:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,370:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,371:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,372:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,374:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,375:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,373:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,377:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,378:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,378:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,380:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,380:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,384:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,398:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,401:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,405:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,449:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,451:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,454:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,485:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,488:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,490:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,694:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,695:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:21,696:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,361:INFO:Calculating mean and std
2023-05-16 13:50:22,362:INFO:Creating metrics dataframe
2023-05-16 13:50:22,545:INFO:Uploading results into container
2023-05-16 13:50:22,546:INFO:Uploading model into container now
2023-05-16 13:50:22,547:INFO:_master_model_container: 7
2023-05-16 13:50:22,547:INFO:_display_container: 2
2023-05-16 13:50:22,548:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4402, verbose=0, warm_start=False)
2023-05-16 13:50:22,548:INFO:create_model() successfully completed......................................
2023-05-16 13:50:22,693:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:22,693:INFO:Creating metrics dataframe
2023-05-16 13:50:22,704:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:50:22,704:INFO:Total runtime is 0.5120525677998861 minutes
2023-05-16 13:50:22,709:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:22,710:INFO:Initializing create_model()
2023-05-16 13:50:22,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:22,710:INFO:Checking exceptions
2023-05-16 13:50:22,710:INFO:Importing libraries
2023-05-16 13:50:22,710:INFO:Copying training dataset
2023-05-16 13:50:22,715:INFO:Defining folds
2023-05-16 13:50:22,715:INFO:Declaring metric variables
2023-05-16 13:50:22,722:INFO:Importing untrained model
2023-05-16 13:50:22,729:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:50:22,740:INFO:Starting cross validation
2023-05-16 13:50:22,742:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:22,885:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,888:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,889:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,891:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,893:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,895:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,901:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,904:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,906:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,928:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,931:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,932:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,935:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,935:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,937:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,939:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,939:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,945:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,947:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,949:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,952:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,955:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,957:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,968:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,970:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,971:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,972:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,973:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:22,974:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:23,850:INFO:Calculating mean and std
2023-05-16 13:50:23,853:INFO:Creating metrics dataframe
2023-05-16 13:50:24,034:INFO:Uploading results into container
2023-05-16 13:50:24,035:INFO:Uploading model into container now
2023-05-16 13:50:24,035:INFO:_master_model_container: 8
2023-05-16 13:50:24,037:INFO:_display_container: 2
2023-05-16 13:50:24,037:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:50:24,037:INFO:create_model() successfully completed......................................
2023-05-16 13:50:24,183:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:24,183:INFO:Creating metrics dataframe
2023-05-16 13:50:24,194:INFO:Initializing Ada Boost Classifier
2023-05-16 13:50:24,194:INFO:Total runtime is 0.5368729790051778 minutes
2023-05-16 13:50:24,199:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:24,199:INFO:Initializing create_model()
2023-05-16 13:50:24,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:24,199:INFO:Checking exceptions
2023-05-16 13:50:24,199:INFO:Importing libraries
2023-05-16 13:50:24,199:INFO:Copying training dataset
2023-05-16 13:50:24,205:INFO:Defining folds
2023-05-16 13:50:24,206:INFO:Declaring metric variables
2023-05-16 13:50:24,210:INFO:Importing untrained model
2023-05-16 13:50:24,217:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:50:24,229:INFO:Starting cross validation
2023-05-16 13:50:24,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:24,701:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,704:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,706:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,720:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,723:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,725:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,729:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,732:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,734:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,735:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,738:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,740:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,741:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,743:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,758:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,761:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,764:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,768:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,770:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,773:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,789:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,794:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,796:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,802:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,804:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,806:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,809:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,810:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:24,813:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:25,779:INFO:Calculating mean and std
2023-05-16 13:50:25,781:INFO:Creating metrics dataframe
2023-05-16 13:50:25,998:INFO:Uploading results into container
2023-05-16 13:50:25,999:INFO:Uploading model into container now
2023-05-16 13:50:26,000:INFO:_master_model_container: 9
2023-05-16 13:50:26,000:INFO:_display_container: 2
2023-05-16 13:50:26,001:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4402)
2023-05-16 13:50:26,001:INFO:create_model() successfully completed......................................
2023-05-16 13:50:26,151:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:26,151:INFO:Creating metrics dataframe
2023-05-16 13:50:26,164:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:50:26,165:INFO:Total runtime is 0.5697372794151306 minutes
2023-05-16 13:50:26,170:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:26,171:INFO:Initializing create_model()
2023-05-16 13:50:26,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:26,171:INFO:Checking exceptions
2023-05-16 13:50:26,171:INFO:Importing libraries
2023-05-16 13:50:26,171:INFO:Copying training dataset
2023-05-16 13:50:26,178:INFO:Defining folds
2023-05-16 13:50:26,179:INFO:Declaring metric variables
2023-05-16 13:50:26,184:INFO:Importing untrained model
2023-05-16 13:50:26,192:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:50:26,211:INFO:Starting cross validation
2023-05-16 13:50:26,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:27,371:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,374:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,376:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,376:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,378:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,379:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,388:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,391:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,395:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,410:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,412:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,415:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,419:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,421:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,424:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,424:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,425:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,426:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,428:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,430:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,431:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,460:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,461:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,463:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,463:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,465:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,465:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,467:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,470:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:27,472:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:28,437:INFO:Calculating mean and std
2023-05-16 13:50:28,439:INFO:Creating metrics dataframe
2023-05-16 13:50:28,655:INFO:Uploading results into container
2023-05-16 13:50:28,656:INFO:Uploading model into container now
2023-05-16 13:50:28,656:INFO:_master_model_container: 10
2023-05-16 13:50:28,656:INFO:_display_container: 2
2023-05-16 13:50:28,657:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4402, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:50:28,658:INFO:create_model() successfully completed......................................
2023-05-16 13:50:28,822:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:28,823:INFO:Creating metrics dataframe
2023-05-16 13:50:28,836:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:50:28,836:INFO:Total runtime is 0.6142462174097697 minutes
2023-05-16 13:50:28,840:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:28,842:INFO:Initializing create_model()
2023-05-16 13:50:28,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:28,842:INFO:Checking exceptions
2023-05-16 13:50:28,842:INFO:Importing libraries
2023-05-16 13:50:28,842:INFO:Copying training dataset
2023-05-16 13:50:28,848:INFO:Defining folds
2023-05-16 13:50:28,848:INFO:Declaring metric variables
2023-05-16 13:50:28,852:INFO:Importing untrained model
2023-05-16 13:50:28,857:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:50:28,868:INFO:Starting cross validation
2023-05-16 13:50:28,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:29,010:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,012:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,016:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,045:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,047:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,052:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,053:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,055:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,058:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,066:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,069:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,072:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,080:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,084:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,087:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,090:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,090:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,092:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,092:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,094:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,095:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,111:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,114:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,116:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,116:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,118:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,121:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,148:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,150:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:29,152:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:30,302:INFO:Calculating mean and std
2023-05-16 13:50:30,304:INFO:Creating metrics dataframe
2023-05-16 13:50:30,507:INFO:Uploading results into container
2023-05-16 13:50:30,509:INFO:Uploading model into container now
2023-05-16 13:50:30,509:INFO:_master_model_container: 11
2023-05-16 13:50:30,509:INFO:_display_container: 2
2023-05-16 13:50:30,509:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:50:30,510:INFO:create_model() successfully completed......................................
2023-05-16 13:50:30,721:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:30,722:INFO:Creating metrics dataframe
2023-05-16 13:50:30,738:INFO:Initializing Extra Trees Classifier
2023-05-16 13:50:30,738:INFO:Total runtime is 0.6459453940391541 minutes
2023-05-16 13:50:30,741:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:30,742:INFO:Initializing create_model()
2023-05-16 13:50:30,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:30,742:INFO:Checking exceptions
2023-05-16 13:50:30,743:INFO:Importing libraries
2023-05-16 13:50:30,743:INFO:Copying training dataset
2023-05-16 13:50:30,748:INFO:Defining folds
2023-05-16 13:50:30,748:INFO:Declaring metric variables
2023-05-16 13:50:30,753:INFO:Importing untrained model
2023-05-16 13:50:30,758:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:50:30,769:INFO:Starting cross validation
2023-05-16 13:50:30,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:31,697:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,701:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,701:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,704:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,704:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,706:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,711:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,711:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,716:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,718:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,734:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,736:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,740:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,740:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,743:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,746:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,845:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,851:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,855:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,856:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,858:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,860:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,915:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,918:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,922:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,929:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,931:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:31,934:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:32,830:INFO:Calculating mean and std
2023-05-16 13:50:32,832:INFO:Creating metrics dataframe
2023-05-16 13:50:33,035:INFO:Uploading results into container
2023-05-16 13:50:33,037:INFO:Uploading model into container now
2023-05-16 13:50:33,037:INFO:_master_model_container: 12
2023-05-16 13:50:33,037:INFO:_display_container: 2
2023-05-16 13:50:33,038:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4402, verbose=0, warm_start=False)
2023-05-16 13:50:33,038:INFO:create_model() successfully completed......................................
2023-05-16 13:50:33,184:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:33,185:INFO:Creating metrics dataframe
2023-05-16 13:50:33,197:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:50:33,197:INFO:Total runtime is 0.6869326869646708 minutes
2023-05-16 13:50:33,200:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:33,201:INFO:Initializing create_model()
2023-05-16 13:50:33,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:33,201:INFO:Checking exceptions
2023-05-16 13:50:33,201:INFO:Importing libraries
2023-05-16 13:50:33,201:INFO:Copying training dataset
2023-05-16 13:50:33,207:INFO:Defining folds
2023-05-16 13:50:33,208:INFO:Declaring metric variables
2023-05-16 13:50:33,212:INFO:Importing untrained model
2023-05-16 13:50:33,218:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:50:33,227:INFO:Starting cross validation
2023-05-16 13:50:33,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:36,560:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,564:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,568:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,572:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,579:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,581:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,582:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,585:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,589:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,626:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,631:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,634:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,638:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,642:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,649:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,665:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,669:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,673:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,765:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,768:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,770:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,860:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,862:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,864:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,882:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,885:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:36,888:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:37,015:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:37,018:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:37,019:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:37,752:INFO:Calculating mean and std
2023-05-16 13:50:37,753:INFO:Creating metrics dataframe
2023-05-16 13:50:37,950:INFO:Uploading results into container
2023-05-16 13:50:37,951:INFO:Uploading model into container now
2023-05-16 13:50:37,952:INFO:_master_model_container: 13
2023-05-16 13:50:37,952:INFO:_display_container: 2
2023-05-16 13:50:37,952:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4402, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:50:37,952:INFO:create_model() successfully completed......................................
2023-05-16 13:50:38,100:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:38,100:INFO:Creating metrics dataframe
2023-05-16 13:50:38,114:INFO:Initializing Dummy Classifier
2023-05-16 13:50:38,114:INFO:Total runtime is 0.7688867568969726 minutes
2023-05-16 13:50:38,119:INFO:SubProcess create_model() called ==================================
2023-05-16 13:50:38,119:INFO:Initializing create_model()
2023-05-16 13:50:38,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022734EAD250>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:38,120:INFO:Checking exceptions
2023-05-16 13:50:38,120:INFO:Importing libraries
2023-05-16 13:50:38,120:INFO:Copying training dataset
2023-05-16 13:50:38,124:INFO:Defining folds
2023-05-16 13:50:38,125:INFO:Declaring metric variables
2023-05-16 13:50:38,129:INFO:Importing untrained model
2023-05-16 13:50:38,135:INFO:Dummy Classifier Imported successfully
2023-05-16 13:50:38,146:INFO:Starting cross validation
2023-05-16 13:50:38,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:50:38,260:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,262:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,264:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,265:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,268:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,269:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,271:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,311:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,315:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,317:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,318:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,320:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,322:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,325:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,326:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,328:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,329:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,330:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,331:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,334:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,337:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,338:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,340:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,341:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,343:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,344:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,345:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,353:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,355:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,357:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,358:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,359:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,359:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,360:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,362:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,370:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,372:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:38,375:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:50:38,378:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:50:39,403:INFO:Calculating mean and std
2023-05-16 13:50:39,405:INFO:Creating metrics dataframe
2023-05-16 13:50:39,616:INFO:Uploading results into container
2023-05-16 13:50:39,617:INFO:Uploading model into container now
2023-05-16 13:50:39,618:INFO:_master_model_container: 14
2023-05-16 13:50:39,619:INFO:_display_container: 2
2023-05-16 13:50:39,619:INFO:DummyClassifier(constant=None, random_state=4402, strategy='prior')
2023-05-16 13:50:39,619:INFO:create_model() successfully completed......................................
2023-05-16 13:50:39,837:INFO:SubProcess create_model() end ==================================
2023-05-16 13:50:39,837:INFO:Creating metrics dataframe
2023-05-16 13:50:39,873:INFO:Initializing create_model()
2023-05-16 13:50:39,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022735076A90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:50:39,874:INFO:Checking exceptions
2023-05-16 13:50:39,878:INFO:Importing libraries
2023-05-16 13:50:39,878:INFO:Copying training dataset
2023-05-16 13:50:39,885:INFO:Defining folds
2023-05-16 13:50:39,885:INFO:Declaring metric variables
2023-05-16 13:50:39,885:INFO:Importing untrained model
2023-05-16 13:50:39,885:INFO:Declaring custom model
2023-05-16 13:50:39,886:INFO:Logistic Regression Imported successfully
2023-05-16 13:50:39,886:INFO:Cross validation set to False
2023-05-16 13:50:39,886:INFO:Fitting Model
2023-05-16 13:50:40,119:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:50:40,119:INFO:create_model() successfully completed......................................
2023-05-16 13:50:40,300:INFO:_master_model_container: 14
2023-05-16 13:50:40,300:INFO:_display_container: 2
2023-05-16 13:50:40,301:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4402, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:50:40,301:INFO:compare_models() successfully completed......................................
2023-05-16 13:52:09,179:INFO:PyCaret ClassificationExperiment
2023-05-16 13:52:09,179:INFO:Logging name: clf-default-name
2023-05-16 13:52:09,179:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:52:09,179:INFO:version 3.0.1
2023-05-16 13:52:09,179:INFO:Initializing setup()
2023-05-16 13:52:09,179:INFO:self.USI: 3421
2023-05-16 13:52:09,179:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'X_train', 'fold_generator', 'exp_name_log', 'exp_id', 'y', 'y_train', 'fold_shuffle_param', '_ml_usecase', 'USI', 'idx', 'html_param', 'gpu_param', 'y_test', 'is_multiclass', 'X_test', 'logging_param', 'memory', 'X', 'fold_groups_param', '_available_plots', 'pipeline', 'fix_imbalance', 'seed', 'n_jobs_param', 'log_plots_param', 'target_param'}
2023-05-16 13:52:09,179:INFO:Checking environment
2023-05-16 13:52:09,179:INFO:python_version: 3.9.13
2023-05-16 13:52:09,179:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:52:09,179:INFO:machine: AMD64
2023-05-16 13:52:09,179:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:52:09,179:INFO:Memory: svmem(total=7968444416, available=783962112, percent=90.2, used=7184482304, free=783962112)
2023-05-16 13:52:09,179:INFO:Physical Core: 6
2023-05-16 13:52:09,179:INFO:Logical Core: 12
2023-05-16 13:52:09,180:INFO:Checking libraries
2023-05-16 13:52:09,180:INFO:System:
2023-05-16 13:52:09,180:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:52:09,180:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:52:09,180:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:52:09,180:INFO:PyCaret required dependencies:
2023-05-16 13:52:09,180:INFO:                 pip: 22.2.2
2023-05-16 13:52:09,180:INFO:          setuptools: 63.4.1
2023-05-16 13:52:09,180:INFO:             pycaret: 3.0.1
2023-05-16 13:52:09,180:INFO:             IPython: 7.31.1
2023-05-16 13:52:09,180:INFO:          ipywidgets: 7.6.5
2023-05-16 13:52:09,180:INFO:                tqdm: 4.64.1
2023-05-16 13:52:09,180:INFO:               numpy: 1.21.6
2023-05-16 13:52:09,180:INFO:              pandas: 1.4.4
2023-05-16 13:52:09,180:INFO:              jinja2: 2.11.3
2023-05-16 13:52:09,180:INFO:               scipy: 1.9.1
2023-05-16 13:52:09,180:INFO:              joblib: 1.2.0
2023-05-16 13:52:09,180:INFO:             sklearn: 1.0.2
2023-05-16 13:52:09,180:INFO:                pyod: 1.0.9
2023-05-16 13:52:09,180:INFO:            imblearn: 0.10.1
2023-05-16 13:52:09,180:INFO:   category_encoders: 2.6.1
2023-05-16 13:52:09,180:INFO:            lightgbm: 3.3.5
2023-05-16 13:52:09,180:INFO:               numba: 0.55.1
2023-05-16 13:52:09,180:INFO:            requests: 2.28.1
2023-05-16 13:52:09,180:INFO:          matplotlib: 3.5.2
2023-05-16 13:52:09,180:INFO:          scikitplot: 0.3.7
2023-05-16 13:52:09,180:INFO:         yellowbrick: 1.5
2023-05-16 13:52:09,180:INFO:              plotly: 5.9.0
2023-05-16 13:52:09,181:INFO:             kaleido: 0.2.1
2023-05-16 13:52:09,181:INFO:         statsmodels: 0.13.2
2023-05-16 13:52:09,181:INFO:              sktime: 0.17.0
2023-05-16 13:52:09,181:INFO:               tbats: 1.1.3
2023-05-16 13:52:09,181:INFO:            pmdarima: 2.0.3
2023-05-16 13:52:09,181:INFO:              psutil: 5.9.0
2023-05-16 13:52:09,181:INFO:PyCaret optional dependencies:
2023-05-16 13:52:09,181:INFO:                shap: Not installed
2023-05-16 13:52:09,181:INFO:           interpret: Not installed
2023-05-16 13:52:09,181:INFO:                umap: Not installed
2023-05-16 13:52:09,181:INFO:    pandas_profiling: Not installed
2023-05-16 13:52:09,181:INFO:  explainerdashboard: Not installed
2023-05-16 13:52:09,181:INFO:             autoviz: Not installed
2023-05-16 13:52:09,181:INFO:           fairlearn: Not installed
2023-05-16 13:52:09,181:INFO:             xgboost: Not installed
2023-05-16 13:52:09,181:INFO:            catboost: Not installed
2023-05-16 13:52:09,181:INFO:              kmodes: Not installed
2023-05-16 13:52:09,181:INFO:             mlxtend: Not installed
2023-05-16 13:52:09,181:INFO:       statsforecast: Not installed
2023-05-16 13:52:09,181:INFO:        tune_sklearn: Not installed
2023-05-16 13:52:09,181:INFO:                 ray: Not installed
2023-05-16 13:52:09,181:INFO:            hyperopt: Not installed
2023-05-16 13:52:09,181:INFO:              optuna: Not installed
2023-05-16 13:52:09,181:INFO:               skopt: Not installed
2023-05-16 13:52:09,181:INFO:              mlflow: Not installed
2023-05-16 13:52:09,181:INFO:              gradio: Not installed
2023-05-16 13:52:09,181:INFO:             fastapi: Not installed
2023-05-16 13:52:09,182:INFO:             uvicorn: Not installed
2023-05-16 13:52:09,182:INFO:              m2cgen: Not installed
2023-05-16 13:52:09,182:INFO:           evidently: Not installed
2023-05-16 13:52:09,182:INFO:               fugue: Not installed
2023-05-16 13:52:09,182:INFO:           streamlit: 1.20.0
2023-05-16 13:52:09,182:INFO:             prophet: Not installed
2023-05-16 13:52:09,182:INFO:None
2023-05-16 13:52:09,182:INFO:Set up data.
2023-05-16 13:52:09,186:INFO:Set up train/test split.
2023-05-16 13:52:09,188:INFO:Set up index.
2023-05-16 13:52:09,189:INFO:Set up folding strategy.
2023-05-16 13:52:09,189:INFO:Assigning column types.
2023-05-16 13:52:09,191:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:52:09,237:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:52:09,238:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:52:09,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:52:09,313:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:52:09,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,342:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:52:09,388:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:52:09,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,464:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:52:09,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,493:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:52:09,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,645:INFO:Preparing preprocessing pipeline...
2023-05-16 13:52:09,646:INFO:Set up label encoding.
2023-05-16 13:52:09,646:INFO:Set up simple imputation.
2023-05-16 13:52:09,664:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:52:09,667:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Id', 'SepalLengthCm',
                                             'SepalWidthCm', 'PetalLengthCm',
                                             'PetalWidthCm'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0)))],
         verbose=False)
2023-05-16 13:52:09,668:INFO:Creating final display dataframe.
2023-05-16 13:52:09,729:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                5998  
1                                             Species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 6)  
5                                            (150, 6)  
6                                            (105, 6)  
7                                             (45, 6)  
8                                                   5  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               3421  
2023-05-16 13:52:09,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:52:09,889:INFO:setup() successfully completed in 0.82s...............
2023-05-16 13:52:09,890:INFO:Initializing compare_models()
2023-05-16 13:52:09,890:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:52:09,890:INFO:Checking exceptions
2023-05-16 13:52:09,892:INFO:Preparing display monitor
2023-05-16 13:52:09,923:INFO:Initializing Logistic Regression
2023-05-16 13:52:09,924:INFO:Total runtime is 1.679658889770508e-05 minutes
2023-05-16 13:52:09,927:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:09,927:INFO:Initializing create_model()
2023-05-16 13:52:09,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:09,928:INFO:Checking exceptions
2023-05-16 13:52:09,928:INFO:Importing libraries
2023-05-16 13:52:09,928:INFO:Copying training dataset
2023-05-16 13:52:09,931:INFO:Defining folds
2023-05-16 13:52:09,932:INFO:Declaring metric variables
2023-05-16 13:52:09,936:INFO:Importing untrained model
2023-05-16 13:52:09,941:INFO:Logistic Regression Imported successfully
2023-05-16 13:52:09,948:INFO:Starting cross validation
2023-05-16 13:52:09,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:10,278:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,280:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,284:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,319:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,321:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,323:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,327:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,331:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,333:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,334:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,336:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,338:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,348:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,350:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,352:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,354:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,357:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,359:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,367:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,368:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,369:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,370:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,371:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,373:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,400:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,402:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,404:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,450:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,452:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:10,454:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:11,434:INFO:Calculating mean and std
2023-05-16 13:52:11,436:INFO:Creating metrics dataframe
2023-05-16 13:52:11,652:INFO:Uploading results into container
2023-05-16 13:52:11,653:INFO:Uploading model into container now
2023-05-16 13:52:11,654:INFO:_master_model_container: 1
2023-05-16 13:52:11,654:INFO:_display_container: 2
2023-05-16 13:52:11,655:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5998, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:52:11,656:INFO:create_model() successfully completed......................................
2023-05-16 13:52:11,834:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:11,835:INFO:Creating metrics dataframe
2023-05-16 13:52:11,845:INFO:Initializing K Neighbors Classifier
2023-05-16 13:52:11,845:INFO:Total runtime is 0.032024232546488444 minutes
2023-05-16 13:52:11,851:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:11,852:INFO:Initializing create_model()
2023-05-16 13:52:11,852:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:11,852:INFO:Checking exceptions
2023-05-16 13:52:11,853:INFO:Importing libraries
2023-05-16 13:52:11,853:INFO:Copying training dataset
2023-05-16 13:52:11,859:INFO:Defining folds
2023-05-16 13:52:11,860:INFO:Declaring metric variables
2023-05-16 13:52:11,864:INFO:Importing untrained model
2023-05-16 13:52:11,870:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:52:11,881:INFO:Starting cross validation
2023-05-16 13:52:11,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:12,043:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,046:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,053:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,069:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,103:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,109:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,115:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,120:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,135:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,136:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,138:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,140:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,143:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,143:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,151:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,154:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,157:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,176:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,176:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:52:12,178:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,181:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,183:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,186:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,192:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,196:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,198:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,199:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,200:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,203:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,203:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,209:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,212:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,218:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,256:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,258:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,261:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,278:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,280:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:12,286:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:13,376:INFO:Calculating mean and std
2023-05-16 13:52:13,378:INFO:Creating metrics dataframe
2023-05-16 13:52:13,607:INFO:Uploading results into container
2023-05-16 13:52:13,608:INFO:Uploading model into container now
2023-05-16 13:52:13,608:INFO:_master_model_container: 2
2023-05-16 13:52:13,609:INFO:_display_container: 2
2023-05-16 13:52:13,609:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:52:13,609:INFO:create_model() successfully completed......................................
2023-05-16 13:52:13,820:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:13,821:INFO:Creating metrics dataframe
2023-05-16 13:52:13,831:INFO:Initializing Naive Bayes
2023-05-16 13:52:13,831:INFO:Total runtime is 0.06513131856918335 minutes
2023-05-16 13:52:13,836:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:13,836:INFO:Initializing create_model()
2023-05-16 13:52:13,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:13,837:INFO:Checking exceptions
2023-05-16 13:52:13,837:INFO:Importing libraries
2023-05-16 13:52:13,837:INFO:Copying training dataset
2023-05-16 13:52:13,844:INFO:Defining folds
2023-05-16 13:52:13,844:INFO:Declaring metric variables
2023-05-16 13:52:13,850:INFO:Importing untrained model
2023-05-16 13:52:13,856:INFO:Naive Bayes Imported successfully
2023-05-16 13:52:13,865:INFO:Starting cross validation
2023-05-16 13:52:13,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:14,006:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,009:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,011:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,052:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,055:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,058:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,062:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,066:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,066:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,069:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,070:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,075:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,079:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,080:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,082:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,099:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,104:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,110:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,113:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,113:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,116:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,118:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,138:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,141:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,143:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,146:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,149:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:14,151:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,187:INFO:Calculating mean and std
2023-05-16 13:52:15,188:INFO:Creating metrics dataframe
2023-05-16 13:52:15,425:INFO:Uploading results into container
2023-05-16 13:52:15,426:INFO:Uploading model into container now
2023-05-16 13:52:15,427:INFO:_master_model_container: 3
2023-05-16 13:52:15,427:INFO:_display_container: 2
2023-05-16 13:52:15,427:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:52:15,427:INFO:create_model() successfully completed......................................
2023-05-16 13:52:15,590:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:15,590:INFO:Creating metrics dataframe
2023-05-16 13:52:15,602:INFO:Initializing Decision Tree Classifier
2023-05-16 13:52:15,602:INFO:Total runtime is 0.09463689327239991 minutes
2023-05-16 13:52:15,606:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:15,607:INFO:Initializing create_model()
2023-05-16 13:52:15,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:15,607:INFO:Checking exceptions
2023-05-16 13:52:15,607:INFO:Importing libraries
2023-05-16 13:52:15,607:INFO:Copying training dataset
2023-05-16 13:52:15,612:INFO:Defining folds
2023-05-16 13:52:15,613:INFO:Declaring metric variables
2023-05-16 13:52:15,619:INFO:Importing untrained model
2023-05-16 13:52:15,625:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:52:15,635:INFO:Starting cross validation
2023-05-16 13:52:15,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:15,785:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,785:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,789:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,789:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,792:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,793:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,797:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,800:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,807:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,842:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,844:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,847:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,850:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,852:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,854:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,861:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,864:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,866:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,868:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,871:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,873:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,882:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,885:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,887:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,911:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,914:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,914:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,916:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:15,918:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:16,954:INFO:Calculating mean and std
2023-05-16 13:52:16,955:INFO:Creating metrics dataframe
2023-05-16 13:52:17,184:INFO:Uploading results into container
2023-05-16 13:52:17,185:INFO:Uploading model into container now
2023-05-16 13:52:17,185:INFO:_master_model_container: 4
2023-05-16 13:52:17,185:INFO:_display_container: 2
2023-05-16 13:52:17,186:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5998, splitter='best')
2023-05-16 13:52:17,186:INFO:create_model() successfully completed......................................
2023-05-16 13:52:17,282:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:17,282:INFO:Creating metrics dataframe
2023-05-16 13:52:17,292:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:52:17,292:INFO:Total runtime is 0.12281460762023927 minutes
2023-05-16 13:52:17,297:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:17,297:INFO:Initializing create_model()
2023-05-16 13:52:17,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:17,297:INFO:Checking exceptions
2023-05-16 13:52:17,297:INFO:Importing libraries
2023-05-16 13:52:17,297:INFO:Copying training dataset
2023-05-16 13:52:17,302:INFO:Defining folds
2023-05-16 13:52:17,302:INFO:Declaring metric variables
2023-05-16 13:52:17,307:INFO:Importing untrained model
2023-05-16 13:52:17,310:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:52:17,317:INFO:Starting cross validation
2023-05-16 13:52:17,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:17,410:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,411:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,413:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,414:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,415:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,418:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,418:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,420:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,421:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,422:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,423:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,425:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,427:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,428:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,429:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,434:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,435:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,438:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,439:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,440:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,457:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,459:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,461:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,463:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,464:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,471:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,472:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,472:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,473:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,475:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,475:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,476:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,476:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,477:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,477:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,480:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,481:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,483:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,484:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,485:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,489:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,490:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,492:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,493:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,494:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,501:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:52:17,503:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,504:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:17,505:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:17,506:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:18,507:INFO:Calculating mean and std
2023-05-16 13:52:18,509:INFO:Creating metrics dataframe
2023-05-16 13:52:18,739:INFO:Uploading results into container
2023-05-16 13:52:18,739:INFO:Uploading model into container now
2023-05-16 13:52:18,740:INFO:_master_model_container: 5
2023-05-16 13:52:18,741:INFO:_display_container: 2
2023-05-16 13:52:18,742:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5998, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:52:18,742:INFO:create_model() successfully completed......................................
2023-05-16 13:52:18,944:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:18,944:INFO:Creating metrics dataframe
2023-05-16 13:52:18,955:INFO:Initializing Ridge Classifier
2023-05-16 13:52:18,955:INFO:Total runtime is 0.15052512089411418 minutes
2023-05-16 13:52:18,959:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:18,960:INFO:Initializing create_model()
2023-05-16 13:52:18,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:18,960:INFO:Checking exceptions
2023-05-16 13:52:18,960:INFO:Importing libraries
2023-05-16 13:52:18,961:INFO:Copying training dataset
2023-05-16 13:52:18,967:INFO:Defining folds
2023-05-16 13:52:18,967:INFO:Declaring metric variables
2023-05-16 13:52:18,974:INFO:Importing untrained model
2023-05-16 13:52:18,981:INFO:Ridge Classifier Imported successfully
2023-05-16 13:52:18,993:INFO:Starting cross validation
2023-05-16 13:52:18,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:19,096:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,099:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,103:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,105:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,107:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,110:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,134:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,136:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,138:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,140:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,145:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,146:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,151:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,163:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,172:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,173:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,176:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,178:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,205:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,204:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,207:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,213:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,212:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,216:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,217:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,217:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,219:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,220:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,221:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,223:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,223:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,223:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,226:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:52:19,227:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,230:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,230:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:19,234:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:20,371:INFO:Calculating mean and std
2023-05-16 13:52:20,374:INFO:Creating metrics dataframe
2023-05-16 13:52:20,615:INFO:Uploading results into container
2023-05-16 13:52:20,616:INFO:Uploading model into container now
2023-05-16 13:52:20,617:INFO:_master_model_container: 6
2023-05-16 13:52:20,618:INFO:_display_container: 2
2023-05-16 13:52:20,618:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=5998, solver='auto', tol=0.001)
2023-05-16 13:52:20,619:INFO:create_model() successfully completed......................................
2023-05-16 13:52:20,853:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:20,853:INFO:Creating metrics dataframe
2023-05-16 13:52:20,869:INFO:Initializing Random Forest Classifier
2023-05-16 13:52:20,869:INFO:Total runtime is 0.18242540359497073 minutes
2023-05-16 13:52:20,875:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:20,875:INFO:Initializing create_model()
2023-05-16 13:52:20,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:20,877:INFO:Checking exceptions
2023-05-16 13:52:20,877:INFO:Importing libraries
2023-05-16 13:52:20,878:INFO:Copying training dataset
2023-05-16 13:52:20,883:INFO:Defining folds
2023-05-16 13:52:20,883:INFO:Declaring metric variables
2023-05-16 13:52:20,891:INFO:Importing untrained model
2023-05-16 13:52:20,897:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:52:20,918:INFO:Starting cross validation
2023-05-16 13:52:20,924:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:22,030:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,034:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,041:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,043:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,046:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,051:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,066:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,068:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,071:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,143:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,145:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,168:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,174:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,179:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,192:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,442:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,445:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,447:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,485:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,485:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,491:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,491:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,494:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,495:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,509:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,512:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,515:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,544:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,547:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:22,551:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:23,612:INFO:Calculating mean and std
2023-05-16 13:52:23,614:INFO:Creating metrics dataframe
2023-05-16 13:52:23,852:INFO:Uploading results into container
2023-05-16 13:52:23,854:INFO:Uploading model into container now
2023-05-16 13:52:23,854:INFO:_master_model_container: 7
2023-05-16 13:52:23,854:INFO:_display_container: 2
2023-05-16 13:52:23,854:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5998, verbose=0, warm_start=False)
2023-05-16 13:52:23,854:INFO:create_model() successfully completed......................................
2023-05-16 13:52:24,030:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:24,030:INFO:Creating metrics dataframe
2023-05-16 13:52:24,043:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:52:24,043:INFO:Total runtime is 0.23532427151997887 minutes
2023-05-16 13:52:24,048:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:24,048:INFO:Initializing create_model()
2023-05-16 13:52:24,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:24,048:INFO:Checking exceptions
2023-05-16 13:52:24,049:INFO:Importing libraries
2023-05-16 13:52:24,049:INFO:Copying training dataset
2023-05-16 13:52:24,054:INFO:Defining folds
2023-05-16 13:52:24,055:INFO:Declaring metric variables
2023-05-16 13:52:24,061:INFO:Importing untrained model
2023-05-16 13:52:24,065:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:52:24,079:INFO:Starting cross validation
2023-05-16 13:52:24,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:24,212:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,215:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,216:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,221:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,224:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,226:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,240:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,245:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,246:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,285:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,286:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,289:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,289:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,291:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,293:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,298:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,300:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,301:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,302:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,303:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,306:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,313:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,315:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,317:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,322:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,325:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,327:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,331:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,333:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:24,335:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:25,428:INFO:Calculating mean and std
2023-05-16 13:52:25,430:INFO:Creating metrics dataframe
2023-05-16 13:52:25,674:INFO:Uploading results into container
2023-05-16 13:52:25,675:INFO:Uploading model into container now
2023-05-16 13:52:25,676:INFO:_master_model_container: 8
2023-05-16 13:52:25,676:INFO:_display_container: 2
2023-05-16 13:52:25,676:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:52:25,676:INFO:create_model() successfully completed......................................
2023-05-16 13:52:25,828:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:25,828:INFO:Creating metrics dataframe
2023-05-16 13:52:25,841:INFO:Initializing Ada Boost Classifier
2023-05-16 13:52:25,841:INFO:Total runtime is 0.26529076894124354 minutes
2023-05-16 13:52:25,846:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:25,846:INFO:Initializing create_model()
2023-05-16 13:52:25,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:25,847:INFO:Checking exceptions
2023-05-16 13:52:25,847:INFO:Importing libraries
2023-05-16 13:52:25,847:INFO:Copying training dataset
2023-05-16 13:52:25,853:INFO:Defining folds
2023-05-16 13:52:25,854:INFO:Declaring metric variables
2023-05-16 13:52:25,859:INFO:Importing untrained model
2023-05-16 13:52:25,867:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:52:25,877:INFO:Starting cross validation
2023-05-16 13:52:25,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:26,551:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,555:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,557:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,566:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,570:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,573:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,584:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,584:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,587:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,590:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,591:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,592:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,595:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,597:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,599:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,600:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,604:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,607:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,610:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,614:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,619:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,620:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,623:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,626:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,627:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,630:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,633:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,709:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,713:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:26,716:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:27,831:INFO:Calculating mean and std
2023-05-16 13:52:27,834:INFO:Creating metrics dataframe
2023-05-16 13:52:28,080:INFO:Uploading results into container
2023-05-16 13:52:28,083:INFO:Uploading model into container now
2023-05-16 13:52:28,083:INFO:_master_model_container: 9
2023-05-16 13:52:28,083:INFO:_display_container: 2
2023-05-16 13:52:28,084:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5998)
2023-05-16 13:52:28,084:INFO:create_model() successfully completed......................................
2023-05-16 13:52:28,256:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:28,256:INFO:Creating metrics dataframe
2023-05-16 13:52:28,271:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:52:28,272:INFO:Total runtime is 0.3057883699735006 minutes
2023-05-16 13:52:28,277:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:28,277:INFO:Initializing create_model()
2023-05-16 13:52:28,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:28,279:INFO:Checking exceptions
2023-05-16 13:52:28,279:INFO:Importing libraries
2023-05-16 13:52:28,279:INFO:Copying training dataset
2023-05-16 13:52:28,287:INFO:Defining folds
2023-05-16 13:52:28,288:INFO:Declaring metric variables
2023-05-16 13:52:28,293:INFO:Importing untrained model
2023-05-16 13:52:28,300:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:52:28,313:INFO:Starting cross validation
2023-05-16 13:52:28,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:29,551:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-16 13:52:29,567:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,569:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,571:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,585:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,587:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,589:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,594:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,597:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,604:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,620:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,622:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,625:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,649:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,652:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,653:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,655:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,657:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,659:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,671:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,672:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,674:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,675:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,677:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,678:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,695:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,697:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,701:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,950:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,952:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:29,953:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:30,929:INFO:Calculating mean and std
2023-05-16 13:52:30,931:INFO:Creating metrics dataframe
2023-05-16 13:52:31,194:INFO:Uploading results into container
2023-05-16 13:52:31,195:INFO:Uploading model into container now
2023-05-16 13:52:31,195:INFO:_master_model_container: 10
2023-05-16 13:52:31,195:INFO:_display_container: 2
2023-05-16 13:52:31,196:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5998, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:52:31,196:INFO:create_model() successfully completed......................................
2023-05-16 13:52:31,377:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:31,378:INFO:Creating metrics dataframe
2023-05-16 13:52:31,391:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:52:31,392:INFO:Total runtime is 0.3578179240226746 minutes
2023-05-16 13:52:31,397:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:31,397:INFO:Initializing create_model()
2023-05-16 13:52:31,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:31,398:INFO:Checking exceptions
2023-05-16 13:52:31,398:INFO:Importing libraries
2023-05-16 13:52:31,398:INFO:Copying training dataset
2023-05-16 13:52:31,404:INFO:Defining folds
2023-05-16 13:52:31,404:INFO:Declaring metric variables
2023-05-16 13:52:31,409:INFO:Importing untrained model
2023-05-16 13:52:31,415:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:52:31,425:INFO:Starting cross validation
2023-05-16 13:52:31,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:31,637:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,640:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,643:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,646:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,648:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,649:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,649:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,652:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,656:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,659:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,659:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,662:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,702:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,706:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,713:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,714:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,716:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,718:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,728:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,735:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,737:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,737:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,740:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,743:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,764:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,769:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,772:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,779:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,782:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:31,784:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:32,947:INFO:Calculating mean and std
2023-05-16 13:52:32,950:INFO:Creating metrics dataframe
2023-05-16 13:52:33,215:INFO:Uploading results into container
2023-05-16 13:52:33,216:INFO:Uploading model into container now
2023-05-16 13:52:33,217:INFO:_master_model_container: 11
2023-05-16 13:52:33,217:INFO:_display_container: 2
2023-05-16 13:52:33,217:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:52:33,217:INFO:create_model() successfully completed......................................
2023-05-16 13:52:33,313:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:33,314:INFO:Creating metrics dataframe
2023-05-16 13:52:33,325:INFO:Initializing Extra Trees Classifier
2023-05-16 13:52:33,325:INFO:Total runtime is 0.39003508090972905 minutes
2023-05-16 13:52:33,329:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:33,329:INFO:Initializing create_model()
2023-05-16 13:52:33,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:33,330:INFO:Checking exceptions
2023-05-16 13:52:33,330:INFO:Importing libraries
2023-05-16 13:52:33,330:INFO:Copying training dataset
2023-05-16 13:52:33,333:INFO:Defining folds
2023-05-16 13:52:33,333:INFO:Declaring metric variables
2023-05-16 13:52:33,337:INFO:Importing untrained model
2023-05-16 13:52:33,340:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:52:33,347:INFO:Starting cross validation
2023-05-16 13:52:33,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:34,015:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,018:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,019:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,019:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,020:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,021:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,029:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,031:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,033:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,061:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,063:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,064:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,065:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,066:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,069:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,069:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,071:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,079:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,082:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,084:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,104:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,105:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,117:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,119:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,121:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,148:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,149:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:34,151:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,249:INFO:Calculating mean and std
2023-05-16 13:52:35,250:INFO:Creating metrics dataframe
2023-05-16 13:52:35,508:INFO:Uploading results into container
2023-05-16 13:52:35,509:INFO:Uploading model into container now
2023-05-16 13:52:35,510:INFO:_master_model_container: 12
2023-05-16 13:52:35,510:INFO:_display_container: 2
2023-05-16 13:52:35,510:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5998, verbose=0, warm_start=False)
2023-05-16 13:52:35,510:INFO:create_model() successfully completed......................................
2023-05-16 13:52:35,623:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:35,623:INFO:Creating metrics dataframe
2023-05-16 13:52:35,635:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:52:35,635:INFO:Total runtime is 0.4285350322723389 minutes
2023-05-16 13:52:35,638:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:35,639:INFO:Initializing create_model()
2023-05-16 13:52:35,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:35,639:INFO:Checking exceptions
2023-05-16 13:52:35,640:INFO:Importing libraries
2023-05-16 13:52:35,640:INFO:Copying training dataset
2023-05-16 13:52:35,644:INFO:Defining folds
2023-05-16 13:52:35,644:INFO:Declaring metric variables
2023-05-16 13:52:35,647:INFO:Importing untrained model
2023-05-16 13:52:35,652:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:52:35,660:INFO:Starting cross validation
2023-05-16 13:52:35,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:35,819:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,821:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,822:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,830:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,833:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,835:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,846:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,847:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,848:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,849:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,850:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,851:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,851:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,853:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,855:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,863:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,865:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,867:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,883:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,884:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,884:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,887:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,887:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:35,889:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,103:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,104:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,105:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,129:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,131:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,133:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,408:INFO:Calculating mean and std
2023-05-16 13:52:37,409:INFO:Creating metrics dataframe
2023-05-16 13:52:37,664:INFO:Uploading results into container
2023-05-16 13:52:37,664:INFO:Uploading model into container now
2023-05-16 13:52:37,665:INFO:_master_model_container: 13
2023-05-16 13:52:37,665:INFO:_display_container: 2
2023-05-16 13:52:37,665:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5998, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:52:37,667:INFO:create_model() successfully completed......................................
2023-05-16 13:52:37,785:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:37,786:INFO:Creating metrics dataframe
2023-05-16 13:52:37,798:INFO:Initializing Dummy Classifier
2023-05-16 13:52:37,799:INFO:Total runtime is 0.4645948688189189 minutes
2023-05-16 13:52:37,802:INFO:SubProcess create_model() called ==================================
2023-05-16 13:52:37,802:INFO:Initializing create_model()
2023-05-16 13:52:37,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022735399820>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:37,803:INFO:Checking exceptions
2023-05-16 13:52:37,803:INFO:Importing libraries
2023-05-16 13:52:37,803:INFO:Copying training dataset
2023-05-16 13:52:37,807:INFO:Defining folds
2023-05-16 13:52:37,808:INFO:Declaring metric variables
2023-05-16 13:52:37,810:INFO:Importing untrained model
2023-05-16 13:52:37,815:INFO:Dummy Classifier Imported successfully
2023-05-16 13:52:37,821:INFO:Starting cross validation
2023-05-16 13:52:37,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:52:37,920:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,922:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,923:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,924:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,924:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,925:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,926:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,931:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,933:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,934:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,936:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,939:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,941:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,942:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,943:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,964:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,964:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,965:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,966:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,966:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,967:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,968:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,968:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,970:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,972:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,973:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,973:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,979:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,981:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,983:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,984:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,987:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,988:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,989:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:37,990:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:37,999:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:38,001:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:38,002:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:52:38,003:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:52:39,111:INFO:Calculating mean and std
2023-05-16 13:52:39,112:INFO:Creating metrics dataframe
2023-05-16 13:52:39,418:INFO:Uploading results into container
2023-05-16 13:52:39,419:INFO:Uploading model into container now
2023-05-16 13:52:39,420:INFO:_master_model_container: 14
2023-05-16 13:52:39,420:INFO:_display_container: 2
2023-05-16 13:52:39,421:INFO:DummyClassifier(constant=None, random_state=5998, strategy='prior')
2023-05-16 13:52:39,421:INFO:create_model() successfully completed......................................
2023-05-16 13:52:39,517:INFO:SubProcess create_model() end ==================================
2023-05-16 13:52:39,517:INFO:Creating metrics dataframe
2023-05-16 13:52:39,537:INFO:Initializing create_model()
2023-05-16 13:52:39,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002273538CC10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5998, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:52:39,537:INFO:Checking exceptions
2023-05-16 13:52:39,540:INFO:Importing libraries
2023-05-16 13:52:39,540:INFO:Copying training dataset
2023-05-16 13:52:39,543:INFO:Defining folds
2023-05-16 13:52:39,543:INFO:Declaring metric variables
2023-05-16 13:52:39,543:INFO:Importing untrained model
2023-05-16 13:52:39,543:INFO:Declaring custom model
2023-05-16 13:52:39,543:INFO:Logistic Regression Imported successfully
2023-05-16 13:52:39,544:INFO:Cross validation set to False
2023-05-16 13:52:39,544:INFO:Fitting Model
2023-05-16 13:52:39,777:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5998, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:52:39,777:INFO:create_model() successfully completed......................................
2023-05-16 13:52:39,910:INFO:_master_model_container: 14
2023-05-16 13:52:39,910:INFO:_display_container: 2
2023-05-16 13:52:39,911:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5998, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:52:39,911:INFO:compare_models() successfully completed......................................
2023-05-16 13:53:30,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:53:30,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:53:30,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:53:30,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-16 13:53:31,498:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-16 13:53:31,930:INFO:PyCaret ClassificationExperiment
2023-05-16 13:53:31,930:INFO:Logging name: clf-default-name
2023-05-16 13:53:31,930:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:53:31,930:INFO:version 3.0.1
2023-05-16 13:53:31,931:INFO:Initializing setup()
2023-05-16 13:53:31,931:INFO:self.USI: 1a7b
2023-05-16 13:53:31,931:INFO:self._variable_keys: {'gpu_n_jobs_param', 'target_param', 'X_test', 'n_jobs_param', 'X', 'idx', '_ml_usecase', 'gpu_param', 'fold_generator', 'logging_param', 'log_plots_param', '_available_plots', 'exp_id', 'html_param', 'fold_shuffle_param', 'y_train', 'is_multiclass', 'fix_imbalance', 'pipeline', 'y', 'seed', 'X_train', 'fold_groups_param', 'data', 'memory', 'y_test', 'exp_name_log', 'USI'}
2023-05-16 13:53:31,931:INFO:Checking environment
2023-05-16 13:53:31,931:INFO:python_version: 3.9.13
2023-05-16 13:53:31,931:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:53:31,931:INFO:machine: AMD64
2023-05-16 13:53:31,931:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:53:31,931:INFO:Memory: svmem(total=7968444416, available=2157219840, percent=72.9, used=5811224576, free=2157219840)
2023-05-16 13:53:31,931:INFO:Physical Core: 6
2023-05-16 13:53:31,931:INFO:Logical Core: 12
2023-05-16 13:53:31,931:INFO:Checking libraries
2023-05-16 13:53:31,931:INFO:System:
2023-05-16 13:53:31,931:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:53:31,931:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:53:31,931:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:53:31,931:INFO:PyCaret required dependencies:
2023-05-16 13:53:31,931:INFO:                 pip: 22.2.2
2023-05-16 13:53:31,931:INFO:          setuptools: 63.4.1
2023-05-16 13:53:31,931:INFO:             pycaret: 3.0.1
2023-05-16 13:53:31,931:INFO:             IPython: 7.31.1
2023-05-16 13:53:31,931:INFO:          ipywidgets: 7.6.5
2023-05-16 13:53:31,931:INFO:                tqdm: 4.64.1
2023-05-16 13:53:31,932:INFO:               numpy: 1.21.6
2023-05-16 13:53:31,932:INFO:              pandas: 1.4.4
2023-05-16 13:53:31,932:INFO:              jinja2: 2.11.3
2023-05-16 13:53:31,932:INFO:               scipy: 1.9.1
2023-05-16 13:53:31,932:INFO:              joblib: 1.2.0
2023-05-16 13:53:31,932:INFO:             sklearn: 1.0.2
2023-05-16 13:53:31,932:INFO:                pyod: 1.0.9
2023-05-16 13:53:31,932:INFO:            imblearn: 0.10.1
2023-05-16 13:53:31,932:INFO:   category_encoders: 2.6.1
2023-05-16 13:53:31,932:INFO:            lightgbm: 3.3.5
2023-05-16 13:53:31,932:INFO:               numba: 0.55.1
2023-05-16 13:53:31,932:INFO:            requests: 2.28.1
2023-05-16 13:53:31,932:INFO:          matplotlib: 3.5.2
2023-05-16 13:53:31,932:INFO:          scikitplot: 0.3.7
2023-05-16 13:53:31,932:INFO:         yellowbrick: 1.5
2023-05-16 13:53:31,932:INFO:              plotly: 5.9.0
2023-05-16 13:53:31,932:INFO:             kaleido: 0.2.1
2023-05-16 13:53:31,932:INFO:         statsmodels: 0.13.2
2023-05-16 13:53:31,932:INFO:              sktime: 0.17.0
2023-05-16 13:53:31,932:INFO:               tbats: 1.1.3
2023-05-16 13:53:31,932:INFO:            pmdarima: 2.0.3
2023-05-16 13:53:31,932:INFO:              psutil: 5.9.0
2023-05-16 13:53:31,932:INFO:PyCaret optional dependencies:
2023-05-16 13:53:31,945:INFO:                shap: Not installed
2023-05-16 13:53:31,945:INFO:           interpret: Not installed
2023-05-16 13:53:31,945:INFO:                umap: Not installed
2023-05-16 13:53:31,945:INFO:    pandas_profiling: Not installed
2023-05-16 13:53:31,945:INFO:  explainerdashboard: Not installed
2023-05-16 13:53:31,945:INFO:             autoviz: Not installed
2023-05-16 13:53:31,945:INFO:           fairlearn: Not installed
2023-05-16 13:53:31,945:INFO:             xgboost: Not installed
2023-05-16 13:53:31,945:INFO:            catboost: Not installed
2023-05-16 13:53:31,945:INFO:              kmodes: Not installed
2023-05-16 13:53:31,945:INFO:             mlxtend: Not installed
2023-05-16 13:53:31,946:INFO:       statsforecast: Not installed
2023-05-16 13:53:31,946:INFO:        tune_sklearn: Not installed
2023-05-16 13:53:31,946:INFO:                 ray: Not installed
2023-05-16 13:53:31,946:INFO:            hyperopt: Not installed
2023-05-16 13:53:31,946:INFO:              optuna: Not installed
2023-05-16 13:53:31,946:INFO:               skopt: Not installed
2023-05-16 13:53:31,946:INFO:              mlflow: Not installed
2023-05-16 13:53:31,946:INFO:              gradio: Not installed
2023-05-16 13:53:31,946:INFO:             fastapi: Not installed
2023-05-16 13:53:31,946:INFO:             uvicorn: Not installed
2023-05-16 13:53:31,946:INFO:              m2cgen: Not installed
2023-05-16 13:53:31,946:INFO:           evidently: Not installed
2023-05-16 13:53:31,946:INFO:               fugue: Not installed
2023-05-16 13:53:31,946:INFO:           streamlit: 1.20.0
2023-05-16 13:53:31,946:INFO:             prophet: Not installed
2023-05-16 13:53:31,946:INFO:None
2023-05-16 13:53:31,946:INFO:Set up data.
2023-05-16 13:53:31,950:INFO:Set up train/test split.
2023-05-16 13:53:31,953:INFO:Set up index.
2023-05-16 13:53:31,953:INFO:Set up folding strategy.
2023-05-16 13:53:31,953:INFO:Assigning column types.
2023-05-16 13:53:31,956:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:53:32,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:53:32,004:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:53:32,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:53:32,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:53:32,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,134:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:53:32,181:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:53:32,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:53:32,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,290:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:53:32,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,452:INFO:Preparing preprocessing pipeline...
2023-05-16 13:53:32,453:INFO:Set up label encoding.
2023-05-16 13:53:32,453:INFO:Set up simple imputation.
2023-05-16 13:53:32,490:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:53:32,495:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Id', 'SepalLengthCm',
                                             'SepalWidthCm', 'PetalLengthCm',
                                             'PetalWidthCm'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0)))],
         verbose=False)
2023-05-16 13:53:32,496:INFO:Creating final display dataframe.
2023-05-16 13:53:32,567:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                3595  
1                                             Species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 6)  
5                                            (150, 6)  
6                                            (105, 6)  
7                                             (45, 6)  
8                                                   5  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               1a7b  
2023-05-16 13:53:32,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:53:32,733:INFO:setup() successfully completed in 0.92s...............
2023-05-16 13:53:32,733:INFO:Initializing compare_models()
2023-05-16 13:53:32,733:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:53:32,733:INFO:Checking exceptions
2023-05-16 13:53:32,735:INFO:Preparing display monitor
2023-05-16 13:53:32,777:INFO:Initializing Logistic Regression
2023-05-16 13:53:32,777:INFO:Total runtime is 0.0 minutes
2023-05-16 13:53:32,783:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:32,783:INFO:Initializing create_model()
2023-05-16 13:53:32,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:32,784:INFO:Checking exceptions
2023-05-16 13:53:32,784:INFO:Importing libraries
2023-05-16 13:53:32,784:INFO:Copying training dataset
2023-05-16 13:53:32,787:INFO:Defining folds
2023-05-16 13:53:32,787:INFO:Declaring metric variables
2023-05-16 13:53:32,791:INFO:Importing untrained model
2023-05-16 13:53:32,798:INFO:Logistic Regression Imported successfully
2023-05-16 13:53:32,806:INFO:Starting cross validation
2023-05-16 13:53:32,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:42,930:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:42,933:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:42,935:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:42,944:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:42,947:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:42,950:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,038:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,040:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,043:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,053:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,055:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,057:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,071:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,073:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,074:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,075:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,077:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,077:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,112:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,114:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,116:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,130:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,134:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,135:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,147:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,150:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,152:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,271:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,273:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:43,274:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,245:INFO:Calculating mean and std
2023-05-16 13:53:44,247:INFO:Creating metrics dataframe
2023-05-16 13:53:44,452:INFO:Uploading results into container
2023-05-16 13:53:44,453:INFO:Uploading model into container now
2023-05-16 13:53:44,453:INFO:_master_model_container: 1
2023-05-16 13:53:44,453:INFO:_display_container: 2
2023-05-16 13:53:44,454:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3595, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:53:44,454:INFO:create_model() successfully completed......................................
2023-05-16 13:53:44,541:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:44,541:INFO:Creating metrics dataframe
2023-05-16 13:53:44,549:INFO:Initializing K Neighbors Classifier
2023-05-16 13:53:44,549:INFO:Total runtime is 0.19619856675465902 minutes
2023-05-16 13:53:44,552:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:44,553:INFO:Initializing create_model()
2023-05-16 13:53:44,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:44,553:INFO:Checking exceptions
2023-05-16 13:53:44,553:INFO:Importing libraries
2023-05-16 13:53:44,553:INFO:Copying training dataset
2023-05-16 13:53:44,557:INFO:Defining folds
2023-05-16 13:53:44,557:INFO:Declaring metric variables
2023-05-16 13:53:44,562:INFO:Importing untrained model
2023-05-16 13:53:44,565:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:53:44,572:INFO:Starting cross validation
2023-05-16 13:53:44,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:44,672:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,687:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,693:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,706:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,709:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,720:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,723:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,725:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,728:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,735:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,737:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,737:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,740:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,747:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,749:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,749:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:44,750:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,758:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,761:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,761:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,763:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,764:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,766:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,780:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,782:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,784:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,787:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,789:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,792:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,798:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,800:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:44,802:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,413:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:47,413:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:53:47,437:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,438:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,439:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,439:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,439:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,440:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,589:INFO:Calculating mean and std
2023-05-16 13:53:47,592:INFO:Creating metrics dataframe
2023-05-16 13:53:47,793:INFO:Uploading results into container
2023-05-16 13:53:47,794:INFO:Uploading model into container now
2023-05-16 13:53:47,794:INFO:_master_model_container: 2
2023-05-16 13:53:47,794:INFO:_display_container: 2
2023-05-16 13:53:47,794:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:53:47,795:INFO:create_model() successfully completed......................................
2023-05-16 13:53:47,880:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:47,880:INFO:Creating metrics dataframe
2023-05-16 13:53:47,889:INFO:Initializing Naive Bayes
2023-05-16 13:53:47,889:INFO:Total runtime is 0.25185277859369914 minutes
2023-05-16 13:53:47,893:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:47,893:INFO:Initializing create_model()
2023-05-16 13:53:47,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:47,893:INFO:Checking exceptions
2023-05-16 13:53:47,893:INFO:Importing libraries
2023-05-16 13:53:47,893:INFO:Copying training dataset
2023-05-16 13:53:47,897:INFO:Defining folds
2023-05-16 13:53:47,897:INFO:Declaring metric variables
2023-05-16 13:53:47,900:INFO:Importing untrained model
2023-05-16 13:53:47,904:INFO:Naive Bayes Imported successfully
2023-05-16 13:53:47,909:INFO:Starting cross validation
2023-05-16 13:53:47,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:47,996:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:47,998:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,000:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,000:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,002:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,004:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,015:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,016:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,017:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,018:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,019:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,027:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,029:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,031:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,040:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,042:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,044:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,055:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,057:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,058:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,063:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,065:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,066:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,070:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,072:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,073:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,082:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,084:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:48,086:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,187:INFO:Calculating mean and std
2023-05-16 13:53:49,188:INFO:Creating metrics dataframe
2023-05-16 13:53:49,390:INFO:Uploading results into container
2023-05-16 13:53:49,391:INFO:Uploading model into container now
2023-05-16 13:53:49,391:INFO:_master_model_container: 3
2023-05-16 13:53:49,391:INFO:_display_container: 2
2023-05-16 13:53:49,391:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:53:49,391:INFO:create_model() successfully completed......................................
2023-05-16 13:53:49,478:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:49,478:INFO:Creating metrics dataframe
2023-05-16 13:53:49,488:INFO:Initializing Decision Tree Classifier
2023-05-16 13:53:49,488:INFO:Total runtime is 0.278512978553772 minutes
2023-05-16 13:53:49,491:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:49,492:INFO:Initializing create_model()
2023-05-16 13:53:49,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:49,492:INFO:Checking exceptions
2023-05-16 13:53:49,492:INFO:Importing libraries
2023-05-16 13:53:49,492:INFO:Copying training dataset
2023-05-16 13:53:49,496:INFO:Defining folds
2023-05-16 13:53:49,496:INFO:Declaring metric variables
2023-05-16 13:53:49,500:INFO:Importing untrained model
2023-05-16 13:53:49,503:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:53:49,511:INFO:Starting cross validation
2023-05-16 13:53:49,512:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:49,599:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,600:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,602:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,604:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,606:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,608:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,616:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,618:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,620:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,624:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,626:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,628:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,634:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,636:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,638:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,642:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,644:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,646:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,652:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,654:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,656:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,661:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,662:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,665:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,665:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,668:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,669:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,673:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,674:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:49,677:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:50,782:INFO:Calculating mean and std
2023-05-16 13:53:50,784:INFO:Creating metrics dataframe
2023-05-16 13:53:50,987:INFO:Uploading results into container
2023-05-16 13:53:50,988:INFO:Uploading model into container now
2023-05-16 13:53:50,988:INFO:_master_model_container: 4
2023-05-16 13:53:50,988:INFO:_display_container: 2
2023-05-16 13:53:50,989:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3595, splitter='best')
2023-05-16 13:53:50,989:INFO:create_model() successfully completed......................................
2023-05-16 13:53:51,073:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:51,073:INFO:Creating metrics dataframe
2023-05-16 13:53:51,083:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:53:51,083:INFO:Total runtime is 0.3050955335299174 minutes
2023-05-16 13:53:51,086:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:51,087:INFO:Initializing create_model()
2023-05-16 13:53:51,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:51,087:INFO:Checking exceptions
2023-05-16 13:53:51,087:INFO:Importing libraries
2023-05-16 13:53:51,087:INFO:Copying training dataset
2023-05-16 13:53:51,091:INFO:Defining folds
2023-05-16 13:53:51,091:INFO:Declaring metric variables
2023-05-16 13:53:51,095:INFO:Importing untrained model
2023-05-16 13:53:51,098:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:53:51,104:INFO:Starting cross validation
2023-05-16 13:53:51,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:51,188:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,189:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,191:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,192:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,193:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,201:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,202:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,204:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,208:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,218:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,219:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,222:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,224:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,225:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,230:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,232:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,233:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,235:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,236:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,239:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,241:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,243:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,244:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,245:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,246:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,246:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,250:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,251:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,251:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,253:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,254:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,257:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,258:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,259:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,261:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,262:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,265:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,266:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,267:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,270:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,271:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,273:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,274:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,275:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,279:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:53:51,280:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,282:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:51,283:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:53:51,284:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,378:INFO:Calculating mean and std
2023-05-16 13:53:52,380:INFO:Creating metrics dataframe
2023-05-16 13:53:52,577:INFO:Uploading results into container
2023-05-16 13:53:52,578:INFO:Uploading model into container now
2023-05-16 13:53:52,579:INFO:_master_model_container: 5
2023-05-16 13:53:52,579:INFO:_display_container: 2
2023-05-16 13:53:52,579:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3595, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:53:52,579:INFO:create_model() successfully completed......................................
2023-05-16 13:53:52,665:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:52,665:INFO:Creating metrics dataframe
2023-05-16 13:53:52,674:INFO:Initializing Ridge Classifier
2023-05-16 13:53:52,675:INFO:Total runtime is 0.33162519534428914 minutes
2023-05-16 13:53:52,678:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:52,678:INFO:Initializing create_model()
2023-05-16 13:53:52,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:52,678:INFO:Checking exceptions
2023-05-16 13:53:52,678:INFO:Importing libraries
2023-05-16 13:53:52,678:INFO:Copying training dataset
2023-05-16 13:53:52,682:INFO:Defining folds
2023-05-16 13:53:52,682:INFO:Declaring metric variables
2023-05-16 13:53:52,686:INFO:Importing untrained model
2023-05-16 13:53:52,690:INFO:Ridge Classifier Imported successfully
2023-05-16 13:53:52,696:INFO:Starting cross validation
2023-05-16 13:53:52,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:52,780:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,781:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,781:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,782:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,783:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,784:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,785:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,786:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,792:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,793:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,795:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,797:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,808:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,809:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,811:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,813:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,814:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,815:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,817:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,818:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,820:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,821:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,823:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,825:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,830:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,831:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,833:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,834:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,840:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,840:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,842:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,845:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,847:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,847:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,849:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,852:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,856:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:53:52,857:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,859:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:52,860:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:53,963:INFO:Calculating mean and std
2023-05-16 13:53:53,965:INFO:Creating metrics dataframe
2023-05-16 13:53:54,167:INFO:Uploading results into container
2023-05-16 13:53:54,167:INFO:Uploading model into container now
2023-05-16 13:53:54,168:INFO:_master_model_container: 6
2023-05-16 13:53:54,168:INFO:_display_container: 2
2023-05-16 13:53:54,168:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=3595, solver='auto', tol=0.001)
2023-05-16 13:53:54,168:INFO:create_model() successfully completed......................................
2023-05-16 13:53:54,252:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:54,253:INFO:Creating metrics dataframe
2023-05-16 13:53:54,262:INFO:Initializing Random Forest Classifier
2023-05-16 13:53:54,262:INFO:Total runtime is 0.35807347297668457 minutes
2023-05-16 13:53:54,265:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:54,265:INFO:Initializing create_model()
2023-05-16 13:53:54,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:54,265:INFO:Checking exceptions
2023-05-16 13:53:54,266:INFO:Importing libraries
2023-05-16 13:53:54,266:INFO:Copying training dataset
2023-05-16 13:53:54,270:INFO:Defining folds
2023-05-16 13:53:54,270:INFO:Declaring metric variables
2023-05-16 13:53:54,273:INFO:Importing untrained model
2023-05-16 13:53:54,278:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:53:54,284:INFO:Starting cross validation
2023-05-16 13:53:54,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:54,942:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,945:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,946:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,947:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,947:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,949:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,968:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,970:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,972:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,991:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,993:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,994:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,996:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,997:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,998:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:54,999:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,001:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,003:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,030:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,033:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,035:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,039:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,042:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,044:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,046:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,048:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,050:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,074:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,077:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:55,079:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,179:INFO:Calculating mean and std
2023-05-16 13:53:56,181:INFO:Creating metrics dataframe
2023-05-16 13:53:56,394:INFO:Uploading results into container
2023-05-16 13:53:56,395:INFO:Uploading model into container now
2023-05-16 13:53:56,396:INFO:_master_model_container: 7
2023-05-16 13:53:56,396:INFO:_display_container: 2
2023-05-16 13:53:56,397:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3595, verbose=0, warm_start=False)
2023-05-16 13:53:56,397:INFO:create_model() successfully completed......................................
2023-05-16 13:53:56,489:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:56,489:INFO:Creating metrics dataframe
2023-05-16 13:53:56,499:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:53:56,499:INFO:Total runtime is 0.3953579346338908 minutes
2023-05-16 13:53:56,503:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:56,503:INFO:Initializing create_model()
2023-05-16 13:53:56,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:56,503:INFO:Checking exceptions
2023-05-16 13:53:56,503:INFO:Importing libraries
2023-05-16 13:53:56,503:INFO:Copying training dataset
2023-05-16 13:53:56,508:INFO:Defining folds
2023-05-16 13:53:56,508:INFO:Declaring metric variables
2023-05-16 13:53:56,512:INFO:Importing untrained model
2023-05-16 13:53:56,515:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:53:56,522:INFO:Starting cross validation
2023-05-16 13:53:56,523:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:56,616:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,617:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,619:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,624:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,626:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,628:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,632:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,634:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,636:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,640:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,642:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,643:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,651:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,653:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,655:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,663:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,665:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,667:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,670:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,672:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,674:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,682:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,684:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,686:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,691:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,693:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,695:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,699:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,701:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:56,703:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:57,914:INFO:Calculating mean and std
2023-05-16 13:53:57,916:INFO:Creating metrics dataframe
2023-05-16 13:53:58,120:INFO:Uploading results into container
2023-05-16 13:53:58,121:INFO:Uploading model into container now
2023-05-16 13:53:58,121:INFO:_master_model_container: 8
2023-05-16 13:53:58,121:INFO:_display_container: 2
2023-05-16 13:53:58,122:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:53:58,122:INFO:create_model() successfully completed......................................
2023-05-16 13:53:58,208:INFO:SubProcess create_model() end ==================================
2023-05-16 13:53:58,208:INFO:Creating metrics dataframe
2023-05-16 13:53:58,218:INFO:Initializing Ada Boost Classifier
2023-05-16 13:53:58,219:INFO:Total runtime is 0.4240273197491964 minutes
2023-05-16 13:53:58,222:INFO:SubProcess create_model() called ==================================
2023-05-16 13:53:58,222:INFO:Initializing create_model()
2023-05-16 13:53:58,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:53:58,222:INFO:Checking exceptions
2023-05-16 13:53:58,222:INFO:Importing libraries
2023-05-16 13:53:58,222:INFO:Copying training dataset
2023-05-16 13:53:58,226:INFO:Defining folds
2023-05-16 13:53:58,226:INFO:Declaring metric variables
2023-05-16 13:53:58,230:INFO:Importing untrained model
2023-05-16 13:53:58,233:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:53:58,239:INFO:Starting cross validation
2023-05-16 13:53:58,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:53:58,487:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,489:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,489:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,490:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,490:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,493:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,508:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,509:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,511:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,515:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,517:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,519:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,526:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,528:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,529:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,529:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,530:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,531:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,531:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,533:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,533:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,541:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,544:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,547:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,556:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,558:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,561:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,568:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,571:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:58,573:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:53:59,740:INFO:Calculating mean and std
2023-05-16 13:53:59,741:INFO:Creating metrics dataframe
2023-05-16 13:53:59,946:INFO:Uploading results into container
2023-05-16 13:53:59,946:INFO:Uploading model into container now
2023-05-16 13:53:59,947:INFO:_master_model_container: 9
2023-05-16 13:53:59,947:INFO:_display_container: 2
2023-05-16 13:53:59,947:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3595)
2023-05-16 13:53:59,947:INFO:create_model() successfully completed......................................
2023-05-16 13:54:00,037:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:00,037:INFO:Creating metrics dataframe
2023-05-16 13:54:00,047:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:54:00,047:INFO:Total runtime is 0.4545007904370626 minutes
2023-05-16 13:54:00,050:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:00,051:INFO:Initializing create_model()
2023-05-16 13:54:00,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:00,051:INFO:Checking exceptions
2023-05-16 13:54:00,051:INFO:Importing libraries
2023-05-16 13:54:00,051:INFO:Copying training dataset
2023-05-16 13:54:00,056:INFO:Defining folds
2023-05-16 13:54:00,056:INFO:Declaring metric variables
2023-05-16 13:54:00,059:INFO:Importing untrained model
2023-05-16 13:54:00,063:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:54:00,070:INFO:Starting cross validation
2023-05-16 13:54:00,071:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:00,756:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,758:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,759:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,818:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,820:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,821:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,868:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,871:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,872:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,874:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,876:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,877:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,878:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,880:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,882:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,891:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,893:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,894:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,901:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,903:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,904:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,904:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,904:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,906:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,907:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,908:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,983:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,985:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:00,986:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,071:INFO:Calculating mean and std
2023-05-16 13:54:02,073:INFO:Creating metrics dataframe
2023-05-16 13:54:02,361:INFO:Uploading results into container
2023-05-16 13:54:02,363:INFO:Uploading model into container now
2023-05-16 13:54:02,364:INFO:_master_model_container: 10
2023-05-16 13:54:02,364:INFO:_display_container: 2
2023-05-16 13:54:02,364:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3595, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:54:02,364:INFO:create_model() successfully completed......................................
2023-05-16 13:54:02,480:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:02,481:INFO:Creating metrics dataframe
2023-05-16 13:54:02,493:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:54:02,494:INFO:Total runtime is 0.4952715833981832 minutes
2023-05-16 13:54:02,497:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:02,498:INFO:Initializing create_model()
2023-05-16 13:54:02,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:02,498:INFO:Checking exceptions
2023-05-16 13:54:02,498:INFO:Importing libraries
2023-05-16 13:54:02,498:INFO:Copying training dataset
2023-05-16 13:54:02,503:INFO:Defining folds
2023-05-16 13:54:02,503:INFO:Declaring metric variables
2023-05-16 13:54:02,508:INFO:Importing untrained model
2023-05-16 13:54:02,512:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:54:02,520:INFO:Starting cross validation
2023-05-16 13:54:02,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:02,630:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,633:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,635:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,645:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,647:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,649:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,663:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,665:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,668:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,682:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,684:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,686:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,691:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,691:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,693:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,695:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,693:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,698:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,705:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,705:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,707:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,707:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,710:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,710:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,732:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,734:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,735:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,740:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,741:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:02,745:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:04,044:INFO:Calculating mean and std
2023-05-16 13:54:04,045:INFO:Creating metrics dataframe
2023-05-16 13:54:04,304:INFO:Uploading results into container
2023-05-16 13:54:04,305:INFO:Uploading model into container now
2023-05-16 13:54:04,306:INFO:_master_model_container: 11
2023-05-16 13:54:04,306:INFO:_display_container: 2
2023-05-16 13:54:04,306:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:54:04,306:INFO:create_model() successfully completed......................................
2023-05-16 13:54:04,415:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:04,415:INFO:Creating metrics dataframe
2023-05-16 13:54:04,432:INFO:Initializing Extra Trees Classifier
2023-05-16 13:54:04,432:INFO:Total runtime is 0.5275794267654419 minutes
2023-05-16 13:54:04,437:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:04,438:INFO:Initializing create_model()
2023-05-16 13:54:04,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:04,439:INFO:Checking exceptions
2023-05-16 13:54:04,439:INFO:Importing libraries
2023-05-16 13:54:04,439:INFO:Copying training dataset
2023-05-16 13:54:04,444:INFO:Defining folds
2023-05-16 13:54:04,445:INFO:Declaring metric variables
2023-05-16 13:54:04,449:INFO:Importing untrained model
2023-05-16 13:54:04,454:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:54:04,461:INFO:Starting cross validation
2023-05-16 13:54:04,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:05,181:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,184:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,186:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,219:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,219:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,221:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,222:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,223:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,225:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,226:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,228:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,229:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,230:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,231:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,233:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,246:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,248:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,250:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,250:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,252:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,254:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,264:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,266:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,268:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,307:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,309:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,311:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,328:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,331:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:05,333:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:06,513:INFO:Calculating mean and std
2023-05-16 13:54:06,514:INFO:Creating metrics dataframe
2023-05-16 13:54:06,793:INFO:Uploading results into container
2023-05-16 13:54:06,793:INFO:Uploading model into container now
2023-05-16 13:54:06,794:INFO:_master_model_container: 12
2023-05-16 13:54:06,794:INFO:_display_container: 2
2023-05-16 13:54:06,794:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3595, verbose=0, warm_start=False)
2023-05-16 13:54:06,795:INFO:create_model() successfully completed......................................
2023-05-16 13:54:06,879:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:06,879:INFO:Creating metrics dataframe
2023-05-16 13:54:06,889:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:54:06,889:INFO:Total runtime is 0.5685322483380636 minutes
2023-05-16 13:54:06,893:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:06,893:INFO:Initializing create_model()
2023-05-16 13:54:06,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:06,893:INFO:Checking exceptions
2023-05-16 13:54:06,893:INFO:Importing libraries
2023-05-16 13:54:06,893:INFO:Copying training dataset
2023-05-16 13:54:06,898:INFO:Defining folds
2023-05-16 13:54:06,898:INFO:Declaring metric variables
2023-05-16 13:54:06,902:INFO:Importing untrained model
2023-05-16 13:54:06,906:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:54:06,913:INFO:Starting cross validation
2023-05-16 13:54:06,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:08,748:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,749:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,751:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,753:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,754:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,755:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,756:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,756:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,769:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,771:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,772:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,789:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,791:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,792:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,808:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,810:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,812:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,817:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,819:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,821:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,823:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,825:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,827:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,953:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,954:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,956:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,968:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,970:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:08,973:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,080:INFO:Calculating mean and std
2023-05-16 13:54:10,082:INFO:Creating metrics dataframe
2023-05-16 13:54:10,351:INFO:Uploading results into container
2023-05-16 13:54:10,352:INFO:Uploading model into container now
2023-05-16 13:54:10,353:INFO:_master_model_container: 13
2023-05-16 13:54:10,353:INFO:_display_container: 2
2023-05-16 13:54:10,354:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3595, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:54:10,354:INFO:create_model() successfully completed......................................
2023-05-16 13:54:10,439:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:10,439:INFO:Creating metrics dataframe
2023-05-16 13:54:10,450:INFO:Initializing Dummy Classifier
2023-05-16 13:54:10,450:INFO:Total runtime is 0.6278695344924927 minutes
2023-05-16 13:54:10,454:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:10,454:INFO:Initializing create_model()
2023-05-16 13:54:10,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B87C190>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:10,454:INFO:Checking exceptions
2023-05-16 13:54:10,454:INFO:Importing libraries
2023-05-16 13:54:10,455:INFO:Copying training dataset
2023-05-16 13:54:10,459:INFO:Defining folds
2023-05-16 13:54:10,459:INFO:Declaring metric variables
2023-05-16 13:54:10,462:INFO:Importing untrained model
2023-05-16 13:54:10,466:INFO:Dummy Classifier Imported successfully
2023-05-16 13:54:10,472:INFO:Starting cross validation
2023-05-16 13:54:10,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:10,571:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,573:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,574:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,574:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,575:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,576:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,577:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,578:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,587:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,589:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,590:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,590:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,591:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,591:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,592:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,593:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,596:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,598:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,599:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,600:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,603:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,604:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,606:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,607:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,611:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,613:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,614:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,615:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,616:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,618:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,619:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,620:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,627:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,628:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,629:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,630:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,635:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,636:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:10,638:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:10,638:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:11,886:INFO:Calculating mean and std
2023-05-16 13:54:11,888:INFO:Creating metrics dataframe
2023-05-16 13:54:12,164:INFO:Uploading results into container
2023-05-16 13:54:12,166:INFO:Uploading model into container now
2023-05-16 13:54:12,166:INFO:_master_model_container: 14
2023-05-16 13:54:12,166:INFO:_display_container: 2
2023-05-16 13:54:12,166:INFO:DummyClassifier(constant=None, random_state=3595, strategy='prior')
2023-05-16 13:54:12,166:INFO:create_model() successfully completed......................................
2023-05-16 13:54:12,266:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:12,266:INFO:Creating metrics dataframe
2023-05-16 13:54:12,288:INFO:Initializing create_model()
2023-05-16 13:54:12,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A45C880>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3595, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:12,289:INFO:Checking exceptions
2023-05-16 13:54:12,294:INFO:Importing libraries
2023-05-16 13:54:12,294:INFO:Copying training dataset
2023-05-16 13:54:12,303:INFO:Defining folds
2023-05-16 13:54:12,303:INFO:Declaring metric variables
2023-05-16 13:54:12,304:INFO:Importing untrained model
2023-05-16 13:54:12,304:INFO:Declaring custom model
2023-05-16 13:54:12,305:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:54:12,306:INFO:Cross validation set to False
2023-05-16 13:54:12,306:INFO:Fitting Model
2023-05-16 13:54:12,699:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3595, verbose=0, warm_start=False)
2023-05-16 13:54:12,699:INFO:create_model() successfully completed......................................
2023-05-16 13:54:12,815:INFO:_master_model_container: 14
2023-05-16 13:54:12,816:INFO:_display_container: 2
2023-05-16 13:54:12,816:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3595, verbose=0, warm_start=False)
2023-05-16 13:54:12,816:INFO:compare_models() successfully completed......................................
2023-05-16 13:54:12,971:INFO:PyCaret ClassificationExperiment
2023-05-16 13:54:12,971:INFO:Logging name: clf-default-name
2023-05-16 13:54:12,971:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-16 13:54:12,971:INFO:version 3.0.1
2023-05-16 13:54:12,971:INFO:Initializing setup()
2023-05-16 13:54:12,971:INFO:self.USI: 4277
2023-05-16 13:54:12,971:INFO:self._variable_keys: {'gpu_n_jobs_param', 'target_param', 'X_test', 'n_jobs_param', 'X', 'idx', '_ml_usecase', 'gpu_param', 'fold_generator', 'logging_param', 'log_plots_param', '_available_plots', 'exp_id', 'html_param', 'fold_shuffle_param', 'y_train', 'is_multiclass', 'fix_imbalance', 'pipeline', 'y', 'seed', 'X_train', 'fold_groups_param', 'data', 'memory', 'y_test', 'exp_name_log', 'USI'}
2023-05-16 13:54:12,971:INFO:Checking environment
2023-05-16 13:54:12,971:INFO:python_version: 3.9.13
2023-05-16 13:54:12,971:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-16 13:54:12,971:INFO:machine: AMD64
2023-05-16 13:54:12,971:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-16 13:54:12,971:INFO:Memory: svmem(total=7968444416, available=628318208, percent=92.1, used=7340126208, free=628318208)
2023-05-16 13:54:12,972:INFO:Physical Core: 6
2023-05-16 13:54:12,972:INFO:Logical Core: 12
2023-05-16 13:54:12,972:INFO:Checking libraries
2023-05-16 13:54:12,972:INFO:System:
2023-05-16 13:54:12,972:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-16 13:54:12,972:INFO:executable: C:\Users\ASUS\anaconda3\python.exe
2023-05-16 13:54:12,972:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-16 13:54:12,972:INFO:PyCaret required dependencies:
2023-05-16 13:54:12,972:INFO:                 pip: 22.2.2
2023-05-16 13:54:12,972:INFO:          setuptools: 63.4.1
2023-05-16 13:54:12,972:INFO:             pycaret: 3.0.1
2023-05-16 13:54:12,972:INFO:             IPython: 7.31.1
2023-05-16 13:54:12,972:INFO:          ipywidgets: 7.6.5
2023-05-16 13:54:12,972:INFO:                tqdm: 4.64.1
2023-05-16 13:54:12,972:INFO:               numpy: 1.21.6
2023-05-16 13:54:12,972:INFO:              pandas: 1.4.4
2023-05-16 13:54:12,972:INFO:              jinja2: 2.11.3
2023-05-16 13:54:12,972:INFO:               scipy: 1.9.1
2023-05-16 13:54:12,972:INFO:              joblib: 1.2.0
2023-05-16 13:54:12,972:INFO:             sklearn: 1.0.2
2023-05-16 13:54:12,972:INFO:                pyod: 1.0.9
2023-05-16 13:54:12,972:INFO:            imblearn: 0.10.1
2023-05-16 13:54:12,972:INFO:   category_encoders: 2.6.1
2023-05-16 13:54:12,972:INFO:            lightgbm: 3.3.5
2023-05-16 13:54:12,972:INFO:               numba: 0.55.1
2023-05-16 13:54:12,973:INFO:            requests: 2.28.1
2023-05-16 13:54:12,973:INFO:          matplotlib: 3.5.2
2023-05-16 13:54:12,973:INFO:          scikitplot: 0.3.7
2023-05-16 13:54:12,973:INFO:         yellowbrick: 1.5
2023-05-16 13:54:12,973:INFO:              plotly: 5.9.0
2023-05-16 13:54:12,973:INFO:             kaleido: 0.2.1
2023-05-16 13:54:12,973:INFO:         statsmodels: 0.13.2
2023-05-16 13:54:12,973:INFO:              sktime: 0.17.0
2023-05-16 13:54:12,973:INFO:               tbats: 1.1.3
2023-05-16 13:54:12,973:INFO:            pmdarima: 2.0.3
2023-05-16 13:54:12,973:INFO:              psutil: 5.9.0
2023-05-16 13:54:12,973:INFO:PyCaret optional dependencies:
2023-05-16 13:54:12,973:INFO:                shap: Not installed
2023-05-16 13:54:12,973:INFO:           interpret: Not installed
2023-05-16 13:54:12,973:INFO:                umap: Not installed
2023-05-16 13:54:12,973:INFO:    pandas_profiling: Not installed
2023-05-16 13:54:12,973:INFO:  explainerdashboard: Not installed
2023-05-16 13:54:12,973:INFO:             autoviz: Not installed
2023-05-16 13:54:12,973:INFO:           fairlearn: Not installed
2023-05-16 13:54:12,973:INFO:             xgboost: Not installed
2023-05-16 13:54:12,973:INFO:            catboost: Not installed
2023-05-16 13:54:12,973:INFO:              kmodes: Not installed
2023-05-16 13:54:12,973:INFO:             mlxtend: Not installed
2023-05-16 13:54:12,973:INFO:       statsforecast: Not installed
2023-05-16 13:54:12,973:INFO:        tune_sklearn: Not installed
2023-05-16 13:54:12,973:INFO:                 ray: Not installed
2023-05-16 13:54:12,973:INFO:            hyperopt: Not installed
2023-05-16 13:54:12,974:INFO:              optuna: Not installed
2023-05-16 13:54:12,974:INFO:               skopt: Not installed
2023-05-16 13:54:12,974:INFO:              mlflow: Not installed
2023-05-16 13:54:12,974:INFO:              gradio: Not installed
2023-05-16 13:54:12,974:INFO:             fastapi: Not installed
2023-05-16 13:54:12,974:INFO:             uvicorn: Not installed
2023-05-16 13:54:12,974:INFO:              m2cgen: Not installed
2023-05-16 13:54:12,974:INFO:           evidently: Not installed
2023-05-16 13:54:12,974:INFO:               fugue: Not installed
2023-05-16 13:54:12,974:INFO:           streamlit: 1.20.0
2023-05-16 13:54:12,974:INFO:             prophet: Not installed
2023-05-16 13:54:12,974:INFO:None
2023-05-16 13:54:12,974:INFO:Set up data.
2023-05-16 13:54:12,978:INFO:Set up train/test split.
2023-05-16 13:54:12,983:INFO:Set up index.
2023-05-16 13:54:12,983:INFO:Set up folding strategy.
2023-05-16 13:54:12,984:INFO:Assigning column types.
2023-05-16 13:54:12,986:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-16 13:54:13,032:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:54:13,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:54:13,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-16 13:54:13,108:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:54:13,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,138:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-16 13:54:13,186:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:54:13,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-16 13:54:13,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,290:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-16 13:54:13,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,444:INFO:Preparing preprocessing pipeline...
2023-05-16 13:54:13,446:INFO:Set up label encoding.
2023-05-16 13:54:13,446:INFO:Set up simple imputation.
2023-05-16 13:54:13,466:INFO:Finished creating preprocessing pipeline.
2023-05-16 13:54:13,469:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Id', 'SepalLengthCm',
                                             'SepalWidthCm', 'PetalLengthCm',
                                             'PetalWidthCm'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose=0))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose=0)))],
         verbose=False)
2023-05-16 13:54:13,469:INFO:Creating final display dataframe.
2023-05-16 13:54:13,532:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                4963  
1                                             Species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 6)  
5                                            (150, 6)  
6                                            (105, 6)  
7                                             (45, 6)  
8                                                   5  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               4277  
2023-05-16 13:54:13,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-16 13:54:13,708:INFO:setup() successfully completed in 0.88s...............
2023-05-16 13:54:13,836:INFO:Initializing compare_models()
2023-05-16 13:54:13,836:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-16 13:54:13,836:INFO:Checking exceptions
2023-05-16 13:54:13,838:INFO:Preparing display monitor
2023-05-16 13:54:13,868:INFO:Initializing Logistic Regression
2023-05-16 13:54:13,869:INFO:Total runtime is 1.654624938964844e-05 minutes
2023-05-16 13:54:13,873:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:13,874:INFO:Initializing create_model()
2023-05-16 13:54:13,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:13,874:INFO:Checking exceptions
2023-05-16 13:54:13,874:INFO:Importing libraries
2023-05-16 13:54:13,874:INFO:Copying training dataset
2023-05-16 13:54:13,878:INFO:Defining folds
2023-05-16 13:54:13,878:INFO:Declaring metric variables
2023-05-16 13:54:13,880:INFO:Importing untrained model
2023-05-16 13:54:13,884:INFO:Logistic Regression Imported successfully
2023-05-16 13:54:13,892:INFO:Starting cross validation
2023-05-16 13:54:13,892:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:14,090:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,092:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,094:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,105:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,107:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,113:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,115:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,117:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,136:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,138:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,140:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,173:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,175:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,177:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,181:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,183:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,184:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,186:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,187:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,189:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,191:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,193:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,195:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,215:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,216:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,218:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,247:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,249:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:14,251:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:15,455:INFO:Calculating mean and std
2023-05-16 13:54:15,457:INFO:Creating metrics dataframe
2023-05-16 13:54:15,736:INFO:Uploading results into container
2023-05-16 13:54:15,737:INFO:Uploading model into container now
2023-05-16 13:54:15,737:INFO:_master_model_container: 1
2023-05-16 13:54:15,737:INFO:_display_container: 2
2023-05-16 13:54:15,738:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4963, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:54:15,738:INFO:create_model() successfully completed......................................
2023-05-16 13:54:15,827:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:15,827:INFO:Creating metrics dataframe
2023-05-16 13:54:15,834:INFO:Initializing K Neighbors Classifier
2023-05-16 13:54:15,834:INFO:Total runtime is 0.032756741841634116 minutes
2023-05-16 13:54:15,837:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:15,837:INFO:Initializing create_model()
2023-05-16 13:54:15,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:15,838:INFO:Checking exceptions
2023-05-16 13:54:15,838:INFO:Importing libraries
2023-05-16 13:54:15,838:INFO:Copying training dataset
2023-05-16 13:54:15,843:INFO:Defining folds
2023-05-16 13:54:15,844:INFO:Declaring metric variables
2023-05-16 13:54:15,847:INFO:Importing untrained model
2023-05-16 13:54:15,852:INFO:K Neighbors Classifier Imported successfully
2023-05-16 13:54:15,858:INFO:Starting cross validation
2023-05-16 13:54:15,859:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:15,942:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:15,959:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:15,968:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:15,968:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:15,988:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:15,989:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:15,990:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:15,993:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,003:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:16,009:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,011:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,012:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:16,014:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,015:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,017:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,017:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,019:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,020:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,021:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,023:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,026:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,026:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:16,046:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,048:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,050:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,063:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,065:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,077:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,078:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,080:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,173:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\neighbors\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  mode, _ = stats.mode(_y[neigh_ind, k], axis=1)

2023-05-16 13:54:16,184:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,187:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,189:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,217:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,219:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:16,221:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,348:INFO:Calculating mean and std
2023-05-16 13:54:17,350:INFO:Creating metrics dataframe
2023-05-16 13:54:17,632:INFO:Uploading results into container
2023-05-16 13:54:17,632:INFO:Uploading model into container now
2023-05-16 13:54:17,633:INFO:_master_model_container: 2
2023-05-16 13:54:17,633:INFO:_display_container: 2
2023-05-16 13:54:17,634:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-16 13:54:17,634:INFO:create_model() successfully completed......................................
2023-05-16 13:54:17,718:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:17,719:INFO:Creating metrics dataframe
2023-05-16 13:54:17,726:INFO:Initializing Naive Bayes
2023-05-16 13:54:17,726:INFO:Total runtime is 0.06429624557495117 minutes
2023-05-16 13:54:17,730:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:17,730:INFO:Initializing create_model()
2023-05-16 13:54:17,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:17,731:INFO:Checking exceptions
2023-05-16 13:54:17,731:INFO:Importing libraries
2023-05-16 13:54:17,731:INFO:Copying training dataset
2023-05-16 13:54:17,736:INFO:Defining folds
2023-05-16 13:54:17,736:INFO:Declaring metric variables
2023-05-16 13:54:17,740:INFO:Importing untrained model
2023-05-16 13:54:17,744:INFO:Naive Bayes Imported successfully
2023-05-16 13:54:17,752:INFO:Starting cross validation
2023-05-16 13:54:17,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:17,840:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,842:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,844:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,851:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,853:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,855:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,867:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,869:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,871:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,880:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,882:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,883:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,887:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,887:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,888:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,889:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,890:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,891:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,895:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,898:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,899:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,906:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,908:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,910:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,910:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,912:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,914:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,922:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,923:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:17,924:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,187:INFO:Calculating mean and std
2023-05-16 13:54:19,189:INFO:Creating metrics dataframe
2023-05-16 13:54:19,493:INFO:Uploading results into container
2023-05-16 13:54:19,494:INFO:Uploading model into container now
2023-05-16 13:54:19,495:INFO:_master_model_container: 3
2023-05-16 13:54:19,495:INFO:_display_container: 2
2023-05-16 13:54:19,495:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-16 13:54:19,495:INFO:create_model() successfully completed......................................
2023-05-16 13:54:19,617:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:19,617:INFO:Creating metrics dataframe
2023-05-16 13:54:19,627:INFO:Initializing Decision Tree Classifier
2023-05-16 13:54:19,627:INFO:Total runtime is 0.09598244031270345 minutes
2023-05-16 13:54:19,632:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:19,632:INFO:Initializing create_model()
2023-05-16 13:54:19,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:19,632:INFO:Checking exceptions
2023-05-16 13:54:19,632:INFO:Importing libraries
2023-05-16 13:54:19,632:INFO:Copying training dataset
2023-05-16 13:54:19,638:INFO:Defining folds
2023-05-16 13:54:19,638:INFO:Declaring metric variables
2023-05-16 13:54:19,642:INFO:Importing untrained model
2023-05-16 13:54:19,647:INFO:Decision Tree Classifier Imported successfully
2023-05-16 13:54:19,655:INFO:Starting cross validation
2023-05-16 13:54:19,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:19,758:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,761:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,762:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,782:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,784:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,786:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,790:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,792:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,796:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,803:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,808:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,815:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,815:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,817:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,818:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,819:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,822:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,824:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,828:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,831:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,832:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,837:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,839:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,841:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,849:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,851:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,853:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,854:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,856:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:19,857:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,293:INFO:Calculating mean and std
2023-05-16 13:54:21,296:INFO:Creating metrics dataframe
2023-05-16 13:54:21,617:INFO:Uploading results into container
2023-05-16 13:54:21,618:INFO:Uploading model into container now
2023-05-16 13:54:21,619:INFO:_master_model_container: 4
2023-05-16 13:54:21,619:INFO:_display_container: 2
2023-05-16 13:54:21,620:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4963, splitter='best')
2023-05-16 13:54:21,620:INFO:create_model() successfully completed......................................
2023-05-16 13:54:21,741:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:21,741:INFO:Creating metrics dataframe
2023-05-16 13:54:21,752:INFO:Initializing SVM - Linear Kernel
2023-05-16 13:54:21,752:INFO:Total runtime is 0.13139551480611167 minutes
2023-05-16 13:54:21,756:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:21,757:INFO:Initializing create_model()
2023-05-16 13:54:21,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:21,757:INFO:Checking exceptions
2023-05-16 13:54:21,757:INFO:Importing libraries
2023-05-16 13:54:21,757:INFO:Copying training dataset
2023-05-16 13:54:21,761:INFO:Defining folds
2023-05-16 13:54:21,761:INFO:Declaring metric variables
2023-05-16 13:54:21,765:INFO:Importing untrained model
2023-05-16 13:54:21,770:INFO:SVM - Linear Kernel Imported successfully
2023-05-16 13:54:21,777:INFO:Starting cross validation
2023-05-16 13:54:21,778:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:21,886:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:21,890:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,893:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,894:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:21,895:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:21,896:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,897:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,901:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,905:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:21,907:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,923:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:21,924:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,927:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,928:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:21,930:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,938:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:21,939:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,942:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,944:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:21,945:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,974:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:21,975:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:21,976:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,977:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,980:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,982:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:21,982:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,984:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:21,985:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,002:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:22,003:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,005:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,008:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,014:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:22,015:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,018:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,020:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,215:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:22,217:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,220:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,222:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:22,223:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,231:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\utils\metaestimators.py", line 109, in __get__
    if not self.check(obj):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1199, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-16 13:54:22,232:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,234:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:22,235:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:22,236:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:23,455:INFO:Calculating mean and std
2023-05-16 13:54:23,457:INFO:Creating metrics dataframe
2023-05-16 13:54:23,782:INFO:Uploading results into container
2023-05-16 13:54:23,782:INFO:Uploading model into container now
2023-05-16 13:54:23,783:INFO:_master_model_container: 5
2023-05-16 13:54:23,783:INFO:_display_container: 2
2023-05-16 13:54:23,785:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4963, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-16 13:54:23,785:INFO:create_model() successfully completed......................................
2023-05-16 13:54:23,911:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:23,911:INFO:Creating metrics dataframe
2023-05-16 13:54:23,923:INFO:Initializing Ridge Classifier
2023-05-16 13:54:23,923:INFO:Total runtime is 0.16758095423380537 minutes
2023-05-16 13:54:23,927:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:23,927:INFO:Initializing create_model()
2023-05-16 13:54:23,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:23,929:INFO:Checking exceptions
2023-05-16 13:54:23,929:INFO:Importing libraries
2023-05-16 13:54:23,929:INFO:Copying training dataset
2023-05-16 13:54:23,935:INFO:Defining folds
2023-05-16 13:54:23,935:INFO:Declaring metric variables
2023-05-16 13:54:23,940:INFO:Importing untrained model
2023-05-16 13:54:23,943:INFO:Ridge Classifier Imported successfully
2023-05-16 13:54:23,951:INFO:Starting cross validation
2023-05-16 13:54:23,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:24,038:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,039:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,042:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,044:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,047:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,049:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,051:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,054:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,064:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,066:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,067:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,070:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,075:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,076:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,078:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,082:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,099:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,100:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,101:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,102:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,104:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,104:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,107:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,111:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,112:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,114:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,116:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,135:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,136:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,138:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,140:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,140:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,141:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,143:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,145:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,146:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 71, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 298, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 73, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\ASUS\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-16 13:54:24,147:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,149:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:24,152:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:25,750:INFO:Calculating mean and std
2023-05-16 13:54:25,755:INFO:Creating metrics dataframe
2023-05-16 13:54:26,092:INFO:Uploading results into container
2023-05-16 13:54:26,092:INFO:Uploading model into container now
2023-05-16 13:54:26,093:INFO:_master_model_container: 6
2023-05-16 13:54:26,093:INFO:_display_container: 2
2023-05-16 13:54:26,094:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4963, solver='auto', tol=0.001)
2023-05-16 13:54:26,094:INFO:create_model() successfully completed......................................
2023-05-16 13:54:26,255:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:26,255:INFO:Creating metrics dataframe
2023-05-16 13:54:26,270:INFO:Initializing Random Forest Classifier
2023-05-16 13:54:26,270:INFO:Total runtime is 0.2066903154055278 minutes
2023-05-16 13:54:26,274:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:26,275:INFO:Initializing create_model()
2023-05-16 13:54:26,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:26,275:INFO:Checking exceptions
2023-05-16 13:54:26,276:INFO:Importing libraries
2023-05-16 13:54:26,276:INFO:Copying training dataset
2023-05-16 13:54:26,282:INFO:Defining folds
2023-05-16 13:54:26,282:INFO:Declaring metric variables
2023-05-16 13:54:26,287:INFO:Importing untrained model
2023-05-16 13:54:26,294:INFO:Random Forest Classifier Imported successfully
2023-05-16 13:54:26,304:INFO:Starting cross validation
2023-05-16 13:54:26,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:27,194:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,196:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,196:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,197:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,198:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,199:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,200:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,202:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,205:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,219:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,222:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,225:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,227:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,228:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,229:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,229:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,231:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,231:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,231:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,233:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,233:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,233:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,264:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,266:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,269:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,428:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,431:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:27,432:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:28,777:INFO:Calculating mean and std
2023-05-16 13:54:28,780:INFO:Creating metrics dataframe
2023-05-16 13:54:29,098:INFO:Uploading results into container
2023-05-16 13:54:29,099:INFO:Uploading model into container now
2023-05-16 13:54:29,100:INFO:_master_model_container: 7
2023-05-16 13:54:29,100:INFO:_display_container: 2
2023-05-16 13:54:29,101:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4963, verbose=0, warm_start=False)
2023-05-16 13:54:29,101:INFO:create_model() successfully completed......................................
2023-05-16 13:54:29,247:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:29,248:INFO:Creating metrics dataframe
2023-05-16 13:54:29,260:INFO:Initializing Quadratic Discriminant Analysis
2023-05-16 13:54:29,261:INFO:Total runtime is 0.2565531174341838 minutes
2023-05-16 13:54:29,267:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:29,267:INFO:Initializing create_model()
2023-05-16 13:54:29,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:29,268:INFO:Checking exceptions
2023-05-16 13:54:29,268:INFO:Importing libraries
2023-05-16 13:54:29,268:INFO:Copying training dataset
2023-05-16 13:54:29,275:INFO:Defining folds
2023-05-16 13:54:29,275:INFO:Declaring metric variables
2023-05-16 13:54:29,281:INFO:Importing untrained model
2023-05-16 13:54:29,287:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-16 13:54:29,296:INFO:Starting cross validation
2023-05-16 13:54:29,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:29,422:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,425:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,427:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,459:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,462:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,464:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,464:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,468:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,468:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,469:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,471:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,472:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,478:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,480:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,482:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,494:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,497:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,499:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,499:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,501:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,503:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,511:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,513:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,513:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,516:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,518:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,542:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,545:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:29,547:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:31,285:INFO:Calculating mean and std
2023-05-16 13:54:31,287:INFO:Creating metrics dataframe
2023-05-16 13:54:31,616:INFO:Uploading results into container
2023-05-16 13:54:31,619:INFO:Uploading model into container now
2023-05-16 13:54:31,619:INFO:_master_model_container: 8
2023-05-16 13:54:31,620:INFO:_display_container: 2
2023-05-16 13:54:31,620:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-16 13:54:31,620:INFO:create_model() successfully completed......................................
2023-05-16 13:54:31,780:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:31,781:INFO:Creating metrics dataframe
2023-05-16 13:54:31,794:INFO:Initializing Ada Boost Classifier
2023-05-16 13:54:31,794:INFO:Total runtime is 0.2987615625063579 minutes
2023-05-16 13:54:31,799:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:31,799:INFO:Initializing create_model()
2023-05-16 13:54:31,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:31,800:INFO:Checking exceptions
2023-05-16 13:54:31,800:INFO:Importing libraries
2023-05-16 13:54:31,801:INFO:Copying training dataset
2023-05-16 13:54:31,808:INFO:Defining folds
2023-05-16 13:54:31,809:INFO:Declaring metric variables
2023-05-16 13:54:31,814:INFO:Importing untrained model
2023-05-16 13:54:31,820:INFO:Ada Boost Classifier Imported successfully
2023-05-16 13:54:31,832:INFO:Starting cross validation
2023-05-16 13:54:31,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:32,295:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,298:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,300:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,309:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,310:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,312:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,319:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,321:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,323:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,332:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,336:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,338:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,338:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,340:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,343:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,379:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,381:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,383:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,396:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,397:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,400:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,400:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,401:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,402:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,404:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,407:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,409:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,412:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,414:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:32,416:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:33,932:INFO:Calculating mean and std
2023-05-16 13:54:33,934:INFO:Creating metrics dataframe
2023-05-16 13:54:34,283:INFO:Uploading results into container
2023-05-16 13:54:34,284:INFO:Uploading model into container now
2023-05-16 13:54:34,284:INFO:_master_model_container: 9
2023-05-16 13:54:34,284:INFO:_display_container: 2
2023-05-16 13:54:34,286:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4963)
2023-05-16 13:54:34,286:INFO:create_model() successfully completed......................................
2023-05-16 13:54:34,414:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:34,415:INFO:Creating metrics dataframe
2023-05-16 13:54:34,428:INFO:Initializing Gradient Boosting Classifier
2023-05-16 13:54:34,428:INFO:Total runtime is 0.34265913565953576 minutes
2023-05-16 13:54:34,434:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:34,435:INFO:Initializing create_model()
2023-05-16 13:54:34,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:34,435:INFO:Checking exceptions
2023-05-16 13:54:34,435:INFO:Importing libraries
2023-05-16 13:54:34,435:INFO:Copying training dataset
2023-05-16 13:54:34,440:INFO:Defining folds
2023-05-16 13:54:34,441:INFO:Declaring metric variables
2023-05-16 13:54:34,446:INFO:Importing untrained model
2023-05-16 13:54:34,450:INFO:Gradient Boosting Classifier Imported successfully
2023-05-16 13:54:34,459:INFO:Starting cross validation
2023-05-16 13:54:34,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:35,484:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,488:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,490:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,491:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,493:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,496:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,509:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,512:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,514:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,525:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,527:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,529:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,531:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,533:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,536:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,539:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,541:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,542:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,544:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,546:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,546:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,578:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,580:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,580:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,584:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,585:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,587:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,587:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,592:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:35,594:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,128:INFO:Calculating mean and std
2023-05-16 13:54:37,133:INFO:Creating metrics dataframe
2023-05-16 13:54:37,497:INFO:Uploading results into container
2023-05-16 13:54:37,498:INFO:Uploading model into container now
2023-05-16 13:54:37,499:INFO:_master_model_container: 10
2023-05-16 13:54:37,499:INFO:_display_container: 2
2023-05-16 13:54:37,499:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4963, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-16 13:54:37,500:INFO:create_model() successfully completed......................................
2023-05-16 13:54:37,638:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:37,638:INFO:Creating metrics dataframe
2023-05-16 13:54:37,650:INFO:Initializing Linear Discriminant Analysis
2023-05-16 13:54:37,650:INFO:Total runtime is 0.3963684678077698 minutes
2023-05-16 13:54:37,656:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:37,656:INFO:Initializing create_model()
2023-05-16 13:54:37,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:37,656:INFO:Checking exceptions
2023-05-16 13:54:37,656:INFO:Importing libraries
2023-05-16 13:54:37,657:INFO:Copying training dataset
2023-05-16 13:54:37,662:INFO:Defining folds
2023-05-16 13:54:37,662:INFO:Declaring metric variables
2023-05-16 13:54:37,667:INFO:Importing untrained model
2023-05-16 13:54:37,673:INFO:Linear Discriminant Analysis Imported successfully
2023-05-16 13:54:37,680:INFO:Starting cross validation
2023-05-16 13:54:37,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:37,813:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,816:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,818:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,823:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,824:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,827:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,841:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,843:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,843:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,845:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,851:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,852:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,864:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,867:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,870:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,873:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,874:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,875:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,876:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,879:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,893:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,893:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,895:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,895:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,898:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,899:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,919:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,921:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:37,923:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:39,437:INFO:Calculating mean and std
2023-05-16 13:54:39,439:INFO:Creating metrics dataframe
2023-05-16 13:54:39,795:INFO:Uploading results into container
2023-05-16 13:54:39,795:INFO:Uploading model into container now
2023-05-16 13:54:39,796:INFO:_master_model_container: 11
2023-05-16 13:54:39,796:INFO:_display_container: 2
2023-05-16 13:54:39,796:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-16 13:54:39,797:INFO:create_model() successfully completed......................................
2023-05-16 13:54:39,926:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:39,926:INFO:Creating metrics dataframe
2023-05-16 13:54:39,939:INFO:Initializing Extra Trees Classifier
2023-05-16 13:54:39,939:INFO:Total runtime is 0.43452001810073854 minutes
2023-05-16 13:54:39,943:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:39,944:INFO:Initializing create_model()
2023-05-16 13:54:39,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:39,945:INFO:Checking exceptions
2023-05-16 13:54:39,945:INFO:Importing libraries
2023-05-16 13:54:39,945:INFO:Copying training dataset
2023-05-16 13:54:39,950:INFO:Defining folds
2023-05-16 13:54:39,950:INFO:Declaring metric variables
2023-05-16 13:54:39,955:INFO:Importing untrained model
2023-05-16 13:54:39,959:INFO:Extra Trees Classifier Imported successfully
2023-05-16 13:54:39,968:INFO:Starting cross validation
2023-05-16 13:54:39,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:40,841:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,846:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,846:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,848:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,850:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,851:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,857:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,862:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,865:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,898:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,902:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,905:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,909:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,914:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,916:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,926:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,933:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,935:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,936:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,937:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,939:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,951:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,953:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:40,956:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:41,004:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:41,007:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:41,010:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:41,080:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:41,081:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:41,083:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:42,593:INFO:Calculating mean and std
2023-05-16 13:54:42,595:INFO:Creating metrics dataframe
2023-05-16 13:54:42,943:INFO:Uploading results into container
2023-05-16 13:54:42,944:INFO:Uploading model into container now
2023-05-16 13:54:42,945:INFO:_master_model_container: 12
2023-05-16 13:54:42,945:INFO:_display_container: 2
2023-05-16 13:54:42,945:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4963, verbose=0, warm_start=False)
2023-05-16 13:54:42,946:INFO:create_model() successfully completed......................................
2023-05-16 13:54:43,073:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:43,073:INFO:Creating metrics dataframe
2023-05-16 13:54:43,087:INFO:Initializing Light Gradient Boosting Machine
2023-05-16 13:54:43,088:INFO:Total runtime is 0.4869913419087728 minutes
2023-05-16 13:54:43,093:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:43,093:INFO:Initializing create_model()
2023-05-16 13:54:43,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:43,093:INFO:Checking exceptions
2023-05-16 13:54:43,093:INFO:Importing libraries
2023-05-16 13:54:43,094:INFO:Copying training dataset
2023-05-16 13:54:43,099:INFO:Defining folds
2023-05-16 13:54:43,100:INFO:Declaring metric variables
2023-05-16 13:54:43,104:INFO:Importing untrained model
2023-05-16 13:54:43,108:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-16 13:54:43,115:INFO:Starting cross validation
2023-05-16 13:54:43,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:43,319:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,321:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,321:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,323:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,323:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,325:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,340:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,342:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,346:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,348:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,363:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,374:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,380:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,386:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,388:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,399:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,401:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,402:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,404:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,404:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,406:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,417:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,419:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,420:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,438:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,441:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:43,443:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:45,020:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:45,022:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:45,023:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:45,522:INFO:Calculating mean and std
2023-05-16 13:54:45,524:INFO:Creating metrics dataframe
2023-05-16 13:54:45,873:INFO:Uploading results into container
2023-05-16 13:54:45,873:INFO:Uploading model into container now
2023-05-16 13:54:45,875:INFO:_master_model_container: 13
2023-05-16 13:54:45,876:INFO:_display_container: 2
2023-05-16 13:54:45,876:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4963, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-16 13:54:45,877:INFO:create_model() successfully completed......................................
2023-05-16 13:54:46,086:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:46,087:INFO:Creating metrics dataframe
2023-05-16 13:54:46,108:INFO:Initializing Dummy Classifier
2023-05-16 13:54:46,108:INFO:Total runtime is 0.5373298486073812 minutes
2023-05-16 13:54:46,116:INFO:SubProcess create_model() called ==================================
2023-05-16 13:54:46,116:INFO:Initializing create_model()
2023-05-16 13:54:46,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E95B75C670>, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:46,117:INFO:Checking exceptions
2023-05-16 13:54:46,118:INFO:Importing libraries
2023-05-16 13:54:46,118:INFO:Copying training dataset
2023-05-16 13:54:46,125:INFO:Defining folds
2023-05-16 13:54:46,125:INFO:Declaring metric variables
2023-05-16 13:54:46,132:INFO:Importing untrained model
2023-05-16 13:54:46,137:INFO:Dummy Classifier Imported successfully
2023-05-16 13:54:46,147:INFO:Starting cross validation
2023-05-16 13:54:46,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-16 13:54:46,267:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,269:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,271:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,272:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,283:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,286:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,287:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,289:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,296:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,298:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,300:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,301:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,325:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,327:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,328:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,329:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,333:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,335:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,336:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,337:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,337:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,338:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,338:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,340:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,346:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,348:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,350:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,351:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,356:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,358:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,360:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,360:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,361:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,362:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,363:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,364:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,379:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,382:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:46,383:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-16 13:54:46,384:WARNING:C:\Users\ASUS\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1370: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-16 13:54:47,933:INFO:Calculating mean and std
2023-05-16 13:54:47,936:INFO:Creating metrics dataframe
2023-05-16 13:54:48,277:INFO:Uploading results into container
2023-05-16 13:54:48,278:INFO:Uploading model into container now
2023-05-16 13:54:48,279:INFO:_master_model_container: 14
2023-05-16 13:54:48,279:INFO:_display_container: 2
2023-05-16 13:54:48,279:INFO:DummyClassifier(constant=None, random_state=4963, strategy='prior')
2023-05-16 13:54:48,279:INFO:create_model() successfully completed......................................
2023-05-16 13:54:48,376:INFO:SubProcess create_model() end ==================================
2023-05-16 13:54:48,376:INFO:Creating metrics dataframe
2023-05-16 13:54:48,405:INFO:Initializing create_model()
2023-05-16 13:54:48,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E93A5261F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4963, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-16 13:54:48,406:INFO:Checking exceptions
2023-05-16 13:54:48,409:INFO:Importing libraries
2023-05-16 13:54:48,409:INFO:Copying training dataset
2023-05-16 13:54:48,412:INFO:Defining folds
2023-05-16 13:54:48,413:INFO:Declaring metric variables
2023-05-16 13:54:48,413:INFO:Importing untrained model
2023-05-16 13:54:48,413:INFO:Declaring custom model
2023-05-16 13:54:48,413:INFO:Logistic Regression Imported successfully
2023-05-16 13:54:48,414:INFO:Cross validation set to False
2023-05-16 13:54:48,414:INFO:Fitting Model
2023-05-16 13:54:48,684:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4963, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:54:48,684:INFO:create_model() successfully completed......................................
2023-05-16 13:54:48,829:INFO:_master_model_container: 14
2023-05-16 13:54:48,829:INFO:_display_container: 2
2023-05-16 13:54:48,829:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4963, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-16 13:54:48,830:INFO:compare_models() successfully completed......................................
